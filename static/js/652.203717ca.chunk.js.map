{"version":3,"file":"static/js/652.203717ca.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/epiviz.scatter.gl/dist/rgb-6a05388e-71531c98.js","../node_modules/epiviz.scatter.gl/dist/specification-processor-c99b2c15-95130668.js","../node_modules/epiviz.scatter.gl/dist/offscreen-webgl-worker-024e95ad-f13502e9.js"],"sourcesContent":["export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function formatDecimal(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nfunction formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nfunction exponent(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n\nfunction formatGroup(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nfunction formatNumerals(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n\n// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n\n// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nfunction formatTrim(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n\nvar prefixExponent;\n\nfunction formatPrefixAuto(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nfunction formatRounded(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n\nfunction identity(x) {\n  return x;\n}\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction formatLocale(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale;\nvar format;\nvar formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nfunction precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n\n/**\n * Create a function which maps a genome pair to a location in the entire genome\n *\n * @param {String} genomeId key from genomeSizes object\n * @returns a function which maps a (chrId, pairNum) => to\n *  a number between 1 and total number of genes in the genome\n */\nconst createPairMapperToGenome = (genomeId) => {\n  let chrSizes = genomeSizes[genomeId];\n\n  let chrStarts = new Map();\n  let cumulativeTotal = 0;\n  chrSizes.forEach((value, key) => {\n    chrStarts.set(key, cumulativeTotal);\n    cumulativeTotal += value;\n  });\n\n  return (chr, pairNum) => {\n    return chrStarts.get(chr) + pairNum;\n  };\n};\n\nclass GenomeScale {\n  /**\n   * A scale used to map a genome pair to a location between -1 and 1 for data visualization.\n   * Also contains inverse and utility functions for getting labels for axis.\n   *\n   * @param {String} genomeId key from genomeSizes object\n   * @param {Array} domain array of length 2 containing the start and end of the genome\n   *   for the scale. ex: [\"chr2:1000\", \"chr3:2000\"]\n   */\n  constructor(genomeId, domain) {\n    if (genomeSizes[genomeId] === undefined) {\n      console.error(`${genomeId} is not a recognized genome!`);\n    }\n    this.genomeId = genomeId;\n    this.domain = domain;\n\n    let [startChr, startPair] = domain[0]\n      .substring(3) // Remove chr\n      .split(\":\"); // split chromesome and pair number\n    startPair = parseInt(startPair);\n\n    let [endChr, endPair] = domain[1].substring(3).split(\":\");\n    endPair = parseInt(endPair);\n\n    this.mapPairToGenomeIndex = createPairMapperToGenome(genomeId);\n    const firstPairInDomain = this.mapPairToGenomeIndex(startChr, startPair);\n    const lastPairInDomain = this.mapPairToGenomeIndex(endChr, endPair);\n    this.mapGenomeIndexToClipSpace = scale(\n      [firstPairInDomain, lastPairInDomain],\n      [-1, 1]\n    );\n    this.mapGenomeIndexToClipSpaceInverse = scale(\n      [-1, 1],\n      [firstPairInDomain, lastPairInDomain]\n    );\n  }\n\n  /**\n   * Map a genome pair to [-1, 1] with the parts.\n   *\n   * @param {String} chr id of chromosome in genome\n   * @param {Number} pair location in chromosome\n   * @returns value in [-1, 1] corresponding to genome range location\n   */\n  toClipSpaceFromParts(chr, pair) {\n    return this.mapGenomeIndexToClipSpace(this.mapPairToGenomeIndex(chr, pair));\n  }\n\n  /**\n   * Utility method for calling this.toClipSpaceFromParts.\n   *\n   * @param {String} pairStr in form \"chrID:geneNumber\" ex: \"chr1:1000\"\n   * @returns value in [-1, 1] corresponding to genome range location\n   */\n  toClipSpaceFromString(pairStr) {\n    let [chr, pair] = pairStr.substring(3).split(\":\");\n    pair = parseInt(pair);\n    return this.toClipSpaceFromParts(chr, pair);\n  }\n\n  /**\n   * Get the gene id from a value between [-1, 1]\n   *\n   * @param {Number} num number between [-1, 1]\n   * @param {String} formatting used for formatting gene number with d3-format\n   * @returns `chr${chrId}:${chrLoc}`\n   */\n  inverse(num, formatting = false) {\n    let genomeSpot = Math.floor(this.mapGenomeIndexToClipSpaceInverse(num));\n    let chrId;\n    let chrLoc;\n    let cumulativeTotal = 0;\n    for (const [chrKey, pairCount] of genomeSizes[this.genomeId].entries()) {\n      if (cumulativeTotal + pairCount >= genomeSpot) {\n        chrLoc = genomeSpot - cumulativeTotal;\n        chrId = chrKey;\n        break;\n      }\n      cumulativeTotal += pairCount;\n    }\n\n    return formatting\n      ? `chr${chrId}:${format(formatting)(chrLoc)}`\n      : `chr${chrId}:${chrLoc}`;\n  }\n\n  getMidpoint(chr1, gene1, chr2, gene2) {\n    const x1 = this.toClipSpaceFromParts(chr1, gene1);\n    const x2 = this.toClipSpaceFromParts(chr2, gene2);\n    const middleGene = this.inverse((x1 + x2) / 2);\n    const [chrId, gene] = middleGene.substring(3).split(\":\");\n    return [chrId, parseInt(gene)];\n  }\n\n  /**\n   * Get a sequence of ticks for a range in the genome.\n   *\n   * @param {Number} start number between [-1, 1]\n   * @param {Number} end number between [-1, 1] > start\n   * @returns object with tickCoords and corresponding tickLabels property\n   */\n  getTickCoordsAndLabels(start, end) {\n    let [startChr, startPair] = this.inverse(start).substring(3).split(\":\");\n    let [endChr, endPair] = this.inverse(end).substring(3).split(\":\");\n\n    const toReturn = [];\n    let suggestedFormat;\n    if (startChr === endChr) {\n      let difference = endPair - startPair;\n      let magnitude = Math.floor(Math.log10(difference));\n      let startingValue = startPair - (startPair % 10 ** magnitude);\n      suggestedFormat = precisionRound(10 ** magnitude, startingValue);\n\n      for (\n        let currValue = startingValue;\n        currValue < endPair;\n        currValue += 10 ** magnitude\n      ) {\n        toReturn.push(this.toClipSpaceFromParts(startChr, currValue));\n      }\n    } else {\n      suggestedFormat = \"1\";\n      for (const chrId of genomeSizes[this.genomeId].keys()) {\n        toReturn.push(this.toClipSpaceFromParts(chrId, 1));\n      }\n    }\n    return {\n      tickCoords: toReturn,\n      tickLabels: toReturn.map((coord) =>\n        this.inverse(coord, format(`.${suggestedFormat}s`))\n      ),\n    };\n  }\n\n  toCallable() {\n    // TODO investigate if using this method in the vertex calculator leads to slow downs\n    const func = (args) => {\n      return this.toClipSpaceFromParts(args[0], args[1]);\n    };\n    func.isGenomeScale = true;\n    func.mapGenomeIndexToClipSpaceInverse =\n      this.mapGenomeIndexToClipSpaceInverse.bind(this);\n    func.getMidpoint = this.getMidpoint.bind(this);\n    func.getTickCoordsAndLabels = this.getTickCoordsAndLabels.bind(this);\n    return func;\n  }\n\n  /**\n   * Utility method for getting a GenomeScale across an entire genome.\n   *\n   * @param {String} genomeId from genomeSizes\n   * @returns a GenomeScale across an entire genome\n   */\n  static completeScale(genomeId) {\n    const chrSizes = genomeSizes[genomeId];\n    const finalEntry = [...chrSizes.entries()][chrSizes.size - 1];\n\n    return new GenomeScale(genomeId, [\n      \"chr1:1\",\n      `chr${finalEntry[0]}:${finalEntry[1]}`,\n    ]);\n  }\n}\n\n/**\n * Available genomes to visualize. Each genome is a map from chromosome id to number of genes in chromosome.\n * Order matters as maps remember insertion order.\n */\nconst genomeSizes = {\n  hg38: new Map([\n    [\"1\", 248956422], // chr1\n    [\"2\", 242193529], // chr2\n    [\"3\", 198295559], // ...\n    [\"4\", 190214555],\n    [\"5\", 181538259],\n    [\"6\", 170805979],\n    [\"7\", 159345973],\n    [\"8\", 145138636],\n    [\"9\", 138394717],\n    [\"10\", 135086622],\n    [\"11\", 133797422],\n    [\"12\", 133275309],\n    [\"13\", 114364328],\n    [\"14\", 107043718],\n    [\"15\", 101991189],\n    [\"16\", 90338345],\n    [\"17\", 83257441],\n    [\"18\", 80373285],\n    [\"19\", 58617616],\n    [\"20\", 64444167], // ...\n    [\"21\", 46709983], // chr21\n    [\"22\", 50818468], // chr22\n    [\"X\", 156040895], // chrX\n    [\"Y\", 57227415], // chrY\n  ]),\n\n  hg19: new Map([\n    [\"1\", 249250621], // chr1\n    [\"2\", 243199373], // chr2\n    [\"3\", 198022430], // ...\n    [\"4\", 191154276],\n    [\"5\", 180915260],\n    [\"6\", 171115067],\n    [\"7\", 159138663],\n    [\"8\", 146364022],\n    [\"9\", 141213431],\n    [\"10\", 135534747],\n    [\"11\", 135006516],\n    [\"12\", 133851895],\n    [\"13\", 115169878],\n    [\"14\", 107349540],\n    [\"15\", 102531392],\n    [\"16\", 90354753],\n    [\"17\", 81195210],\n    [\"18\", 78077248],\n    [\"19\", 59128983],\n    [\"20\", 63025520], // ...\n    [\"21\", 48129895], // chr21\n    [\"22\", 51304566], // chr22\n    [\"X\", 155270560], // chrX\n    [\"Y\", 59373566], // chrY\n  ]),\n\n  mm9: new Map([\n    [\"1\", 197195432],\n    [\"2\", 181748087],\n    [\"3\", 159599783],\n    [\"4\", 155630120],\n    [\"5\", 152537259],\n    [\"6\", 149517037],\n    [\"7\", 152524553],\n    [\"8\", 131738871],\n    [\"9\", 124076172],\n    [\"10\", 129993255],\n    [\"11\", 121843856],\n    [\"12\", 121257530],\n    [\"13\", 120284312],\n    [\"14\", 125194864],\n    [\"15\", 103494974],\n    [\"16\", 98319150],\n    [\"17\", 95272651],\n    [\"18\", 90772031],\n    [\"19\", 61342430],\n    [\"X\", 166650296],\n    [\"Y\", 15902555],\n  ]),\n\n  mm10: new Map([\n    [\"1\", 195471971],\n    [\"2\", 182113224],\n    [\"3\", 160039680],\n    [\"4\", 156508116],\n    [\"5\", 151834684],\n    [\"6\", 149736546],\n    [\"7\", 145441459],\n    [\"8\", 129401213],\n    [\"9\", 124595110],\n    [\"10\", 130694993],\n    [\"11\", 122082543],\n    [\"12\", 120129022],\n    [\"13\", 120421639],\n    [\"14\", 124902244],\n    [\"15\", 104043685],\n    [\"16\", 98207768],\n    [\"17\", 94987271],\n    [\"18\", 90702639],\n    [\"19\", 61431566],\n    [\"X\", 171031299],\n    [\"Y\", 91744698],\n  ]),\n\n  mm39: new Map([\n    [\"1\", 195154279], // chr1\n    [\"2\", 181755017], // chr2\n    [\"3\", 159745316], // ...\n    [\"4\", 156860686],\n    [\"5\", 151758149],\n    [\"6\", 149588044],\n    [\"7\", 144995196],\n    [\"8\", 130127694],\n    [\"9\", 124359700],\n    [\"10\", 130530862],\n    [\"11\", 121973369],\n    [\"12\", 120092757],\n    [\"13\", 120883175],\n    [\"14\", 125139656],\n    [\"15\", 104073951],\n    [\"16\", 98008968],\n    [\"17\", 95294699], // ...\n    [\"18\", 90720763], // chr18\n    [\"19\", 61420004], // chr19\n    [\"X\", 169476592], // chrX\n    [\"Y\", 91455967], // chrY\n  ]),\n};\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nfunction color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb$1(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb$1, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\n/**\n * Returns a linear scale to map elements in domain to elements in range.\n * @param {Array} domain array of length two containing minimum and maximum values\n * @param {Array} range array of length two containing minimum and maximum values\n * @returns linear scale mapping domain to range\n */\nfunction scale(domain, range) {\n  const domainLength = domain[1] - domain[0];\n  const rangeLength = range[1] - range[0];\n  const slope = rangeLength / domainLength;\n  const intercept = range[1] - slope * domain[1];\n  return (x) => slope * x + intercept;\n}\n\n/**\n * Maps RGB values to integer for webgl buffer.\n *\n * @param {Integer} red value from 0 to 255\n * @param {Integer} green value from 0 to 255\n * @param {Integer} blue value from 0 to 255\n * @returns RGB hex value as integer\n */\nfunction rgbToHex(red, green, blue) {\n  return (red << 16) | (green << 8) | (blue << 0);\n}\n\nfunction rgbStringToHex(rgb) {\n  const colorVals = rgb.substring(4, rgb.length - 1).split(\",\");\n  return rgbToHex(...colorVals.map((asStr) => parseInt(asStr)));\n}\n\nfunction colorSpecifierToHex(specifier) {\n  if (!isNaN(specifier)) {\n    // Specifier is already a hex value\n    return Math.floor(specifier);\n  }\n  const asColor = color(specifier);\n  return rgbToHex(asColor.r, asColor.g, asColor.b);\n}\n\n/**\n * Get the VIEWPORT of the specification to be used by the mouseReader.\n * If all types for a dimension across tracks are categorical or genomic,\n * will default to [-1, 1] for that dimension for the mouseReader. If X or Y\n * has a fixed value, it will consider the width or height channel domains.\n *\n * @param {Object} specification of visualization\n * @returns [smallestX, largestX, smallestY, largestY] of viewport\n */\nfunction getViewportForSpecification(specification) {\n  let smallestX = Number.POSITIVE_INFINITY;\n  let largestX = Number.NEGATIVE_INFINITY;\n  let smallestY = Number.POSITIVE_INFINITY;\n  let largestY = Number.NEGATIVE_INFINITY;\n\n  specification.tracks.forEach((track) => {\n    let xDomain = track.x.domain;\n    if (\n      !xDomain &&\n      track.x.value !== undefined &&\n      track.width.domain !== undefined\n    ) {\n      xDomain = track.width.domain;\n    }\n    let yDomain = track.y.domain;\n    if (\n      !yDomain &&\n      track.y.value !== undefined &&\n      track.height &&\n      track.height.domain !== undefined\n    ) {\n      yDomain = track.height.domain;\n    }\n\n    if (xDomain) {\n      smallestX = xDomain[0] < smallestX ? xDomain[0] : smallestX;\n      largestX = xDomain[1] > largestX ? xDomain[1] : largestX;\n    }\n    if (yDomain) {\n      smallestY = yDomain[0] < smallestY ? yDomain[0] : smallestY;\n      largestY = yDomain[1] > largestY ? yDomain[1] : largestY;\n    }\n  });\n  smallestX = smallestX === Number.POSITIVE_INFINITY ? -1 : smallestX;\n  largestX = largestX === Number.NEGATIVE_INFINITY ? 1 : largestX;\n  smallestY = smallestY === Number.POSITIVE_INFINITY ? -1 : smallestY;\n  largestY = largestY === Number.NEGATIVE_INFINITY ? 1 : largestY;\n\n  return [smallestX, largestX, smallestY, largestY];\n}\n\n/**\n * Given a specification, return a SCALE to be used for mapping data points to clip space\n * for the drawer.\n *\n * @param {String} dimension either x or y\n * @param {Object} specification for the visualization\n * @returns function which can be used to map to an \"x\" or \"y\" value\n */\nconst getScaleForSpecification = (dimension, specification) => {\n  if (dimension !== \"x\" && dimension !== \"y\") {\n    console.error(`${dimension} is not x or y!`);\n  }\n  let genomic = false;\n  let genome;\n  for (const track of specification.tracks) {\n    if (track[dimension].type && track[dimension].type.includes(\"genomic\")) {\n      genome = track[dimension].genome;\n      genomic = true;\n      break;\n    }\n  }\n\n  if (!genomic) {\n    const viewport = getViewportForSpecification(specification);\n    if (dimension === \"x\") {\n      return scale([viewport[0], viewport[1]], [-1, 1]);\n    }\n    return scale([viewport[2], viewport[3]], [-1, 1]);\n  }\n\n  const geneScale = GenomeScale.completeScale(genome);\n\n  let smallestGene = undefined;\n  let smallestGeneValue = Number.POSITIVE_INFINITY;\n  let largestGene = undefined;\n  let largestGeneValue = Number.NEGATIVE_INFINITY;\n\n  for (const track of specification.tracks) {\n    let xDomain = track[dimension].domain;\n    if (xDomain) {\n      if (geneScale.toClipSpaceFromString(xDomain[0]) < smallestGeneValue) {\n        smallestGeneValue = geneScale.toClipSpaceFromString(xDomain[0]);\n        smallestGene = xDomain[0];\n      }\n\n      if (geneScale.toClipSpaceFromString(xDomain[1]) > largestGeneValue) {\n        largestGeneValue = geneScale.toClipSpaceFromString(xDomain[1]);\n        largestGene = xDomain[1];\n      }\n    }\n  }\n\n  const asScale = new GenomeScale(genome, [smallestGene, largestGene]);\n  return asScale.toCallable();\n};\n\nconst RELATIVE_LENGTH_UNITS = [\n  \"em\",\n  \"ex\",\n  \"ch\",\n  \"rem\",\n  \"lh\",\n  \"vw\",\n  \"vh\",\n  \"vmin\",\n  \"vmax\",\n  \"%\",\n];\nconst getPixelMeasurement = (cssMeasurement) => {\n  if (RELATIVE_LENGTH_UNITS.some((unit) => cssMeasurement.includes(unit))) {\n    return false;\n  }\n  const asFloat = parseFloat(cssMeasurement);\n  return isNaN(asFloat) ? false : asFloat;\n};\n\nconst DEFAULT_MARGIN = \"50px\";\nconst DEFAULT_WIDTH = \"100%\";\nconst DEFAULT_HEIGHT = DEFAULT_WIDTH;\nconst getDimAndMarginStyleForSpecification = (specification) => {\n  let toReturn = {};\n  const calculatedMargins = {};\n  if (specification.margins === undefined) {\n    toReturn.margin = DEFAULT_MARGIN;\n    calculatedMargins.top = DEFAULT_MARGIN;\n    calculatedMargins.right = DEFAULT_MARGIN;\n    calculatedMargins.bottom = DEFAULT_MARGIN;\n    calculatedMargins.left = DEFAULT_MARGIN;\n  } else {\n    calculatedMargins.top =\n      specification.margins.top === undefined\n        ? DEFAULT_MARGIN\n        : specification.margins.top;\n    calculatedMargins.right =\n      specification.margins.right === undefined\n        ? DEFAULT_MARGIN\n        : specification.margins.right;\n    calculatedMargins.bottom =\n      specification.margins.bottom === undefined\n        ? DEFAULT_MARGIN\n        : specification.margins.bottom;\n    calculatedMargins.left =\n      specification.margins.left === undefined\n        ? DEFAULT_MARGIN\n        : specification.margins.left;\n    // Shorthand for top right bottom left\n    toReturn.margin = `${calculatedMargins.top}\n                       ${calculatedMargins.right}\n                       ${calculatedMargins.bottom}\n                       ${calculatedMargins.left}`;\n  }\n\n  const calculatedWidth = specification.width || DEFAULT_WIDTH;\n  const calculatedHeight = specification.height || DEFAULT_HEIGHT;\n  const allMeasurements = [\n    calculatedMargins.top,\n    calculatedMargins.right,\n    calculatedMargins.bottom,\n    calculatedMargins.left,\n    calculatedWidth,\n    calculatedHeight,\n  ];\n\n  if (allMeasurements.every(getPixelMeasurement)) {\n    // Let's encode as a number to allow users using typescript or doing weird DOM things able to define\n    // the width and height explicitly\n    toReturn.width =\n      getPixelMeasurement(calculatedWidth) -\n      getPixelMeasurement(calculatedMargins.left) -\n      getPixelMeasurement(calculatedMargins.right);\n    toReturn.height =\n      getPixelMeasurement(calculatedHeight) -\n      getPixelMeasurement(calculatedMargins.bottom) -\n      getPixelMeasurement(calculatedMargins.top);\n  } else {\n    // If user is using css units in their margins and dimensions, then use css calc\n    toReturn.width = `calc(\n      ${calculatedWidth} - \n      ${calculatedMargins.left} - \n      ${calculatedMargins.right}\n    )`;\n\n    toReturn.height = `calc(\n      ${calculatedHeight} - \n      ${calculatedMargins.top} - \n      ${calculatedMargins.bottom}\n    )`;\n  }\n  return toReturn;\n};\n\n/**\n * We need to calculate points on the arc for that mark type, but it needs to be quick.\n * In addition, it shouldn't be a perfect circle, and also should look somewhat arc like.\n * This utility funciton returns function that takes a value between 0 and 1 where 0 maps\n * to the first control point, and 1 maps to the third control point.\n *\n * https://math.stackexchange.com/a/1361717\n *\n * @param {Array} P0 first control point\n * @param {Array} P1 second control point\n * @param {Array} P2 third control point\n * @returns a function [0, 1] -> point on curve\n */\nconst getQuadraticBezierCurveForPoints = (P0, P1, P2) => {\n  const x = (t) =>\n    (1 - t) ** 2 * P0[0] + 2 * t * (1 - t) * P1[0] + t ** 2 * P2[0];\n  const y = (t) =>\n    (1 - t) ** 2 * P0[1] + 2 * t * (1 - t) * P1[1] + t ** 2 * P2[1];\n  return (t) => [x(t), y(t)];\n};\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nvar constant = x => () => x;\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb = (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = rgb$1(start)).r, (end = rgb$1(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = rgb$1(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\n\nexport { Color as C, DEFAULT_WIDTH as D, Rgb as R, DEFAULT_HEIGHT as a, getViewportForSpecification as b, getScaleForSpecification as c, formatPrefix as d, exponent as e, formatSpecifier as f, getDimAndMarginStyleForSpecification as g, format as h, constant as i, color as j, define as k, extend as l, rgbBasis as m, rgb$1 as n, rgbConvert as o, precisionRound as p, nogamma as q, rgb as r, scale as s, hue as t, brighter as u, darker as v, colorSpecifierToHex as w, rgbStringToHex as x, getQuadraticBezierCurveForPoints as y };\n","import { k as define, l as extend, m as rgbBasis, n as rgb$1, R as Rgb, o as rgbConvert, C as Color, q as nogamma, t as hue, u as brighter, v as darker, c as getScaleForSpecification, w as colorSpecifierToHex, s as scale, x as rgbStringToHex, y as getQuadraticBezierCurveForPoints } from './rgb-6a05388e-71531c98.js';\n\nconst radians = Math.PI / 180;\nconst degrees = 180 / Math.PI;\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix$2(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix$2, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction cubehelix$1(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = cubehelix$2(start)).h, (end = cubehelix$2(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\ncubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\n// Each size unit refers to 1/200 of the clip space\n// e.g. if the canvas is 1000x1000 pixels, and the size value for a mark\n// is 10, then that mark takes up 10/200 = 1/20 of the clip space which\n// is equal to 50 pixels\nconst SIZE_UNITS = 1 / 100;\n\nconst NUMBER_OF_VERTICES_PER_ARC = 20;\n\nconst ARC_HEIGHT_MODIFIER = 10;\n\n/**\n * Get a curve representing the arc with given start and end points\n *\n * https://math.stackexchange.com/a/1484684\n *\n * @param {Array} P0 start of arc\n * @param {Array} P2 end of arc\n * @returns function mapping 0 to beginning of arc, and 1 to end of arc\n */\nconst getCurveForArc = (P0, P2) => {\n  const midpoint = [P0[0] / 2 + P2[0] / 2, P0[1] / 2 + P2[1] / 2];\n  const slope = (P2[1] - P0[1]) / (P2[0] - P0[0]);\n  const distance = Math.sqrt((P2[1] - P0[1]) ** 2 + (P2[0] - P0[0]) ** 2);\n  if (!isFinite(slope)) {\n    // vertical slope\n    return getQuadraticBezierCurveForPoints(\n      P0,\n      [P0[0] - distance, midpoint[1]],\n      P2\n    );\n  }\n\n  const parameterized = (t) => [\n    midpoint[0] + (t / distance) * (P0[1] - P2[1]),\n    midpoint[1] + (t / distance) * (P2[0] - P0[0]),\n  ];\n\n  return getQuadraticBezierCurveForPoints(\n    P0,\n    parameterized(distance * ARC_HEIGHT_MODIFIER),\n    P2\n  );\n};\n\n/**\n * Transform a mark with a range for coordinates into a simpler mark to draw.\n *\n * @param {Object} mark that contains ranges for x or y\n * @returns mark with fixed x and y but with appropriate width and height for drawing\n */\nconst transformGenomicRangeToStandard = (mark, xScale, yScale) => {\n  let x, y, width, height;\n  if (Array.isArray(mark.x)) {\n    let x1 = xScale(mark.x[0]);\n    x = mark.x[0];\n    width = (xScale(mark.x[1]) - x1) / SIZE_UNITS;\n  } else {\n    x = mark.x;\n    width = mark.width;\n  }\n\n  if (Array.isArray(mark.y)) {\n    let y1 = yScale(mark.y[0]);\n    y = mark.y[0];\n    height = (yScale(mark.y[1]) - y1) / SIZE_UNITS;\n  } else {\n    y = mark.y;\n    height = mark.height;\n  }\n  return {\n    x,\n    y,\n    width,\n    height,\n  };\n};\n\n/**\n * Transform a mark with a range for coordinates and a range for width or height into a simpler mark to draw.\n *\n * @param {Object} mark that contains ranges for x and y, and potentially ranges for width and height\n * @returns mark with fixed x, y, width, and height for drawing\n */\nconst transformGenomicRangeArcToStandard = (mark, xScale, yScale) => {\n  let x, y, width, height;\n  if (Array.isArray(mark.x)) {\n    x = xScale.getMidpoint(\n      mark.x[0][0],\n      mark.x[0][1],\n      mark.x[1][0],\n      mark.x[1][1]\n    );\n    let x2 = xScale.getMidpoint(\n      mark.width[0][0],\n      mark.width[0][1],\n      mark.width[1][0],\n      mark.width[1][1]\n    );\n    let x1ClipSpace = xScale(x);\n    let x2ClipSpace = xScale(x2);\n\n    x = x1ClipSpace < x2ClipSpace ? x : x2;\n    width = Math.abs(xScale(x2) - x1ClipSpace) / SIZE_UNITS;\n  } else {\n    x = mark.x;\n    width = mark.width;\n  }\n\n  if (Array.isArray(mark.y)) {\n    y = yScale.getMidpoint(\n      mark.y[0][0],\n      mark.y[0][1],\n      mark.y[1][0],\n      mark.y[1][1]\n    );\n    let y2 = yScale.getMidpoint(\n      mark.height[0][0],\n      mark.height[0][1],\n      mark.height[1][0],\n      mark.height[1][1]\n    );\n\n    let y1ClipSpace = xScale(y);\n    let y2ClipSpace = xScale(y2);\n\n    y = y1ClipSpace < y2ClipSpace ? y : y2;\n    height = Math.abs(yScale(y2) - y1ClipSpace) / SIZE_UNITS;\n  } else {\n    y = mark.y;\n    height = mark.height;\n  }\n  return {\n    x,\n    y,\n    width,\n    height,\n  };\n};\n\nclass VertexCalculator {\n  /**\n   * A class used to construct the vertices of marks that are given to the drawer to draw.\n   *\n   * @param {Function or GenomeScale} xScale maps the x values of the data to clip space [-1, 1]\n   * @param {Function or GenomeScale} yScale maps the y values of the data to clip space [-1, 1]\n   * @param {Object} track from specification\n   */\n  constructor(xScale, yScale, track) {\n    this.xScale = xScale;\n    this.yScale = yScale;\n\n    this.track = track;\n    this.drawMode = getDrawModeForTrack(track);\n  }\n\n  /**\n   * Construct the vertices of a mark.\n   *\n   * @param {Object} mark to draw\n   * @returns vertices of mark\n   */\n  calculateForMark(mark) {\n    if (\n      this.track.x.type === \"genomicRange\" ||\n      this.track.y.type === \"genomicRange\"\n    ) {\n      if (this.track.mark === \"arc\") {\n        return this._calculateForMark(\n          transformGenomicRangeArcToStandard(mark, this.xScale, this.yScale)\n        );\n      }\n      return this._calculateForMark(\n        transformGenomicRangeToStandard(mark, this.xScale, this.yScale)\n      );\n    }\n    return this._calculateForMark(mark);\n  }\n\n  _calculateForMark(mark) {\n    if (this.track.mark === \"area\") {\n      const toReturn = this._getVerticesForAreaSection(mark);\n      this.lastMark = mark;\n      return toReturn;\n    }\n\n    if (this.track.mark === \"tick\") {\n      return this._getVerticesForTick(mark);\n    }\n\n    if (this.track.mark === \"line\") {\n      return this._getVertexForDot(mark);\n    }\n\n    if (this.track.mark === \"rect\") {\n      return this._getVerticesForRect(mark);\n    }\n\n    if (this.track.mark === \"arc\") {\n      return this._getVerticesForArc(mark);\n    }\n\n    switch (mark.shape) {\n      case \"dot\":\n        if (this.drawMode === \"POINTS\") {\n          return this._getVertexForDot(mark);\n        } else {\n          return this._getVerticesForSquare(mark);\n        }\n      case \"triangle\":\n        return this._getVerticesForTriangle(mark);\n      case \"diamond\":\n        return this._getVerticesForPolygon(mark, 4);\n      case \"pentagon\":\n        return this._getVerticesForPolygon(mark, 5);\n      case \"hexagon\":\n        return this._getVerticesForPolygon(mark, 6);\n      case \"circle\":\n        return this._getVerticesForPolygon(mark, 16);\n      case \"cross\":\n        return this._getVerticesForCross(mark);\n      default:\n        console.error(`${mark.shape} is not a valid shape!`);\n    }\n  }\n\n  _mapToGPUSpace(vertices) {\n    let isX = false;\n    return vertices.map((coord) => {\n      isX = !isX;\n      return isX ? this.xScale(coord) : this.yScale(coord);\n    });\n  }\n\n  _getVerticesForArc(mark) {\n    const startPoint = this._mapToGPUSpace([mark.x, mark.y]);\n    const quadraticCurve = getCurveForArc(startPoint, [\n      startPoint[0] + mark.width * SIZE_UNITS,\n      startPoint[1] + mark.height * SIZE_UNITS,\n    ]);\n\n    const vertices = [\n      ...quadraticCurve(0),\n      ...quadraticCurve(1 / NUMBER_OF_VERTICES_PER_ARC),\n    ];\n\n    for (let i = 2; i < NUMBER_OF_VERTICES_PER_ARC + 1; i++) {\n      const nextPoint = quadraticCurve(i / NUMBER_OF_VERTICES_PER_ARC);\n      vertices.push(\n        vertices[vertices.length - 2],\n        vertices[vertices.length - 1],\n        nextPoint[0],\n        nextPoint[1]\n      );\n    }\n\n    return vertices;\n  }\n\n  _getVerticesForAreaSection(mark) {\n    if (!this.lastMark) {\n      return [];\n    }\n\n    return this._mapToGPUSpace([\n      mark.x,\n      mark.y,\n      this.lastMark.x,\n      this.lastMark.y,\n      mark.x,\n      0, // TODO: Replace 0 to let area charts center around some other number\n      this.lastMark.x,\n      this.lastMark.y,\n      this.lastMark.x,\n      0,\n      mark.x,\n      0,\n    ]);\n  }\n\n  _getVerticesForPolygon(mark, sides) {\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n    const vertices = [];\n\n    for (let theta = 0; theta < 2 * Math.PI; theta += (2 * Math.PI) / sides) {\n      vertices.push(\n        center[0],\n        center[1],\n        center[0] + (mark.size / 2) * Math.cos(theta) * SIZE_UNITS,\n        center[1] + (mark.size / 2) * Math.sin(theta) * SIZE_UNITS,\n        center[0] +\n          (mark.size / 2) *\n            Math.cos(theta + (2 * Math.PI) / sides) *\n            SIZE_UNITS,\n        center[1] +\n          (mark.size / 2) * Math.sin(theta + (2 * Math.PI) / sides) * SIZE_UNITS\n      );\n    }\n    return vertices;\n  }\n\n  _getVerticesForTriangle(mark) {\n    //     1\n    //    / \\\n    //   2---3\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n\n    return [\n      center[0],\n      center[1] + (mark.size / 2) * SIZE_UNITS,\n      center[0] - (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n      center[0] + (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n    ];\n  }\n\n  _getVertexForDot(mark) {\n    return this._mapToGPUSpace([mark.x, mark.y]);\n  }\n\n  _getVerticesForSquare(mark) {\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n    return [\n      center[0] + (mark.size / 2) * SIZE_UNITS, //  2------1,4\n      center[1] + (mark.size / 2) * SIZE_UNITS, //  |    /  |\n      center[0] - (mark.size / 2) * SIZE_UNITS, //  |  /    |\n      center[1] + (mark.size / 2) * SIZE_UNITS, // 3,5------6\n      center[0] - (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n      center[0] + (mark.size / 2) * SIZE_UNITS,\n      center[1] + (mark.size / 2) * SIZE_UNITS,\n      center[0] - (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n      center[0] + (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n    ];\n  }\n\n  _getVerticesForRect(mark) {\n    //  1-----------3,6\n    //  |       /    |\n    //  |     /      |\n    // 2,5-----------4\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n    return [\n      center[0],\n      center[1] + mark.height * SIZE_UNITS,\n      center[0],\n      center[1],\n      center[0] + mark.width * SIZE_UNITS,\n      center[1] + mark.height * SIZE_UNITS,\n      center[0] + mark.width * SIZE_UNITS,\n      center[1],\n      center[0],\n      center[1],\n      center[0] + mark.width * SIZE_UNITS,\n      center[1] + mark.height * SIZE_UNITS,\n    ];\n  }\n\n  _getVerticesForTick(mark) {\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n    // 1----2\n    if (this.track.width) {\n      return [\n        center[0],\n        center[1],\n        center[0] + mark.width * SIZE_UNITS,\n        center[1],\n      ];\n    }\n\n    // 1\n    // |\n    // 2\n    if (mark.height) {\n      // default to mark value which has default if height never specified in track\n      return [\n        center[0],\n        center[1],\n        center[0],\n        center[1] + mark.height * SIZE_UNITS,\n      ];\n    }\n  }\n}\n\nfunction colors(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar Accent = colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n\nvar Dark2 = colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n\nvar Paired = colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n\nvar Pastel1 = colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n\nvar Pastel2 = colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n\nvar Set1 = colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n\nvar Set2 = colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n\nvar Set3 = colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n\nvar Tableau10 = colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n\nvar ramp$1 = scheme => rgbBasis(scheme[scheme.length - 1]);\n\nvar scheme$q = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nvar BrBG = ramp$1(scheme$q);\n\nvar scheme$p = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nvar PRGn = ramp$1(scheme$p);\n\nvar scheme$o = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nvar PiYG = ramp$1(scheme$o);\n\nvar scheme$n = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nvar PuOr = ramp$1(scheme$n);\n\nvar scheme$m = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nvar RdBu = ramp$1(scheme$m);\n\nvar scheme$l = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nvar RdGy = ramp$1(scheme$l);\n\nvar scheme$k = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nvar RdYlBu = ramp$1(scheme$k);\n\nvar scheme$j = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nvar RdYlGn = ramp$1(scheme$j);\n\nvar scheme$i = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nvar Spectral = ramp$1(scheme$i);\n\nvar scheme$h = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nvar BuGn = ramp$1(scheme$h);\n\nvar scheme$g = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nvar BuPu = ramp$1(scheme$g);\n\nvar scheme$f = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nvar GnBu = ramp$1(scheme$f);\n\nvar scheme$e = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nvar OrRd = ramp$1(scheme$e);\n\nvar scheme$d = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nvar PuBuGn = ramp$1(scheme$d);\n\nvar scheme$c = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nvar PuBu = ramp$1(scheme$c);\n\nvar scheme$b = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nvar PuRd = ramp$1(scheme$b);\n\nvar scheme$a = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nvar RdPu = ramp$1(scheme$a);\n\nvar scheme$9 = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nvar YlGnBu = ramp$1(scheme$9);\n\nvar scheme$8 = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nvar YlGn = ramp$1(scheme$8);\n\nvar scheme$7 = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nvar YlOrBr = ramp$1(scheme$7);\n\nvar scheme$6 = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nvar YlOrRd = ramp$1(scheme$6);\n\nvar scheme$5 = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nvar Blues = ramp$1(scheme$5);\n\nvar scheme$4 = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nvar Greens = ramp$1(scheme$4);\n\nvar scheme$3 = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nvar Greys = ramp$1(scheme$3);\n\nvar scheme$2 = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nvar Purples = ramp$1(scheme$2);\n\nvar scheme$1 = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nvar Reds = ramp$1(scheme$1);\n\nvar scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nvar Oranges = ramp$1(scheme);\n\nfunction cividis(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\n      + \")\";\n}\n\nvar cubehelix = cubehelixLong(cubehelix$2(300, 0.5, 0.0), cubehelix$2(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix$2(-100, 0.75, 0.35), cubehelix$2(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix$2(260, 0.75, 0.35), cubehelix$2(80, 1.50, 0.8));\n\nvar c$1 = cubehelix$2();\n\nfunction rainbow(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c$1.h = 360 * t - 100;\n  c$1.s = 1.5 - 1.5 * ts;\n  c$1.l = 0.8 - 0.9 * ts;\n  return c$1 + \"\";\n}\n\nvar c = rgb$1(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nfunction sinebow(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n\nfunction turbo(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\n      + \")\";\n}\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nvar d3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  schemeCategory10: category10,\n  schemeAccent: Accent,\n  schemeDark2: Dark2,\n  schemePaired: Paired,\n  schemePastel1: Pastel1,\n  schemePastel2: Pastel2,\n  schemeSet1: Set1,\n  schemeSet2: Set2,\n  schemeSet3: Set3,\n  schemeTableau10: Tableau10,\n  interpolateBrBG: BrBG,\n  schemeBrBG: scheme$q,\n  interpolatePRGn: PRGn,\n  schemePRGn: scheme$p,\n  interpolatePiYG: PiYG,\n  schemePiYG: scheme$o,\n  interpolatePuOr: PuOr,\n  schemePuOr: scheme$n,\n  interpolateRdBu: RdBu,\n  schemeRdBu: scheme$m,\n  interpolateRdGy: RdGy,\n  schemeRdGy: scheme$l,\n  interpolateRdYlBu: RdYlBu,\n  schemeRdYlBu: scheme$k,\n  interpolateRdYlGn: RdYlGn,\n  schemeRdYlGn: scheme$j,\n  interpolateSpectral: Spectral,\n  schemeSpectral: scheme$i,\n  interpolateBuGn: BuGn,\n  schemeBuGn: scheme$h,\n  interpolateBuPu: BuPu,\n  schemeBuPu: scheme$g,\n  interpolateGnBu: GnBu,\n  schemeGnBu: scheme$f,\n  interpolateOrRd: OrRd,\n  schemeOrRd: scheme$e,\n  interpolatePuBuGn: PuBuGn,\n  schemePuBuGn: scheme$d,\n  interpolatePuBu: PuBu,\n  schemePuBu: scheme$c,\n  interpolatePuRd: PuRd,\n  schemePuRd: scheme$b,\n  interpolateRdPu: RdPu,\n  schemeRdPu: scheme$a,\n  interpolateYlGnBu: YlGnBu,\n  schemeYlGnBu: scheme$9,\n  interpolateYlGn: YlGn,\n  schemeYlGn: scheme$8,\n  interpolateYlOrBr: YlOrBr,\n  schemeYlOrBr: scheme$7,\n  interpolateYlOrRd: YlOrRd,\n  schemeYlOrRd: scheme$6,\n  interpolateBlues: Blues,\n  schemeBlues: scheme$5,\n  interpolateGreens: Greens,\n  schemeGreens: scheme$4,\n  interpolateGreys: Greys,\n  schemeGreys: scheme$3,\n  interpolatePurples: Purples,\n  schemePurples: scheme$2,\n  interpolateReds: Reds,\n  schemeReds: scheme$1,\n  interpolateOranges: Oranges,\n  schemeOranges: scheme,\n  interpolateCividis: cividis,\n  interpolateCubehelixDefault: cubehelix,\n  interpolateRainbow: rainbow,\n  interpolateWarm: warm,\n  interpolateCool: cool,\n  interpolateSinebow: sinebow,\n  interpolateTurbo: turbo,\n  interpolateViridis: viridis,\n  interpolateMagma: magma,\n  interpolateInferno: inferno,\n  interpolatePlasma: plasma\n});\n\n// Default channel values of specification which is passed to webgl drawer\nconst DEFAULT_CHANNELS = Object.freeze({\n  size: {\n    value: 1,\n    numComponents: 1,\n    type: \"float\",\n  },\n  color: {\n    value: 255 ** 3,\n    numComponents: 1,\n    type: \"float\",\n  },\n  x: {\n    value: 0,\n    numComponents: null, // x and y are placed in an attribute vector in the shader that is already handled\n    type: null, // i.e. calls to numComponents or type should not happen as it would break the shader\n  },\n  y: {\n    value: 0,\n    numComponents: null,\n    type: null,\n  },\n  opacity: {\n    value: 1,\n    numComponents: 1,\n    type: \"float\",\n  },\n  shape: {\n    value: \"dot\",\n    numComponents: null,\n    type: null, // Will not interact with shader code\n  },\n  width: {\n    // Default values for width and height add complications\n    // to mapping geometry and creating tick vertices\n    value: undefined,\n    numComponents: 1,\n    type: \"float\",\n  },\n\n  height: {\n    value: undefined,\n    numComponents: 1,\n    type: \"float\",\n  },\n});\n\nconst DEFAULT_MAX_SIZE = 100;\nconst DEFAULT_MIN_SIZE = 0;\nconst DEFAULT_MIN_OPACITY = 0;\n\nconst DEFAULT_MIN_WIDTH = 0;\nconst DEFAULT_MIN_HEIGHT = 0;\nconst DEFAULT_MAX_WIDTH = 1 / SIZE_UNITS;\nconst DEFAULT_MAX_HEIGHT = 1 / SIZE_UNITS;\n\nconst DEFAULT_COLOR_SCHEME = \"interpolateBrBG\";\n\n// first value is undefined as categories are 1-indexed\nconst SHAPES = [undefined, \"dot\", \"triangle\", \"circle\", \"diamond\"];\n\n/**\n * Given a track, determine the WebGL draw mode for it\n *\n * @param {Object} track from specification\n * @returns WebGLDrawMode as a string\n */\nconst getDrawModeForTrack = (track) => {\n  switch (track.mark) {\n    case \"line\":\n      return \"LINE_STRIP\";\n    case \"tick\":\n    case \"arc\":\n      return \"LINES\";\n    case \"point\":\n      if (track.shape && track.shape.value !== \"dot\") {\n        return \"TRIANGLES\";\n      } else {\n        return \"POINTS\";\n      }\n    case \"rect\":\n    case \"area\":\n      return \"TRIANGLES\";\n  }\n};\n\nclass SpecificationProcessor {\n  /**\n   * Process a specification by reading in the data, the channel information, and producing an\n   * iterator like interface with getNextTrack to feed to a drawer.\n   *\n   * @param {Object} specification user defined specification\n   * @param {Function} callback function to call after all the data has been loaded\n   */\n  constructor(specification, callback) {\n    this.index = 0;\n    this.specification = specification;\n    if (typeof specification.defaultData === \"string\") {\n      // data is a url to get\n      this.dataPromise = fetch(specification.defaultData)\n        .then((response) => response.text())\n        .then((text) => (this.data = text.split(\"\\n\")));\n    } else if (specification.defaultData) {\n      // default data is defined, assumed to be an object\n      this.data = specification.defaultData;\n      this.isInlineData = true;\n    }\n    this.tracks = specification.tracks.map((track) => new Track(this, track));\n\n    const allPromises = this.tracks\n      .map((track) => track.dataPromise)\n      .filter((p) => p); // Removes undefined\n    if (this.dataPromise) {\n      allPromises.push(this.dataPromise);\n    }\n\n    this.xScale = getScaleForSpecification(\"x\", specification);\n    this.yScale = getScaleForSpecification(\"y\", specification);\n\n    // When all tracks have acquired their data, call the callback\n    // TODO: Allow tracks to be processed while waiting for others, need to keep in mind order\n    Promise.all(allPromises).then(() => callback(this));\n  }\n\n  /**\n   * Get the next track to process\n   * @returns {@link Track}\n   */\n  getNextTrack() {\n    if (this.index >= this.tracks.length) {\n      return null;\n    }\n    return this.tracks[this.index++];\n  }\n}\n\nclass Track {\n  /**\n   * Process a track from a specification by loading data and producing an iterator\n   * like interface with getNextDataPoint or getNextMark.\n   *\n   * @param {Object} specification user defined visualization\n   * @param {Object} track user defined track\n   */\n  constructor(specification, track) {\n    this.track = track;\n\n    if (typeof track.data === \"string\") {\n      // Track has its own data to GET\n      this.dataPromise = fetch(track.data)\n        .then((response) => response.text())\n        .then((text) => {\n          this.data = text.split(/[\\n\\r]+/);\n          this.processHeadersAndMappers();\n          this.hasOwnData = true;\n        });\n    } else if (track.data) {\n      // Track has its own inline data\n      this.data = track.data;\n      this.isInlineData = true;\n      this.processHeadersAndMappers();\n      this.hasOwnData = true;\n    } else if (specification.data) {\n      // Track does not have its own data, but the specification has default data\n      this.data = specification.data;\n      this.isInlineData = specification.isInlineData;\n      this.processHeadersAndMappers();\n    } else if (specification.dataPromise) {\n      // Track does not have its own data, but the specification is GETting default data\n      specification.dataPromise.then(() => {\n        this.data = specification.data;\n        this.processHeadersAndMappers();\n      });\n    } else {\n      console.error(\n        `Could not find data (no defaultData in specification and no data specified for this track) for track ${track}.`\n      );\n    }\n  }\n\n  /**\n   * Read the headers from the first row of data and then build functions to map a data row\n   * to a channel value for drawing. Ultimately a method due to clunky constructor.\n   */\n  processHeadersAndMappers() {\n    // Processing headers\n    if (this.isInlineData) {\n      this.headers = Object.keys(this.data);\n      this.data.length = this.data[this.headers[0]].length; // assign length to data object for iteration\n      this.index = 0;\n    } else {\n      this.headers = this.data[0].split(\",\");\n      this.index = 1; // 1 to skip header\n    }\n\n    // Creating channel mappers\n    this.channelMaps = new Map();\n    Object.keys(DEFAULT_CHANNELS).forEach((channel) => {\n      this.channelMaps.set(channel, this.buildMapperForChannel(channel));\n    });\n  }\n\n  /**\n   * Get the next data point from the track. Returns null when all points have been returned.\n   * @returns A data point with the x and y coordinates and other attributes from the header\n   */\n  getNextDataPoint() {\n    if (this.index >= this.data.length) {\n      return null;\n    }\n\n    const toReturn = { geometry: { coordinates: [], dimensions: [] } };\n    let splitted;\n    if (this.isInlineData) {\n      splitted = this.headers.map((header) => this.data[header][this.index]);\n    } else {\n      const currRow = this.data[this.index];\n      splitted = currRow.split(\",\");\n    }\n\n    this.index++;\n\n    this.headers.forEach((header, index) => {\n      toReturn[header] = splitted[index];\n    });\n\n    const rawHeight = this.channelMaps.get(\"height\")(splitted);\n    const rawWidth = this.channelMaps.get(\"width\")(splitted);\n    const x = this.channelMaps.get(\"x\")(splitted);\n    const y = this.channelMaps.get(\"y\")(splitted);\n    toReturn.geometry.coordinates.push(x, y);\n    toReturn.geometry.dimensions.push(rawWidth, rawHeight);\n    return toReturn;\n  }\n\n  /**\n   * Get the next mark from the track for the drawer to process. Returns null when all\n   * marks have been returned.\n   * @returns An object containing information used to draw a mark for a row of data.\n   */\n  getNextMark() {\n    // Getting the next mark cannot modify the data objects as other tracks may refer to\n    // the same data\n    if (this.index >= this.data.length) {\n      return null;\n    }\n\n    const toReturn = {};\n    let splitted;\n    if (this.isInlineData) {\n      splitted = this.headers.map((header) => this.data[header][this.index]);\n    } else {\n      const currRow = this.data[this.index];\n      splitted = currRow.split(\",\");\n    }\n\n    this.index++;\n\n    this.channelMaps.forEach((mapper, channel) => {\n      toReturn[channel] = mapper(splitted);\n    });\n\n    return toReturn;\n  }\n\n  /**\n   * Builds a function which maps an attribute value to a channel value for use by the drawer.\n   * The function will return a default if not present in the track, or a constant if\n   * value is defined.\n   *\n   * @param {String} channel one of the channels listed in default channels\n   * @returns the function\n   */\n  buildMapperForChannel(channel) {\n    if (channel in this.track) {\n      const channelInfo = this.track[channel];\n      if (\"value\" in channelInfo) {\n        if (channel === \"color\") {\n          channelInfo.value = colorSpecifierToHex(channelInfo.value);\n        }\n        return () => channelInfo.value;\n      } else {\n        const attributeIndex = this.headers.indexOf(channelInfo.attribute);\n        let attrMapper;\n\n        switch (channelInfo.type) {\n          case \"inline\":\n            attrMapper = buildMapperForInlineChannel(channel);\n            break;\n          case \"quantitative\":\n            attrMapper = buildMapperForQuantitiveChannel(channel, channelInfo);\n            break;\n          case \"categorical\":\n            attrMapper = buildMapperForCategoricalChannel(channel, channelInfo);\n            break;\n          case \"genomic\":\n            const chrAttributeIndex = this.headers.indexOf(\n              channelInfo.chrAttribute\n            );\n            const geneAttributeIndex = this.headers.indexOf(\n              channelInfo.geneAttribute\n            );\n            attrMapper = buildMapperForGenomicChannel(channel);\n            return (row) =>\n              attrMapper(row[chrAttributeIndex], row[geneAttributeIndex]);\n          case \"genomicRange\":\n            const genomicAttributeIndices = [\n              this.headers.indexOf(channelInfo.chrAttribute),\n              this.headers.indexOf(channelInfo.startAttribute),\n              this.headers.indexOf(channelInfo.endAttribute),\n            ];\n            attrMapper = buildMapperForGenomicRangeChannel(\n              channel);\n            return (\n              row // Pass in values for the genomic attributes to mapper\n            ) =>\n              attrMapper(...genomicAttributeIndices.map((index) => row[index]));\n        }\n        return (row) => attrMapper(row[attributeIndex]);\n      }\n    } else {\n      return () => DEFAULT_CHANNELS[channel].value;\n    }\n  };\n}\n\n/**\n * Build a function which maps an attribute that is a channel value to a compatible value.\n *\n * @param {String} channel the name of the channel to build an inline mapper for\n * @param {Object} channelInfo the info of the channel from a track\n * @returns a function that maps attribute values to appropriate channel values.\n */\nconst buildMapperForInlineChannel = (channel, channelInfo) => {\n  switch (channel) {\n    case \"width\":\n    case \"height\":\n    case \"size\":\n      return (dimension) => parseFloat(dimension);\n    case \"color\":\n      return (color) => colorSpecifierToHex(color);\n    default:\n      console.info(\n        `No special behavior for ${channel} as an inline attribute.`\n      );\n      return (inlineValue) => inlineValue;\n  }\n};\n\n/**\n * Build a function which maps a numerical value for an attribute to a property of a mark\n * @param {*} channel the name of the quantitative channel to map\n * @param {*} channelInfo the object containing info for this channel from the specification\n * @returns a function that maps a data attribute value to a channel value\n */\nconst buildMapperForQuantitiveChannel = (channel, channelInfo) => {\n  switch (channel) {\n    case \"x\":\n    case \"y\":\n      // Map x and y to itself, but we need a function to do it\n      return (coord) => parseFloat(coord);\n    case \"opacity\":\n      return scale(channelInfo.domain, [\n        channelInfo.minOpacity || DEFAULT_MIN_OPACITY,\n        1,\n      ]);\n    case \"size\":\n      return scale(channelInfo.domain, [\n        channelInfo.minSize || DEFAULT_MIN_SIZE,\n        channelInfo.maxSize || DEFAULT_MAX_SIZE,\n      ]);\n    case \"color\":\n      const d3colorScale =\n        !channelInfo.colorScheme || !(channelInfo.colorScheme in d3)\n          ? d3[DEFAULT_COLOR_SCHEME]\n          : d3[channelInfo.colorScheme];\n      const zeroToOneScale = scale(channelInfo.domain, [0, 1]);\n      return (attrValue) =>\n        rgbStringToHex(d3colorScale(zeroToOneScale(attrValue)));\n    case \"width\":\n      return scale(channelInfo.domain, [\n        channelInfo.minWidth || DEFAULT_MIN_WIDTH,\n        channelInfo.maxWidth || DEFAULT_MAX_WIDTH,\n      ]);\n    case \"height\":\n      return scale(channelInfo.domain, [\n        channelInfo.minHeight || DEFAULT_MIN_HEIGHT,\n        channelInfo.maxHeight || DEFAULT_MAX_WIDTH,\n      ]);\n    default:\n      console.error(\n        `${channel} is not a supported channel for quantitative attributes!`\n      );\n  }\n};\n\n/**\n * Build a function which maps a discrete (integers are possible) value for an attribute\n * to a property of a mark\n * @param {*} channel the name of the categorical channel to map\n * @param {*} channelInfo the object containing info for this channel from the specification\n * @returns a function that maps a data attribute value to a channel value\n */\nconst buildMapperForCategoricalChannel = (channel, channelInfo) => {\n  const categoryTracker = new Map();\n  let channelScale;\n  switch (channel) {\n    case \"x\":\n    case \"y\":\n      // +1 here to avoid setting x or y at a boundary that makes it not visible\n      channelScale = scale([1, channelInfo.cardinality + 1], [-1, 1]);\n      break;\n    case \"opacity\":\n      channelScale = scale(\n        [1, channelInfo.cardinality],\n        [channelInfo.minOpacity || DEFAULT_MIN_OPACITY, 1]\n      );\n      break;\n    case \"size\":\n      channelScale = scale(\n        [1, channelInfo.cardinality],\n        [\n          channelInfo.minSize || DEFAULT_MIN_SIZE,\n          channelInfo.maxSize || DEFAULT_MAX_SIZE,\n        ]\n      );\n      break;\n    case \"shape\":\n      channelScale = (categoryId) => SHAPES[categoryId % SHAPES.length];\n      break;\n    case \"color\":\n      let d3colorScale =\n        !channelInfo.colorScheme || !(channelInfo.colorScheme in d3)\n          ? d3[DEFAULT_COLOR_SCHEME]\n          : d3[channelInfo.colorScheme];\n      if (Array.isArray(d3colorScale)) {\n        console.error(\n          \"Currenty only interpolating color schemes are supported, using default\"\n        );\n        d3colorScale = d3[DEFAULT_COLOR_SCHEME];\n      }\n      const zeroToOneScale = scale([1, channelInfo.cardinality], [0, 1]);\n      channelScale = (categoryId) =>\n        rgbStringToHex(d3colorScale(zeroToOneScale(categoryId)));\n      break;\n    case \"width\":\n      channelScale = scale(\n        [1, channelInfo.cardinality],\n        [\n          channelInfo.minWidth || DEFAULT_MIN_WIDTH,\n          channelInfo.maxWidth || DEFAULT_MAX_WIDTH,\n        ]\n      );\n      break;\n    case \"height\":\n      channelScale = scale(\n        [1, channelInfo.cardinality],\n        [\n          channelInfo.minHeight || DEFAULT_MIN_HEIGHT,\n          channelInfo.maxHeight || DEFAULT_MAX_HEIGHT,\n        ]\n      );\n      break;\n    default:\n      console.error(\n        `${channel} is not a supported channel for categorical attributes!`\n      );\n  }\n\n  return (attrValue) => {\n    if (!categoryTracker.has(attrValue)) {\n      categoryTracker.set(attrValue, categoryTracker.size + 1);\n    }\n    return channelScale(categoryTracker.get(attrValue));\n  };\n};\n\n/**\n * Build a function which maps a genome chr, gene, to an object consumable by a GenomeScale\n * @param {*} channel either x or y\n * @param {*} channelInfo the object containing info for this channel from the specification\n * @returns a function that maps (genomeChr, geneLoc) -> [chrId, geneLocation]\n *  ex: [\"X\", 200]\n */\nconst buildMapperForGenomicChannel = (channel, channelInfo) => {\n  switch (channel) {\n    case \"x\":\n    case \"y\":\n      return (chr, gene) => {\n        let chrId = chr.startsWith(\"chr\") ? chr.substring(3) : chr.toString();\n        return [chrId, parseInt(gene)];\n      };\n\n    default:\n      console.error(\n        `${channel} is not a supported channel for genomic attributes!`\n      );\n  }\n};\n\n/**\n * Build a function which maps a genome chr, start, and end to an object consumable by a scale\n * @param {*} channel either x or y, width or height may be included if doing arc marks\n * @param {*} channelInfo the object containing info for this channel from the specification\n * @returns a function that maps (genomeChr, genomeStart, genomeEnd) -> an object containing mark metadata for position\n *  format: [chrId, geneLocation, chrId2, geneLocation2]\n *  ex: [\"1\", 1000, \"X\", 2000]\n */\nconst buildMapperForGenomicRangeChannel = (channel, channelInfo) => {\n  switch (channel) {\n    case \"width\":\n    case \"height\":\n    case \"x\":\n    case \"y\":\n      return (chr, genomeStart, genomeEnd) => {\n        let chrId = chr.startsWith(\"chr\") ? chr.substring(3) : chr.toString();\n        return [\n          [chrId, parseInt(genomeStart)],\n          [chrId, parseInt(genomeEnd)],\n        ];\n      };\n\n    default:\n      console.error(\n        `${channel} is not a supported channel for genomic attributes!`\n      );\n  }\n};\n\nexport { DEFAULT_CHANNELS as D, SpecificationProcessor as S, VertexCalculator as V, SIZE_UNITS as a, transformGenomicRangeToStandard as b, getDrawModeForTrack as g, transformGenomicRangeArcToStandard as t };\n","import { s as scale, w as colorSpecifierToHex } from './rgb-6a05388e-71531c98.js';\nimport { S as SpecificationProcessor, V as VertexCalculator, g as getDrawModeForTrack, D as DEFAULT_CHANNELS } from './specification-processor-c99b2c15-95130668.js';\n\nclass Drawer {\n  /**\n   * An interface for drawing on a canvas.\n   *\n   * @param {Object} drawingData object containing keys for {@link Drawer#receiveViewport}\n   *  and canvas key used for drawing.\n   */\n  constructor(drawingData) {\n    this.canvas = drawingData.canvas;\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n    this.receiveViewport(drawingData);\n  }\n\n  /**\n   * Method to set the viewport for the drawer.\n   *\n   * @param {Object} viewportData object containing minX,maxX,minY,maxY,xRange,yRange viewport data for drawer\n   */\n  receiveViewport(viewportData) {\n    this.minX = viewportData.minX;\n    this.maxX = viewportData.maxX;\n    this.minY = viewportData.minY;\n    this.maxY = viewportData.maxY;\n    this.currentXRange = viewportData.xRange;\n    this.currentYRange = viewportData.yRange;\n\n    this.needsAnimation = true;\n  }\n\n  /**\n   * Method to implement which signifies a frame has been processed. Used to\n   * display FPS meter.\n   */\n  tick() {}\n\n  /**\n   * Method to implement animating a frame.\n   */\n  animate() {}\n\n  /**\n   * Method to implement preprocessing for rendering frames.\n   */\n  render() {\n    if (this.lastFrame) {\n      // Avoid overlapping animation requests\n      cancelAnimationFrame(this.lastFrame);\n    }\n  }\n}\n\nconst sizeOfGeneRangeForTriangles = 1000000;\n\nclass SemanticZoomer {\n  /**\n   * Gives guidance or takes control over canvas when semantic zooming\n   * is necessary. Developers should extend this class to create semantic zooming\n   * behavior.\n   * @param {SpecificationProcessor} specificationHelper\n   */\n  constructor(specificationHelper) {\n    this.specificationHelper = specificationHelper;\n  }\n\n  getRecommendedDrawingMode(trackShader, currentXRange, currentYRange) {\n    if (trackShader.drawMode !== \"TRIANGLES\") {\n      return trackShader.drawMode;\n    }\n\n    if (\n      !this.specificationHelper.xScale.isGenomeScale &&\n      !this.specificationHelper.yScale.isGenomeScale\n    ) {\n      // Currently only used for genome tracks\n      return \"TRIANGLES\";\n    }\n    if (this.specificationHelper.xScale.isGenomeScale) {\n      const numberOfGenes =\n        this.specificationHelper.xScale.mapGenomeIndexToClipSpaceInverse(\n          currentXRange[1]\n        ) -\n        this.specificationHelper.xScale.mapGenomeIndexToClipSpaceInverse(\n          currentXRange[0]\n        );\n      if (numberOfGenes < sizeOfGeneRangeForTriangles) {\n        return \"TRIANGLES\";\n      }\n    }\n    if (this.specificationHelper.yScale.isGenomeScale) {\n      const numberOfGenes =\n        this.specificationHelper.yScale.mapGenomeIndexToClipSpaceInverse(\n          currentYRange[1]\n        ) -\n        this.specificationHelper.yScale.mapGenomeIndexToClipSpaceInverse(\n          currentYRange[0]\n        );\n      if (numberOfGenes < sizeOfGeneRangeForTriangles) {\n        return \"TRIANGLES\";\n      }\n    }\n\n    return \"LINES\";\n  }\n}\n\n/**\n * A vertex shader meant to take in positions, colors, and contain uniforms for zooming and panning.\n */\nconst baseVertexShader = `#version 300 es\n  precision highp float;\n\n  in vec2 a_VertexPosition;\n\n  uniform float pointSizeModifier;\n  // [x1, y1,x2, y2] of viewing window\n  uniform vec4 viewport;\n\n  out vec4 vColor;\n`;\n\n/**\n * Appended to end of vertex shader. Includes math for zooming and panning,\n * ability to unpack colors and send to fragment shader.\n */\nconst vertexShaderSuffix = (opacityName, colorName, sizeName) => `\n  vec3 unpackColor(float f) {\n    vec3 colorVec;\n    colorVec.r = floor(f / 65536.0);\n    colorVec.g = floor((f - colorVec.r * 65536.0) / 256.0);\n    colorVec.b = floor(f - colorVec.r * 65536.0 - colorVec.g * 256.0);\n    return colorVec / 256.0;\n  }\n\n  void main(void) {\n    // Subtract each vertex by midpoint of the viewport \n    // window to center points. Then scale by ratio of max window size to window size\n    gl_Position = vec4(\n       (a_VertexPosition.x - (viewport.z + viewport.x)/2.0) * 2.0/(viewport.z - viewport.x),\n       (a_VertexPosition.y - (viewport.w + viewport.y)/2.0) * 2.0/(viewport.w - viewport.y),\n        0,\n        1\n    );\n    vec3 unpackedValues = unpackColor(${colorName});\n\n    vColor = vec4(\n      unpackedValues.rgb,\n      ${opacityName}\n    );\n    gl_PointSize = ${sizeName} * pointSizeModifier;\n  }\n`;\n\n/**\n * A fragment shader which chooses color simply passed to by vertex shader.\n */\nconst varyingColorsFragmentShaderDots = `#version 300 es\n  precision highp float;\n\n  in vec4 vColor;\n\n  out vec4 outColor;\n\n  void main(void) {\n    // outColor = vColor;\n    float d = distance(gl_PointCoord, vec2(0.5, 0.5));\n    \n    if(d < .5) { \n        outColor = vColor;\n    }\n    else { discard; }\n  }\n`;\n\n/**\n * A fragment shader which chooses color simply passed to by vertex shader.\n */\n const varyingColorsFragmentShader = `#version 300 es\n precision highp float;\n\n in vec4 vColor;\n\n out vec4 outColor;\n\n void main(void) {\n    outColor = vColor;\n }\n`;\n\nconst SUPPORTED_CHANNEL_ATTRIBUTES = [\n  \"color\",\n  \"size\",\n  \"opacity\",\n];\n\nclass VertexShader {\n\n  /**\n   * A class meant to contain all the relevant information for a shader program, such as uniforms\n   * attributes, and ultimately the vertices. Do not use the constructor. Use VertexShader.fromSpecification\n   * or fromTrack instead.\n   */\n  constructor() {\n    this.shader = baseVertexShader;\n    this.uniforms = {};\n\n    // Add position buffers here since x and y channels don't map nicely to shader code\n    this.attributes = {\n      a_VertexPosition: {\n        numComponents: 2,\n        data: [],\n      },\n    };\n  }\n\n  /**\n   * Add a mark to the buffers by calculating its vertices, then adding its\n   * attributes such as size, color, or opacity to the buffers.\n   *\n   * @param {Object} mark passed in from SpecificationHelper in webgl-drawer.js\n   * @param {VertexCalculator} vertexCalculator used to calculate vertices for a track\n   */\n  addMarkToBuffers(mark, vertexCalculator) {\n    const vertices = vertexCalculator.calculateForMark(mark);\n    this.attributes.a_VertexPosition.data.push(...vertices);\n\n    for (const channel of Object.keys(this.attributes)) {\n      if (channel === \"a_VertexPosition\") {\n        // handled above\n        continue;\n      }\n\n      for (let i = 0; i < vertices.length / 2; i++) {\n        this.attributes[channel].data.push(mark[channel.substring(2)]); // Remove \"a_\" prefix\n      }\n    }\n\n    this.lastMark = mark;\n  }\n\n  /**\n   * Set the webgl draw mode to use\n   * @param {String} drawMode\n   */\n  setDrawMode(drawMode) {\n    this.drawMode = drawMode;\n  }\n\n  /**\n   * Signify this channel varies from mark to mark, so build buffers to carry this info\n   * for the program. Also add desclaration to shader code.\n   *\n   * @param {String} channel such as opacity, color, size\n   * @param {Number} numComponents number of components of this attribute to pull in, usually 1\n   * @returns this\n   */\n  addChannelBuffer(channel, numComponents = 1) {\n    this.attributes[`a_${channel}`] = { numComponents, data: [] };\n    this.shader += `in float a_${channel};\\n`;\n    return this;\n  }\n\n  /**\n   * Signify this channel is the same for every mark, so set a uniform to refer to.\n   *\n   * @param {String} channel such as opacity, color, size\n   * @param {Number} uniform value to set uniform to, must be a float\n   * @returns this\n   */\n  setChannelUniform(channel, uniform) {\n    this.uniforms[`u_${channel}`] = uniform;\n    this.shader += `uniform float u_${channel};\\n`;\n    return this;\n  }\n\n  /**\n   * Build the shader code after uniforms and attributes have been finalized.\n   *\n   * @returns shader code to compile\n   */\n  buildShader() {\n    // Assumes color, opacity, size channels have been used in\n    // addChannelBuffer or addChannelUniform\n    if (this.built) {\n      return this.shader;\n    }\n\n    const colorName = \"a_color\" in this.attributes ? \"a_color\" : \"u_color\";\n    const opacityName =\n      \"a_opacity\" in this.attributes ? \"a_opacity\" : \"u_opacity\";\n    const sizeName = \"a_size\" in this.attributes ? \"a_size\" : \"u_size\";\n\n    this.shader += vertexShaderSuffix(opacityName, colorName, sizeName);\n    this.built = true;\n    return this.shader;\n  }\n\n  /**\n   * Construct the vertex shaders for each track in the specification.\n   *\n   * @param {Object} specification of visualization\n   * @returns an array of {@link VertexShaders}s\n   */\n  static fromSpecification(specification) {\n    // Returns one per track\n    return specification.tracks.map(VertexShader.fromTrack);\n  }\n\n  /**\n   * Construct the vertex shader a track including setting attributes, uniforms, drawMode.\n   *\n   * @param {Object} track from specification\n   * @returns a {@link VertexShaders}\n   */\n  static fromTrack(track) {\n    // Given a track produce attributes and uniforms that describe a webgl drawing\n\n    const vsBuilder = new VertexShader();\n    vsBuilder.setDrawMode(getDrawModeForTrack(track));\n\n    for (let channel of Object.keys(DEFAULT_CHANNELS)) {\n      if (channel === \"shape\") {\n        // Changes vertex positions and draw mode, does not change shader code\n        continue;\n      }\n      if (channel in track) {\n        // Specification specifies channel\n        if (track[channel].value) {\n          // Channel has default value\n          if (channel === \"color\") {\n            track[channel].value = colorSpecifierToHex(track[channel].value);\n          }\n          vsBuilder.setChannelUniform(channel, track[channel].value);\n        } else {\n          // Set Channel as attribute, x and y will always reach here\n          if (channel === \"y\" || channel === \"x\") {\n            // Skip for x and y as handled in constructor\n            continue;\n          }\n\n          // These are currently the only supported channels for shader usage\n          if (SUPPORTED_CHANNEL_ATTRIBUTES.includes(channel)) {\n            vsBuilder.addChannelBuffer(\n              channel,\n              DEFAULT_CHANNELS[channel].numComponents\n            );\n          }\n        }\n      } else {\n        // Channel not listed, set default\n        if (SUPPORTED_CHANNEL_ATTRIBUTES.includes(channel)) {\n          vsBuilder.setChannelUniform(channel, DEFAULT_CHANNELS[channel].value);\n        }\n      }\n    }\n\n    return vsBuilder;\n  }\n}\n\n/* @license twgl.js 4.21.2 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\nAvailable via the MIT license.\nsee: http://github.com/greggman/twgl.js for details */\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* DataType */\nconst BYTE                           = 0x1400;\nconst UNSIGNED_BYTE                  = 0x1401;\nconst SHORT                          = 0x1402;\nconst UNSIGNED_SHORT                 = 0x1403;\nconst INT                            = 0x1404;\nconst UNSIGNED_INT                   = 0x1405;\nconst FLOAT                          = 0x1406;\n\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array)         { return BYTE; }           // eslint-disable-line\n  if (typedArray instanceof Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArray instanceof Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArray instanceof Int16Array)        { return SHORT; }          // eslint-disable-line\n  if (typedArray instanceof Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n  if (typedArray instanceof Int32Array)        { return INT; }            // eslint-disable-line\n  if (typedArray instanceof Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n  if (typedArray instanceof Float32Array)      { return FLOAT; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferView} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)         { return BYTE; }           // eslint-disable-line\n  if (typedArrayType === Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArrayType === Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArrayType === Int16Array)        { return SHORT; }          // eslint-disable-line\n  if (typedArrayType === Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n  if (typedArrayType === Int32Array)        { return INT; }            // eslint-disable-line\n  if (typedArrayType === Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n  if (typedArrayType === Float32Array)      { return FLOAT; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\nconst isArrayBuffer = typeof SharedArrayBuffer !== 'undefined'\n  ? function isArrayBufferOrSharedArrayBuffer(a) {\n    return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof SharedArrayBuffer);\n  }\n  : function isArrayBuffer(a) {\n    return a && a.buffer && a.buffer instanceof ArrayBuffer;\n  };\n\nfunction error(...args) {\n  console.error(...args);\n}\n\nfunction isBuffer(gl, t) {\n  return typeof WebGLBuffer !== 'undefined' && t instanceof WebGLBuffer;\n}\n\nfunction isShader(gl, t) {\n  return typeof WebGLShader !== 'undefined' && t instanceof WebGLShader;\n}\n\nfunction isTexture(gl, t) {\n  return typeof WebGLTexture !== 'undefined' && t instanceof WebGLTexture;\n}\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst STATIC_DRAW                  = 0x88e4;\nconst ARRAY_BUFFER                 = 0x8892;\nconst ELEMENT_ARRAY_BUFFER         = 0x8893;\nconst BUFFER_SIZE                  = 0x8764;\n\nconst BYTE$1                         = 0x1400;\nconst UNSIGNED_BYTE$1                = 0x1401;\nconst SHORT$1                        = 0x1402;\nconst UNSIGNED_SHORT$1               = 0x1403;\nconst INT$1                          = 0x1404;\nconst UNSIGNED_INT$1                 = 0x1405;\nconst FLOAT$1                        = 0x1406;\nconst defaults = {\n  attribPrefix: \"\",\n};\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || STATIC_DRAW);\n}\n\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n  type = type || ARRAY_BUFFER;\n  const buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n}\n\n// This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\nfunction getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array)    { return true; }  // eslint-disable-line\n  if (typedArray instanceof Uint8Array)   { return true; }  // eslint-disable-line\n  return false;\n}\n\n// This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)    { return true; }  // eslint-disable-line\n  if (typedArrayType === Uint8Array)   { return true; }  // eslint-disable-line\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nconst texcoordRE = /coord|texture/i;\nconst colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  let numComponents;\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3;  // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw new Error(`Can not guess numComponents for attribute '${name}'. Tried ${numComponents} but ${length} values is not evenly divisible by ${numComponents}. You should specify it.`);\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array,\n    };\n  }\n\n  let Type = array.type;\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n  return new Type(array.data);\n}\n\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of components of an array\n * @typedef {Object} FullArraySpec\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {constructor} [type] type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @property {WebGLBuffer} [buffer] Buffer to use for this attribute. This lets you use your own buffer\n *    but you will need to supply `numComponents` and `type`. You can effectively pass an `AttribInfo`\n *    to provide this. Example:\n *\n *         const bufferInfo1 = twgl.createBufferInfoFromArrays(gl, {\n *           position: [1, 2, 3, ... ],\n *         });\n *         const bufferInfo2 = twgl.createBufferInfoFromArrays(gl, {\n *           position: bufferInfo1.attribs.position,  // use the same buffer from bufferInfo1\n *         });\n *\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @param {module:twgl.BufferInfo} [srcBufferInfo] a BufferInfo to copy from\n *   This lets you share buffers. Any arrays you supply will override\n *   the buffers from srcBufferInfo.\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\nfunction createAttribsFromArrays(gl, arrays) {\n  const attribs = {};\n  Object.keys(arrays).forEach(function(arrayName) {\n    if (!isIndices(arrayName)) {\n      const array = arrays[arrayName];\n      const attribName = array.attrib || array.name || array.attribName || (defaults.attribPrefix + arrayName);\n      if (array.value) {\n        if (!Array.isArray(array.value) && !isArrayBuffer(array.value)) {\n          throw new Error('array.value is not array or typedarray');\n        }\n        attribs[attribName] = {\n          value: array.value,\n        };\n      } else {\n        let buffer;\n        let type;\n        let normalization;\n        let numComponents;\n        if (array.buffer && array.buffer instanceof WebGLBuffer) {\n          buffer = array.buffer;\n          numComponents = array.numComponents || array.size;\n          type = array.type;\n          normalization = array.normalize;\n        } else if (typeof array === \"number\" || typeof array.data === \"number\") {\n          const numValues = array.data || array;\n          const arrayType = array.type || Float32Array;\n          const numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n          type = getGLTypeForTypedArrayType(arrayType);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n          numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\n          buffer = gl.createBuffer();\n          gl.bindBuffer(ARRAY_BUFFER, buffer);\n          gl.bufferData(ARRAY_BUFFER, numBytes, array.drawType || STATIC_DRAW);\n        } else {\n          const typedArray = makeTypedArray(array, arrayName);\n          buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\n          type = getGLTypeForTypedArray(typedArray);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\n          numComponents = getNumComponents(array, arrayName);\n        }\n        attribs[attribName] = {\n          buffer:        buffer,\n          numComponents: numComponents,\n          type:          type,\n          normalize:     normalization,\n          stride:        array.stride || 0,\n          offset:        array.offset || 0,\n          divisor:       array.divisor === undefined ? undefined : array.divisor,\n          drawType:      array.drawType,\n        };\n      }\n    }\n  });\n  gl.bindBuffer(ARRAY_BUFFER, null);\n  return attribs;\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === BYTE$1)           return 1;  // eslint-disable-line\n  if (type === UNSIGNED_BYTE$1)  return 1;  // eslint-disable-line\n  if (type === SHORT$1)          return 2;  // eslint-disable-line\n  if (type === UNSIGNED_SHORT$1) return 2;  // eslint-disable-line\n  if (type === INT$1)            return 4;  // eslint-disable-line\n  if (type === UNSIGNED_INT$1)   return 4;  // eslint-disable-line\n  if (type === FLOAT$1)          return 4;  // eslint-disable-line\n  return 0;\n}\n\n// Tries to get the number of elements from a set of arrays.\nconst positionKeys = ['position', 'positions', 'a_position'];\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in attribs) {\n      break;\n    }\n    key = defaults.attribPrefix + key;\n    if (key in attribs) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n  const attrib = attribs[key];\n  gl.bindBuffer(ARRAY_BUFFER, attrib.buffer);\n  const numBytes = gl.getBufferParameter(ARRAY_BUFFER, BUFFER_SIZE);\n  gl.bindBuffer(ARRAY_BUFFER, null);\n\n  const bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  const totalElements = numBytes / bytesPerValue;\n  const numComponents = attrib.numComponents || attrib.size;\n  // TODO: check stride\n  const numElements = totalElements / numComponents;\n  if (numElements % 1 !== 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs appropriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         position: { buffer: WebGLBuffer, numComponents: 3, },\n *         normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also be TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or AugmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         texcoord: { numComponents: 2, buffer: gl.createBuffer(), },\n *         normal: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @param {module:twgl.BufferInfo} [srcBufferInfo] An existing\n *        buffer info to start from. WebGLBuffers etc specified\n *        in the srcBufferInfo will be used in a new BufferInfo\n *        with any arrays specified overriding the ones in\n *        srcBufferInfo.\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\nfunction createBufferInfoFromArrays(gl, arrays, srcBufferInfo) {\n  const newAttribs = createAttribsFromArrays(gl, arrays);\n  const bufferInfo = Object.assign({}, srcBufferInfo ? srcBufferInfo : {});\n  bufferInfo.attribs = Object.assign({}, srcBufferInfo ? srcBufferInfo.attribs : {}, newAttribs);\n  const indices = arrays.indices;\n  if (indices) {\n    const newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = getGLTypeForTypedArray(newIndices);\n  } else if (!bufferInfo.numElements) {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n * @private\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc');\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @return {string} enum string or hex value\n * @memberOf module:twgl\n * @function glEnumToString\n */\nconst glEnumToString = (function() {\n  const haveEnumsForType = {};\n  const enums = {};\n\n  function addEnums(gl) {\n    const type = gl.constructor.name;\n    if (!haveEnumsForType[type]) {\n      for (const key in gl) {\n        if (typeof gl[key] === 'number') {\n          const existing = enums[gl[key]];\n          enums[gl[key]] = existing ? `${existing} | ${key}` : key;\n        }\n      }\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || (typeof value === 'number' ? `0x${value.toString(16)}` : value);\n  };\n}());\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\n\nconst error$1 = error;\nfunction getElementById(id) {\n  return (typeof document !== 'undefined' && document.getElementById)\n      ? document.getElementById(id)\n      : null;\n}\n\nconst TEXTURE0                       = 0x84c0;\n\nconst ARRAY_BUFFER$1                   = 0x8892;\nconst ELEMENT_ARRAY_BUFFER$1           = 0x8893;\n\nconst COMPILE_STATUS                 = 0x8b81;\nconst LINK_STATUS                    = 0x8b82;\nconst FRAGMENT_SHADER                = 0x8b30;\nconst VERTEX_SHADER                  = 0x8b31;\nconst SEPARATE_ATTRIBS               = 0x8c8d;\n\nconst ACTIVE_UNIFORMS                = 0x8b86;\nconst ACTIVE_ATTRIBUTES              = 0x8b89;\nconst TRANSFORM_FEEDBACK_VARYINGS    = 0x8c83;\nconst ACTIVE_UNIFORM_BLOCKS          = 0x8a36;\nconst UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER   = 0x8a44;\nconst UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46;\nconst UNIFORM_BLOCK_DATA_SIZE                     = 0x8a40;\nconst UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES        = 0x8a43;\n\nconst FLOAT$3                         = 0x1406;\nconst FLOAT_VEC2                    = 0x8B50;\nconst FLOAT_VEC3                    = 0x8B51;\nconst FLOAT_VEC4                    = 0x8B52;\nconst INT$3                           = 0x1404;\nconst INT_VEC2                      = 0x8B53;\nconst INT_VEC3                      = 0x8B54;\nconst INT_VEC4                      = 0x8B55;\nconst BOOL                          = 0x8B56;\nconst BOOL_VEC2                     = 0x8B57;\nconst BOOL_VEC3                     = 0x8B58;\nconst BOOL_VEC4                     = 0x8B59;\nconst FLOAT_MAT2                    = 0x8B5A;\nconst FLOAT_MAT3                    = 0x8B5B;\nconst FLOAT_MAT4                    = 0x8B5C;\nconst SAMPLER_2D                    = 0x8B5E;\nconst SAMPLER_CUBE                  = 0x8B60;\nconst SAMPLER_3D                    = 0x8B5F;\nconst SAMPLER_2D_SHADOW             = 0x8B62;\nconst FLOAT_MAT2x3                  = 0x8B65;\nconst FLOAT_MAT2x4                  = 0x8B66;\nconst FLOAT_MAT3x2                  = 0x8B67;\nconst FLOAT_MAT3x4                  = 0x8B68;\nconst FLOAT_MAT4x2                  = 0x8B69;\nconst FLOAT_MAT4x3                  = 0x8B6A;\nconst SAMPLER_2D_ARRAY              = 0x8DC1;\nconst SAMPLER_2D_ARRAY_SHADOW       = 0x8DC4;\nconst SAMPLER_CUBE_SHADOW           = 0x8DC5;\nconst UNSIGNED_INT$3                  = 0x1405;\nconst UNSIGNED_INT_VEC2             = 0x8DC6;\nconst UNSIGNED_INT_VEC3             = 0x8DC7;\nconst UNSIGNED_INT_VEC4             = 0x8DC8;\nconst INT_SAMPLER_2D                = 0x8DCA;\nconst INT_SAMPLER_3D                = 0x8DCB;\nconst INT_SAMPLER_CUBE              = 0x8DCC;\nconst INT_SAMPLER_2D_ARRAY          = 0x8DCF;\nconst UNSIGNED_INT_SAMPLER_2D       = 0x8DD2;\nconst UNSIGNED_INT_SAMPLER_3D       = 0x8DD3;\nconst UNSIGNED_INT_SAMPLER_CUBE     = 0x8DD4;\nconst UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\nconst TEXTURE_2D$1                    = 0x0DE1;\nconst TEXTURE_CUBE_MAP$1              = 0x8513;\nconst TEXTURE_3D$1                    = 0x806F;\nconst TEXTURE_2D_ARRAY$1              = 0x8C1A;\n\nconst typeMap = {};\n\n/**\n * Returns the corresponding bind point for a given sampler type\n */\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n}\n\n// This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\nfunction floatSetter(gl, location) {\n  return function(v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function(v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function(v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  return isWebGL2(gl) ? function(textureOrPair) {\n    let texture;\n    let sampler;\n    if (isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function(texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  const units = new Int32Array(size);\n  for (let ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return isWebGL2(gl) ? function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(textureOrPair, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      let texture;\n      let sampler;\n      if (isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(texture, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT$3]                         = { Type: Float32Array, size:  4, setter: floatSetter,      arraySetter: floatArraySetter, };\ntypeMap[FLOAT_VEC2]                    = { Type: Float32Array, size:  8, setter: floatVec2Setter,  cols: 2, };\ntypeMap[FLOAT_VEC3]                    = { Type: Float32Array, size: 12, setter: floatVec3Setter,  cols: 3, };\ntypeMap[FLOAT_VEC4]                    = { Type: Float32Array, size: 16, setter: floatVec4Setter,  cols: 4, };\ntypeMap[INT$3]                           = { Type: Int32Array,   size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[INT_VEC2]                      = { Type: Int32Array,   size:  8, setter: intVec2Setter,    cols: 2, };\ntypeMap[INT_VEC3]                      = { Type: Int32Array,   size: 12, setter: intVec3Setter,    cols: 3, };\ntypeMap[INT_VEC4]                      = { Type: Int32Array,   size: 16, setter: intVec4Setter,    cols: 4, };\ntypeMap[UNSIGNED_INT$3]                  = { Type: Uint32Array,  size:  4, setter: uintSetter,       arraySetter: uintArraySetter, };\ntypeMap[UNSIGNED_INT_VEC2]             = { Type: Uint32Array,  size:  8, setter: uintVec2Setter,   cols: 2, };\ntypeMap[UNSIGNED_INT_VEC3]             = { Type: Uint32Array,  size: 12, setter: uintVec3Setter,   cols: 3, };\ntypeMap[UNSIGNED_INT_VEC4]             = { Type: Uint32Array,  size: 16, setter: uintVec4Setter,   cols: 4, };\ntypeMap[BOOL]                          = { Type: Uint32Array,  size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[BOOL_VEC2]                     = { Type: Uint32Array,  size:  8, setter: intVec2Setter,    cols: 2, };\ntypeMap[BOOL_VEC3]                     = { Type: Uint32Array,  size: 12, setter: intVec3Setter,    cols: 3, };\ntypeMap[BOOL_VEC4]                     = { Type: Uint32Array,  size: 16, setter: intVec4Setter,    cols: 4, };\ntypeMap[FLOAT_MAT2]                    = { Type: Float32Array, size: 32, setter: floatMat2Setter,  rows: 2, cols: 2, };\ntypeMap[FLOAT_MAT3]                    = { Type: Float32Array, size: 48, setter: floatMat3Setter,  rows: 3, cols: 3, };\ntypeMap[FLOAT_MAT4]                    = { Type: Float32Array, size: 64, setter: floatMat4Setter,  rows: 4, cols: 4, };\ntypeMap[FLOAT_MAT2x3]                  = { Type: Float32Array, size: 32, setter: floatMat23Setter, rows: 2, cols: 3, };\ntypeMap[FLOAT_MAT2x4]                  = { Type: Float32Array, size: 32, setter: floatMat24Setter, rows: 2, cols: 4, };\ntypeMap[FLOAT_MAT3x2]                  = { Type: Float32Array, size: 48, setter: floatMat32Setter, rows: 3, cols: 2, };\ntypeMap[FLOAT_MAT3x4]                  = { Type: Float32Array, size: 48, setter: floatMat34Setter, rows: 3, cols: 4, };\ntypeMap[FLOAT_MAT4x2]                  = { Type: Float32Array, size: 64, setter: floatMat42Setter, rows: 4, cols: 2, };\ntypeMap[FLOAT_MAT4x3]                  = { Type: Float32Array, size: 64, setter: floatMat43Setter, rows: 4, cols: 3, };\ntypeMap[SAMPLER_2D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[SAMPLER_CUBE]                  = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[SAMPLER_3D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[SAMPLER_2D_SHADOW]             = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[SAMPLER_2D_ARRAY]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[SAMPLER_2D_ARRAY_SHADOW]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[SAMPLER_CUBE_SHADOW]           = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[INT_SAMPLER_2D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[INT_SAMPLER_3D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[INT_SAMPLER_CUBE]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[INT_SAMPLER_2D_ARRAY]          = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[UNSIGNED_INT_SAMPLER_3D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D$1,       };\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE]     = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP$1, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY$1, };\n\nfunction floatAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      switch (b.value.length) {\n        case 4:\n          gl.vertexAttrib4fv(index, b.value);\n          break;\n        case 3:\n          gl.vertexAttrib3fv(index, b.value);\n          break;\n        case 2:\n          gl.vertexAttrib2fv(index, b.value);\n          break;\n        case 1:\n          gl.vertexAttrib1fv(index, b.value);\n          break;\n        default:\n          throw new Error('the length of a float constant value must be between 1 and 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribPointer(\n          index, b.numComponents || b.size, b.type || FLOAT$3, b.normalize || false, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4iv(index, b.value);\n      } else {\n        throw new Error('The length of an integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || INT$3, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction uintAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4uiv(index, b.value);\n      } else {\n        throw new Error('The length of an unsigned integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || UNSIGNED_INT$3, b.stride || 0, b.offset || 0);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  const defaultSize = typeInfo.size;\n  const count = typeInfo.count;\n\n  return function(b) {\n    gl.bindBuffer(ARRAY_BUFFER$1, b.buffer);\n    const numComponents = b.size || b.numComponents || defaultSize;\n    const size = numComponents / count;\n    const type = b.type || FLOAT$3;\n    const typeInfo = typeMap[type];\n    const stride = typeInfo.size * numComponents;\n    const normalize = b.normalize || false;\n    const offset = b.offset || 0;\n    const rowOffset = stride / count;\n    for (let i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(\n          index + i, size, type, normalize, stride, offset + rowOffset * i);\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index + i, b.divisor);\n      }\n    }\n  };\n}\n\n\n\nconst attrTypeMap = {};\nattrTypeMap[FLOAT$3]             = { size:  4, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC2]        = { size:  8, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC3]        = { size: 12, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC4]        = { size: 16, setter: floatAttribSetter, };\nattrTypeMap[INT$3]               = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC2]          = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC3]          = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC4]          = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[UNSIGNED_INT$3]      = { size:  4, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC2] = { size:  8, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC3] = { size: 12, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC4] = { size: 16, setter: uintAttribSetter,  };\nattrTypeMap[BOOL]              = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC2]         = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC3]         = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC4]         = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[FLOAT_MAT2]        = { size:  4, setter: matAttribSetter,   count: 2, };\nattrTypeMap[FLOAT_MAT3]        = { size:  9, setter: matAttribSetter,   count: 3, };\nattrTypeMap[FLOAT_MAT4]        = { size: 16, setter: matAttribSetter,   count: 4, };\n\nconst errorRE = /ERROR:\\s*\\d+:(\\d+)/gi;\nfunction addLineNumbersWithError(src, log = '', lineOffset = 0) {\n  // Note: Error message formats are not defined by any spec so this may or may not work.\n  const matches = [...log.matchAll(errorRE)];\n  const lineNoToErrorMap = new Map(matches.map((m, ndx) => {\n    const lineNo = parseInt(m[1]);\n    const next = matches[ndx + 1];\n    const end = next ? next.index : log.length;\n    const msg = log.substring(m.index, end);\n    return [lineNo - 1, msg];\n  }));\n  return src.split('\\n').map((line, lineNo) => {\n    const err = lineNoToErrorMap.get(lineNo);\n    return `${lineNo + 1 + lineOffset}: ${line}${err ? `\\n\\n^^^ ${err}` : ''}`;\n  }).join('\\n');\n}\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\nconst spaceRE = /^[ \\t]*\\n/;\n\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n * @private\n */\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n  const errFn = opt_errorCallback || error$1;\n  // Create the shader object\n  const shader = gl.createShader(shaderType);\n\n  // Remove the first end of line because WebGL 2.0 requires\n  // #version 300 es\n  // as the first line. No whitespace allowed before that line\n  // so\n  //\n  // <script>\n  // #version 300 es\n  // </script>\n  //\n  // Has one line before it which is invalid according to GLSL ES 3.00\n  //\n  let lineOffset = 0;\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  }\n\n  // Load the shader source\n  gl.shaderSource(shader, shaderSource);\n\n  // Compile the shader\n  gl.compileShader(shader);\n\n  // Check the compile status\n  const compiled = gl.getShaderParameter(shader, COMPILE_STATUS);\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    const lastError = gl.getShaderInfoLog(shader);\n    errFn(`${addLineNumbersWithError(shaderSource, lastError, lineOffset)}\\nError compiling ${glEnumToString(gl, shaderType)}: ${lastError}`);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments passed in\n * @private\n */\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  let transformFeedbackVaryings;\n  let transformFeedbackMode;\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    // If we have an errorCallback we can just return this object\n    // Otherwise we need to construct one with default errorCallback\n    if (opt_attribs.errorCallback) {\n      return opt_attribs;\n    }\n    const opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n    transformFeedbackMode = opt.transformFeedbackMode;\n  }\n\n  const options = {\n    errorCallback: opt_errorCallback || error$1,\n    transformFeedbackVaryings: transformFeedbackVaryings,\n    transformFeedbackMode: transformFeedbackMode,\n  };\n\n  if (opt_attribs) {\n    let attribLocations = {};\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function(attrib,  ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs;\n    }\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nconst defaultShaderType = [\n  \"VERTEX_SHADER\",\n  \"FRAGMENT_SHADER\",\n];\n\nfunction getShaderTypeFromScriptType(gl, scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return VERTEX_SHADER;\n  }\n  return undefined;\n}\n\nfunction deleteShaders(gl, shaders) {\n  shaders.forEach(function(shader) {\n    gl.deleteShader(shader);\n  });\n}\n\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program and calls useProgram.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\nfunction createProgram(\n    gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const realShaders = [];\n  const newShaders = [];\n  for (let ndx = 0; ndx < shaders.length; ++ndx) {\n    let shader = shaders[ndx];\n    if (typeof (shader) === 'string') {\n      const elem = getElementById(shader);\n      const src = elem ? elem.text : shader;\n      let type = gl[defaultShaderType[ndx]];\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(gl, elem.type) || type;\n      }\n      shader = loadShader(gl, src, type, progOptions.errorCallback);\n      newShaders.push(shader);\n    }\n    if (isShader(gl, shader)) {\n      realShaders.push(shader);\n    }\n  }\n\n  if (realShaders.length !== shaders.length) {\n    progOptions.errorCallback(\"not enough shaders for program\");\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  const program = gl.createProgram();\n  realShaders.forEach(function(shader) {\n    gl.attachShader(program, shader);\n  });\n  if (progOptions.attribLocations) {\n    Object.keys(progOptions.attribLocations).forEach(function(attrib) {\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\n    });\n  }\n  let varyings = progOptions.transformFeedbackVaryings;\n  if (varyings) {\n    if (varyings.attribs) {\n      varyings = varyings.attribs;\n    }\n    if (!Array.isArray(varyings)) {\n      varyings = Object.keys(varyings);\n    }\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || SEPARATE_ATTRIBS);\n  }\n  gl.linkProgram(program);\n\n  // Check the link status\n  const linked = gl.getProgramParameter(program, LINK_STATUS);\n  if (!linked) {\n    // something went wrong with the link\n    const lastError = gl.getProgramInfoLog(program);\n    progOptions.errorCallback(`${\n      realShaders.map(shader => {\n        const src = addLineNumbersWithError(gl.getShaderSource(shader), '', 0);\n        const type = gl.getShaderParameter(shader, gl.SHADER_TYPE);\n        return `${glEnumToString(gl, type)}\\n${src}}`;\n      }).join('\\n')\n    }\\nError in program linking: ${lastError}`);\n\n    gl.deleteProgram(program);\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n  return program;\n}\n\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromSources(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaders = [];\n  for (let ii = 0; ii < shaderSources.length; ++ii) {\n    const shader = loadShader(\n        gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n    if (!shader) {\n      return null;\n    }\n    shaders.push(shader);\n  }\n  return createProgram(gl, shaders, progOptions);\n}\n\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n * @private\n */\nfunction isBuiltIn(info) {\n  const name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n\nconst tokenRE = /(\\.|\\[|]|\\w+)/g;\nconst isDigit = s => s >= '0' && s <= '9';\nfunction addSetterToUniformTree(fullPath, setter, node, uniformSetters) {\n  const tokens = fullPath.split(tokenRE).filter(s => s !== '');\n  let tokenNdx = 0;\n  let path = '';\n\n  for (;;) {\n    const token = tokens[tokenNdx++];  // has to be name or number\n    path += token;\n    const isArrayIndex = isDigit(token[0]);\n    const accessor = isArrayIndex\n        ? parseInt(token)\n        : token;\n    if (isArrayIndex) {\n      path += tokens[tokenNdx++];  // skip ']'\n    }\n    const isLastToken = tokenNdx === tokens.length;\n    if (isLastToken) {\n      node[accessor] = setter;\n      break;\n    } else {\n      const token = tokens[tokenNdx++];  // has to be . or [\n      const isArray = token === '[';\n      const child = node[accessor] || (isArray ? [] : {});\n      node[accessor] = child;\n      node = child;\n      uniformSetters[path] = uniformSetters[path] || function(node) {\n        return function(value) {\n          setUniformTree(node, value);\n        };\n      }(child);\n      path += token;\n    }\n  }\n}\n\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\nfunction createUniformSetters(gl, program) {\n  let textureUnit = 0;\n\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n  function createUniformSetter(program, uniformInfo, location) {\n    const isArray = uniformInfo.name.endsWith(\"[0]\");\n    const type = uniformInfo.type;\n    const typeInfo = typeMap[type];\n    if (!typeInfo) {\n      throw new Error(`unknown type: 0x${type.toString(16)}`); // we should never get here.\n    }\n    let setter;\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      const unit = textureUnit;\n      textureUnit += uniformInfo.size;\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n    setter.location = location;\n    return setter;\n  }\n\n  const uniformSetters = {};\n  const uniformTree = {};\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n    let name = uniformInfo.name;\n    // remove the array suffix.\n    if (name.endsWith(\"[0]\")) {\n      name = name.substr(0, name.length - 3);\n    }\n    const location = gl.getUniformLocation(program, uniformInfo.name);\n    // the uniform will have no location if it's in a uniform block\n    if (location) {\n      const setter = createUniformSetter(program, uniformInfo, location);\n      uniformSetters[name] = setter;\n      addSetterToUniformTree(name, setter, uniformTree, uniformSetters);\n    }\n  }\n\n  return uniformSetters;\n}\n\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\nfunction createTransformFeedbackInfo(gl, program) {\n  const info = {};\n  const numVaryings = gl.getProgramParameter(program, TRANSFORM_FEEDBACK_VARYINGS);\n  for (let ii = 0; ii < numVaryings; ++ii) {\n    const varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size,\n    };\n  }\n  return info;\n}\n\n/**\n * @typedef {Object} UniformData\n * @property {string} name The name of the uniform\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanatory\n * @property {bool} usedByFragmentShader Self explanatory\n * @property {bool} used Self explanatory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec>} blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n  const uniformData = [];\n  const uniformIndices = [];\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [\n    [ \"UNIFORM_TYPE\", \"type\" ],\n    [ \"UNIFORM_SIZE\", \"size\" ],  // num elements\n    [ \"UNIFORM_BLOCK_INDEX\", \"blockNdx\" ],\n    [ \"UNIFORM_OFFSET\", \"offset\", ],\n  ].forEach(function(pair) {\n    const pname = pair[0];\n    const key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function(value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n\n  const blockSpecs = {};\n\n  const numUniformBlocks = gl.getProgramParameter(program, ACTIVE_UNIFORM_BLOCKS);\n  for (let ii = 0; ii < numUniformBlocks; ++ii) {\n    const name = gl.getActiveUniformBlockName(program, ii);\n    const blockSpec = {\n      index: gl.getUniformBlockIndex(program, name),\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES),\n    };\n    blockSpec.used = blockSpec.usedByVertexShader || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData,\n  };\n}\n\nfunction setUniformTree(tree, values) {\n  for (const name in values) {\n    const prop = tree[name];\n    if (typeof prop === 'function') {\n      prop(values[name]);\n    } else {\n      setUniformTree(tree[name], values[name]);\n    }\n  }\n}\n\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     var texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n *   You can also fill out structure and array values either via\n *   shortcut. Example\n *\n *     // -- in shader --\n *     struct Light {\n *       float intensity;\n *       vec4 color;\n *     };\n *     uniform Light lights[2];\n *\n *     // in JavaScript\n *\n *     twgl.setUniforms(programInfo, {\n *       lights: [\n *         { intensity: 5.0, color: [1, 0, 0, 1] },\n *         { intensity: 2.0, color: [0, 0, 1, 1] },\n *       ],\n *     });\n *\n *   or the more traditional way\n *\n *     twgl.setUniforms(programInfo, {\n *       \"lights[0].intensity\": 5.0,\n *       \"lights[0].color\": [1, 0, 0, 1],\n *       \"lights[1].intensity\": 2.0,\n *       \"lights[1].color\": [0, 0, 1, 1],\n *     });\n *\n *   You can also specify partial paths\n *\n *     twgl.setUniforms(programInfo, {\n *       'lights[1]: { intensity: 5.0, color: [1, 0, 0, 1] },\n *     });\n *\n *   But you can not specify leaf array indices\n *\n * @memberOf module:twgl/programs\n */\nfunction setUniforms(setters, ...args) {  // eslint-disable-line\n  const actualSetters = setters.uniformSetters || setters;\n  const numArgs = args.length;\n  for (let aNdx = 0; aNdx < numArgs; ++aNdx) {\n    const values = args[aNdx];\n    if (Array.isArray(values)) {\n      const numValues = values.length;\n      for (let ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, values[ii]);\n      }\n    } else {\n      for (const name in values) {\n        const setter = actualSetters[name];\n        if (setter) {\n          setter(values[name]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\nfunction createAttributeSetters(gl, program) {\n  const attribSetters = {\n  };\n\n  const numAttribs = gl.getProgramParameter(program, ACTIVE_ATTRIBUTES);\n  for (let ii = 0; ii < numAttribs; ++ii) {\n    const attribInfo = gl.getActiveAttrib(program, ii);\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n    const index = gl.getAttribLocation(program, attribInfo.name);\n    const typeInfo = attrTypeMap[attribInfo.type];\n    const setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n */\nfunction setAttributes(setters, buffers) {\n  for (const name in buffers) {\n    const setter = setters[name];\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivalent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgramInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n    if (buffers.indices) {\n      gl.bindBuffer(ELEMENT_ARRAY_BUFFER$1, buffers.indices);\n    }\n  }\n}\n\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @property {module:twgl.UniformBlockSpec} [uniformBlockSpec] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfoFromProgram(gl, program) {\n  const uniformSetters = createUniformSetters(gl, program);\n  const attribSetters = createAttributeSetters(gl, program);\n  const programInfo = {\n    program,\n    uniformSetters,\n    attribSetters,\n  };\n\n  if (isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfo(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  let good = true;\n  shaderSources = shaderSources.map(function(source) {\n    // Lets assume if there is no \\n it's an id\n    if (source.indexOf(\"\\n\") < 0) {\n      const script = getElementById(source);\n      if (!script) {\n        progOptions.errorCallback(\"no element with id: \" + source);\n        good = false;\n      } else {\n        source = script.text;\n      }\n    }\n    return source;\n  });\n  if (!good) {\n    return null;\n  }\n  const program = createProgramFromSources(gl, shaderSources, progOptions);\n  if (!program) {\n    return null;\n  }\n  return createProgramInfoFromProgram(gl, program);\n}\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst TRIANGLES                      = 0x0004;\nconst UNSIGNED_SHORT$3                 = 0x1403;\n\n/**\n * Drawing related functions\n *\n * For backward compatibility they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {number} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? TRIANGLES : type;\n  const indices = bufferInfo.indices;\n  const elementType = bufferInfo.elementType;\n  const numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? UNSIGNED_SHORT$3 : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? UNSIGNED_SHORT$3 : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n  programInfos.forEach(function(programInfo) {\n    setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao,\n  };\n}\n\nconst ALL_POTENTIAL_ATTRIBUTES = SUPPORTED_CHANNEL_ATTRIBUTES.map(\n  (attr) => `a_${attr}`\n).concat(\"a_VertexPosition\");\n\nclass WebGLCanvasDrawer extends Drawer {\n  constructor(viewportData) {\n    super(viewportData);\n\n    this.gl = this.canvas.getContext(\"webgl2\", {\n      // Setting these to false makes webgl handle more like opengl\n      // Source: https://webglfundamentals.org/webgl/lessons/webgl-and-alpha.html\n      alpha: false,\n      premultipliedAlpha: false,\n    });\n\n    if (!this.gl) {\n      console.error(\"Unable to initialize WebGL!\");\n      return;\n    }\n  }\n\n  /**\n   * Called whenever a frame has been successfully animated.\n   */\n  tick() {}\n\n  /**\n   * Calculates the viewport for this.gl.viewport to control zooming. Also calculates point size.\n   * @returns Array of 5 elements, first 4 are viewport parameters, last is pointSizeMultiplier:\n   *   [xOffset, yOffset, displayAsIfThisWide, displayAsIfThisHigh, pointSizeMultiplier]\n   */\n  getWebGLViewport() {\n    // Calculate appropriate webgl viewport given current selection window\n\n    // Transform current data coordinates to GPU cordinates\n    const scaleXWindowSpace = scale([this.minX, this.maxX], [-1, 1]);\n    const scaleYWindowSpace = scale([this.minY, this.maxY], [-1, 1]);\n\n    // Multiply point size by the ratio of max dimension and current width\n    const pointSize = Math.max(\n      1.75,\n      Math.min(\n        1 /\n          (scaleXWindowSpace(this.currentXRange[1]) -\n            scaleXWindowSpace(this.currentXRange[0])),\n        1 /\n          (scaleYWindowSpace(this.currentYRange[1]) -\n            scaleYWindowSpace(this.currentYRange[0]))\n      )\n    );\n    // Return [x1, y1, x2, y2] and pointsize, camera corners coordinates in GPU space\n    // Which becomes uniform in vertex shader\n    return [\n      scaleXWindowSpace(this.currentXRange[0]),\n      scaleYWindowSpace(this.currentYRange[0]),\n      scaleXWindowSpace(this.currentXRange[1]),\n      scaleYWindowSpace(this.currentYRange[1]),\n      pointSize,\n    ];\n  }\n\n  /**\n   * Sets the specification and begins the process of drawing it.\n   *  1. Cancels any current animation\n   *  2. Builds shaders for the tracks\n   *  3. After data is loaded, calls populateBuffers.\n   *\n   * @param {Object} specification of visualization\n   */\n  setSpecification(specification) {\n    super.render(); // Cancels current animation frame\n\n    // Populate buffers needs a trackShader built to know what buffers to fill\n    this.trackShaders = VertexShader.fromSpecification(specification);\n\n    new SpecificationProcessor(specification, this.populateBuffers.bind(this));\n  }\n\n  /**\n   * Populate the buffers that are fed to webgl for drawing.\n   *\n   * @param {SpecificationProcessor} specificationHelper created in the setSpecification method\n   */\n  populateBuffers(specificationHelper) {\n    let currentTrack = specificationHelper.getNextTrack();\n    let currentTrackShaderIndex = 0;\n\n    this.semanticZoomer = new SemanticZoomer(specificationHelper);\n\n    while (currentTrack) {\n      // Construct calculator in track loop as calculator keeps internal state for each track\n      let vertexCalculator = new VertexCalculator(\n        specificationHelper.xScale,\n        specificationHelper.yScale,\n        currentTrack.track // Access actual track specification\n      );\n\n      let currentMark = currentTrack.getNextMark();\n\n      while (currentMark) {\n        // A lot of the heavy lifting occurs in the track shaders, this class is mostly boilerplate for webgl\n        this.trackShaders[currentTrackShaderIndex].addMarkToBuffers(\n          currentMark,\n          vertexCalculator\n        );\n\n        currentMark = currentTrack.getNextMark();\n      }\n\n      currentTrack = specificationHelper.getNextTrack();\n      currentTrackShaderIndex++;\n    }\n\n    this.render();\n  }\n\n  /**\n   * Animates the frames by setting viewport, uniforms, blending, clearing, and calling webgl draw.\n   */\n  animate() {\n    if (!this.needsAnimation) {\n      // Prevent pointless animation if canvas does not change\n      this.lastFrame = requestAnimationFrame(this.animate.bind(this));\n      this.tick();\n      return;\n    }\n\n    const viewport = this.getWebGLViewport();\n    this.globalUniforms.viewport = new Float32Array(viewport.slice(0, 4));\n    this.globalUniforms.pointSizeModifier = viewport[4];\n\n    // Clear the canvas before we start drawing on it.\n    this.gl.clearColor(1, 1, 1, 1);\n\n    // Set the blending function\n    // Blend functions are weird, play with them:\n    // https://mrdoob.github.io/webgl-blendfunctions/blendfunc.html\n    // http://www.andersriggelsen.dk/glblendfunc.php\n    this.gl.enable(this.gl.BLEND);\n    this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n    // For each track shader, use their shader program then draw it\n    this.trackShaders.forEach((trackShader, index) => {\n      this.gl.useProgram(this.programInfos[index].program);\n\n      setUniforms(this.programInfos[index], {\n        ...this.globalUniforms,\n        ...trackShader.uniforms,\n      });\n\n      setBuffersAndAttributes(\n        this.gl,\n        this.programInfos[index],\n        this.vertexArrayInfos[index]\n      );\n\n      drawBufferInfo(\n        this.gl,\n        this.vertexArrayInfos[index],\n        this.gl[\n          this.semanticZoomer.getRecommendedDrawingMode(\n            trackShader,\n            this.currentXRange,\n            this.currentYRange\n          )\n        ],\n        trackShader.attributes.a_VertexPosition.data.length / 2\n      );\n    });\n\n    this.needsAnimation = false;\n    this.lastFrame = requestAnimationFrame(this.animate.bind(this));\n    this.tick();\n  }\n\n  /**\n   * Prepares animation by compiling shaders, setting uniforms, constructing buffers,\n   * and handling additional boilerplate.\n   */\n  render() {\n    super.render();\n\n    this.programInfos = this.trackShaders.map((trackShader) =>\n      createProgramInfo(\n        this.gl,\n        [trackShader.buildShader(), trackShader.drawMode === \"POINTS\" ? varyingColorsFragmentShaderDots : varyingColorsFragmentShader],\n        ALL_POTENTIAL_ATTRIBUTES\n      )\n    );\n\n    this.globalUniforms = {\n      viewport: new Float32Array([-1, -1, 1, 1]),\n      pointSizeModifier: 1,\n    };\n\n    this.vertexArrayInfos = this.trackShaders.map((trackShader) =>\n      createVertexArrayInfo(\n        this.gl,\n        this.programInfos,\n        createBufferInfoFromArrays(this.gl, trackShader.attributes)\n      )\n    );\n\n    this.needsAnimation = true;\n    this.animate();\n  }\n}\n\n/**\n * The offscreen webgl worker is meant to communicate from the {@link WebGLVis}\n * by sending a specification data to the drawer for management of shader program and\n * eventually drawing. Most messages passed are containing the new viewport\n * information for the drawer to process.\n */\n\nclass OffscreenWebGLDrawer extends WebGLCanvasDrawer {\n  tick() {\n    postMessage({ type: \"tick\" });\n  }\n}\n\nself.onmessage = (message) => {\n  switch (message.data.type) {\n    case \"init\":\n      self.drawer = message.data.displayFPSMeter\n        ? new OffscreenWebGLDrawer(message.data)\n        : new WebGLCanvasDrawer(message.data);\n      break;\n    case \"viewport\":\n      self.drawer.receiveViewport(message.data);\n      break;\n    case \"render\":\n      self.drawer.receiveViewport(message.data);\n      self.drawer.render();\n      break;\n    case \"specification\":\n      self.drawer.setSpecification(message.data.specification);\n      break;\n    case \"clearBuffers\":\n      self.drawer.clearBuffers();\n      break;\n    case \"resize\":\n      self.drawer.canvas.width = message.data.width;\n      self.drawer.canvas.height = message.data.height;\n      self.drawer.gl.viewport(0, 0, message.data.width, message.data.height);\n      break;\n    default:\n      console.error(`Received unknown message type: ${message.type}`);\n  }\n};\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","arguments","length","forEach","obj","value","defineProperty","configurable","writable","getOwnPropertyDescriptors","defineProperties","_possibleConstructorReturn","self","ReferenceError","_getPrototypeOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_get","Reflect","get","target","property","receiver","base","object","hasOwnProperty","desc","this","_setPrototypeOf","p","_inherits","subClass","superClass","create","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","Boolean","valueOf","result","Super","NewTarget","_arrayLikeToArray","arr","len","i","arr2","Array","_unsupportedIterableToArray","minLen","n","toString","slice","name","from","test","_toConsumableArray","isArray","iter","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_createForOfIteratorHelper","allowArrayLike","it","F","s","done","_e","f","err","normalCompletion","didErr","step","next","_e2","_slicedToArray","l","u","a","formatDecimalParts","x","toExponential","indexOf","coefficient","exponent","Math","abs","NaN","prefixExponent","re","formatSpecifier","specifier","match","exec","Error","FormatSpecifier","fill","align","sign","symbol","zero","width","comma","precision","trim","type","formatRounded","d","join","max","formatTypes","toFixed","round","toLocaleString","replace","toPrecision","min","floor","toUpperCase","identity","locale","format","map","prefixes","formatLocale","grouping","thousands","group","j","g","substring","reverse","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","percent","minus","nan","newFormat","prefix","toLowerCase","suffix","formatType","maybeSuffix","c","valuePrefix","valueSuffix","valueNegative","isNaN","out","i1","i0","formatTrim","charCodeAt","Infinity","padding","formatPrefix","k","pow","GenomeScale","genomeId","domain","genomeSizes","console","error","concat","_domain$0$substring$s2","split","startChr","startPair","parseInt","_domain$1$substring$s2","endChr","endPair","mapPairToGenomeIndex","chrSizes","chrStarts","Map","cumulativeTotal","set","chr","pairNum","createPairMapperToGenome","firstPairInDomain","lastPairInDomain","mapGenomeIndexToClipSpace","scale","mapGenomeIndexToClipSpaceInverse","pair","pairStr","_pairStr$substring$sp2","toClipSpaceFromParts","num","chrId","chrLoc","_step","formatting","genomeSpot","_iterator","entries","_step$value","chrKey","pairCount","chr1","gene1","chr2","gene2","x1","x2","_middleGene$substring2","inverse","gene","start","end","suggestedFormat","_this","_this$inverse$substri2","_this$inverse$substri4","toReturn","difference","magnitude","log10","startingValue","currValue","_step2","_iterator2","tickCoords","tickLabels","coord","_this2","func","args","isGenomeScale","getMidpoint","getTickCoordsAndLabels","finalEntry","size","hg38","hg19","mm9","mm10","mm39","define","factory","extend","parent","definition","Color","darker","brighter","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","m","rgbn","Rgb","rgba","hsla","b","rgbConvert","opacity","rgb$1","rgb_formatHex","hex","rgb_formatRgb","h","Hsl","hslConvert","hsl2rgb","m1","m2","range","domainLength","slope","intercept","rgbToHex","rgbStringToHex","colorVals","asStr","colorSpecifierToHex","asColor","copy","channels","assign","displayable","formatHsl","getScaleForSpecification","dimension","specification","genome","_step3","genomic","_iterator3","tracks","track","includes","viewport","smallestX","POSITIVE_INFINITY","largestX","NEGATIVE_INFINITY","smallestY","largestY","xDomain","yDomain","y","height","getViewportForSpecification","_step4","geneScale","completeScale","smallestGene","smallestGeneValue","largestGene","largestGeneValue","_iterator4","toClipSpaceFromString","toCallable","getQuadraticBezierCurveForPoints","P0","P1","P2","constant","linear","gamma","nogamma","exponential","rgbGamma","spline","rgbBasis","values","v1","v2","v0","v3","t1","t2","t3","basis","colors","radians","PI","degrees","A","B","C","D","E","ED","EB","BC_DA","cubehelix$2","Cubehelix","bl","sqrt","atan2","cubehelixConvert","cubehelix$1","hue","cubehelixGamma","cubehelix","cosh","cos","sinh","sin","cubehelixLong","SIZE_UNITS","VertexCalculator","xScale","yScale","drawMode","getDrawModeForTrack","mark","_calculateForMark","x1ClipSpace","y2","y1ClipSpace","transformGenomicRangeArcToStandard","y1","transformGenomicRangeToStandard","_getVerticesForAreaSection","lastMark","_getVerticesForTick","_getVertexForDot","_getVerticesForRect","_getVerticesForArc","shape","_getVerticesForSquare","_getVerticesForTriangle","_getVerticesForPolygon","_getVerticesForCross","vertices","isX","startPoint","_mapToGPUSpace","quadraticCurve","midpoint","distance","isFinite","getCurveForArc","NUMBER_OF_VERTICES_PER_ARC","nextPoint","sides","center","theta","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","Tableau10","ramp$1","scheme","scheme$q","BrBG","scheme$p","PRGn","scheme$o","PiYG","scheme$n","PuOr","scheme$m","RdBu","scheme$l","RdGy","scheme$k","RdYlBu","scheme$j","RdYlGn","scheme$i","Spectral","scheme$h","BuGn","scheme$g","BuPu","scheme$f","GnBu","scheme$e","OrRd","scheme$d","PuBuGn","scheme$c","PuBu","scheme$b","PuRd","scheme$a","RdPu","scheme$9","YlGnBu","scheme$8","YlGn","scheme$7","YlOrBr","scheme$6","YlOrRd","scheme$5","Blues","scheme$4","Greens","scheme$3","Greys","scheme$2","Purples","scheme$1","Reds","Oranges","warm","cool","c$1","pi_1_3","pi_2_3","ramp","viridis","magma","inferno","plasma","d3","freeze","schemeCategory10","schemeAccent","schemeDark2","schemePaired","schemePastel1","schemePastel2","schemeSet1","schemeSet2","schemeSet3","schemeTableau10","interpolateBrBG","schemeBrBG","interpolatePRGn","schemePRGn","interpolatePiYG","schemePiYG","interpolatePuOr","schemePuOr","interpolateRdBu","schemeRdBu","interpolateRdGy","schemeRdGy","interpolateRdYlBu","schemeRdYlBu","interpolateRdYlGn","schemeRdYlGn","interpolateSpectral","schemeSpectral","interpolateBuGn","schemeBuGn","interpolateBuPu","schemeBuPu","interpolateGnBu","schemeGnBu","interpolateOrRd","schemeOrRd","interpolatePuBuGn","schemePuBuGn","interpolatePuBu","schemePuBu","interpolatePuRd","schemePuRd","interpolateRdPu","schemeRdPu","interpolateYlGnBu","schemeYlGnBu","interpolateYlGn","schemeYlGn","interpolateYlOrBr","schemeYlOrBr","interpolateYlOrRd","schemeYlOrRd","interpolateBlues","schemeBlues","interpolateGreens","schemeGreens","interpolateGreys","schemeGreys","interpolatePurples","schemePurples","interpolateReds","schemeReds","interpolateOranges","schemeOranges","interpolateCividis","interpolateCubehelixDefault","interpolateRainbow","ts","interpolateWarm","interpolateCool","interpolateSinebow","interpolateTurbo","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","DEFAULT_CHANNELS","numComponents","DEFAULT_COLOR_SCHEME","SHAPES","SpecificationProcessor","callback","index","defaultData","dataPromise","fetch","then","response","text","data","isInlineData","Track","allPromises","Promise","all","_this3","processHeadersAndMappers","hasOwnData","_this4","headers","channelMaps","channel","buildMapperForChannel","_this5","splitted","geometry","coordinates","dimensions","header","currRow","rawHeight","rawWidth","_this6","mapper","channelInfo","attrMapper","attributeIndex","attribute","buildMapperForInlineChannel","buildMapperForQuantitiveChannel","buildMapperForCategoricalChannel","chrAttributeIndex","chrAttribute","geneAttributeIndex","geneAttribute","buildMapperForGenomicChannel","row","genomicAttributeIndices","startAttribute","endAttribute","buildMapperForGenomicRangeChannel","parseFloat","info","inlineValue","minOpacity","minSize","maxSize","d3colorScale","colorScheme","zeroToOneScale","attrValue","minWidth","maxWidth","minHeight","maxHeight","channelScale","categoryTracker","cardinality","categoryId","has","startsWith","genomeStart","genomeEnd","Drawer","drawingData","canvas","receiveViewport","viewportData","minX","maxX","minY","maxY","currentXRange","xRange","currentYRange","yRange","needsAnimation","lastFrame","cancelAnimationFrame","sizeOfGeneRangeForTriangles","SemanticZoomer","specificationHelper","trackShader","SUPPORTED_CHANNEL_ATTRIBUTES","VertexShader","shader","uniforms","attributes","a_VertexPosition","vertexCalculator","_this$attributes$a_Ve","calculateForMark","_i","_Object$keys","uniform","built","colorName","opacityName","sizeName","vertexShaderSuffix","fromTrack","vsBuilder","setDrawMode","_i2","_Object$keys2","setChannelUniform","addChannelBuffer","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","getGLTypeForTypedArray","typedArray","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","isArrayBuffer","SharedArrayBuffer","buffer","ArrayBuffer","isTexture","gl","WebGLTexture","STATIC_DRAW","ARRAY_BUFFER","BUFFER_SIZE","BYTE$1","UNSIGNED_BYTE$1","SHORT$1","UNSIGNED_SHORT$1","INT$1","UNSIGNED_INT$1","FLOAT$1","defaults","attribPrefix","createBufferFromTypedArray","drawType","WebGLBuffer","createBuffer","array","bindBuffer","bufferData","setBufferFromTypedArray","isIndices","texcoordRE","colorRE","guessNumComponentsFromName","makeTypedArray","Type","createAttribsFromArrays","arrays","attribs","arrayName","attribName","attrib","normalization","normalize","numValues","arrayType","numBytes","BYTES_PER_ELEMENT","typedArrayType","getGLTypeForTypedArrayType","getNormalizationForTypedArray","getArray","getNumComponents","stride","offset","divisor","positionKeys","getNumElementsFromAttributes","ii","getBufferParameter","totalElements","numElements","isWebGL2","texStorage2D","glEnumToString","haveEnumsForType","enums","existing","addEnums","error$1","_console","getElementById","id","document","TEXTURE0","ARRAY_BUFFER$1","ELEMENT_ARRAY_BUFFER$1","COMPILE_STATUS","LINK_STATUS","FRAGMENT_SHADER","VERTEX_SHADER","SEPARATE_ATTRIBS","ACTIVE_UNIFORMS","ACTIVE_ATTRIBUTES","TRANSFORM_FEEDBACK_VARYINGS","ACTIVE_UNIFORM_BLOCKS","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","FLOAT$3","INT$3","UNSIGNED_INT$3","TEXTURE_2D$1","TEXTURE_CUBE_MAP$1","TEXTURE_3D$1","TEXTURE_2D_ARRAY$1","typeMap","getBindPointForSamplerType","bindPoint","intSetter","location","v","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","textureOrPair","texture","sampler","activeTexture","bindTexture","bindSampler","samplerArraySetter","units","textures","floatAttribSetter","disableVertexAttribArray","vertexAttrib4fv","vertexAttrib3fv","vertexAttrib2fv","vertexAttrib1fv","enableVertexAttribArray","vertexAttribPointer","vertexAttribDivisor","intAttribSetter","vertexAttrib4iv","vertexAttribIPointer","uintAttribSetter","vertexAttrib4uiv","matAttribSetter","typeInfo","defaultSize","count","rowOffset","setter","uniform1f","arraySetter","uniform1fv","uniform2fv","cols","uniform3fv","uniform4fv","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","rows","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","attrTypeMap","errorRE","addLineNumbersWithError","src","log","lineOffset","matches","matchAll","lineNoToErrorMap","ndx","lineNo","line","spaceRE","loadShader","shaderSource","shaderType","opt_errorCallback","errFn","createShader","compileShader","getShaderParameter","lastError","getShaderInfoLog","deleteShader","getProgramOptions","opt_attribs","opt_locations","transformFeedbackVaryings","transformFeedbackMode","errorCallback","opt","attribLocations","options","defaultShaderType","deleteShaders","shaders","createProgramFromSources","shaderSources","progOptions","scriptType","realShaders","newShaders","elem","WebGLShader","program","createProgram","attachShader","bindAttribLocation","varyings","linkProgram","getProgramParameter","getProgramInfoLog","getShaderSource","SHADER_TYPE","deleteProgram","isBuiltIn","tokenRE","isDigit","addSetterToUniformTree","fullPath","node","uniformSetters","tokens","tokenNdx","path","token","isArrayIndex","accessor","child","setUniformTree","tree","prop","setUniforms","setters","actualSetters","numArgs","aNdx","setBuffersAndAttributes","programInfo","buffers","vertexArrayObject","bindVertexArray","setAttributes","attribSetters","indices","createProgramInfoFromProgram","textureUnit","createUniformSetter","uniformInfo","endsWith","uniformTree","numUniforms","getActiveUniform","substr","getUniformLocation","createUniformSetters","numAttribs","attribInfo","getActiveAttrib","getAttribLocation","createAttributeSetters","uniformBlockSpec","uniformData","uniformIndices","pname","getActiveUniforms","blockSpecs","numUniformBlocks","getActiveUniformBlockName","blockSpec","getUniformBlockIndex","usedByVertexShader","getActiveUniformBlockParameter","usedByFragmentShader","used","createUniformBlockSpecFromProgram","transformFeedbackInfo","numVaryings","varying","getTransformFeedbackVarying","createTransformFeedbackInfo","ALL_POTENTIAL_ATTRIBUTES","attr","WebGLCanvasDrawer","_Drawer","_super","getContext","alpha","premultipliedAlpha","scaleXWindowSpace","scaleYWindowSpace","pointSize","trackShaders","fromSpecification","populateBuffers","currentTrack","getNextTrack","currentTrackShaderIndex","semanticZoomer","currentMark","getNextMark","addMarkToBuffers","render","requestAnimationFrame","animate","tick","getWebGLViewport","globalUniforms","pointSizeModifier","clearColor","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","clear","COLOR_BUFFER_BIT","useProgram","programInfos","_objectSpread","vertexArrayInfos","bufferInfo","instanceCount","elementType","drawElementsInstanced","drawElements","drawArraysInstanced","drawArrays","drawBufferInfo","getRecommendedDrawingMode","good","source","script","createProgramInfo","buildShader","vao","createVertexArray","createVertexArrayInfo","srcBufferInfo","newAttribs","newIndices","createBufferInfoFromArrays","OffscreenWebGLDrawer","_WebGLCanvasDrawer","_super2","postMessage","onmessage","message","drawer","displayFPSMeter","setSpecification","clearBuffers"],"sourceRoot":""}