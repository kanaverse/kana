{"version":3,"file":"static/js/334.4a0e7a21.chunk.js","mappings":"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","sources":["../node_modules/epiviz.gl/dist/rgb-6a05388e.js","../node_modules/epiviz.gl/dist/specification-processor-c99b2c15.js","../node_modules/epiviz.gl/dist/data-processor-worker-98b67b03.js"],"sourcesContent":["function formatDecimal(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nfunction formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nfunction exponent(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n\nfunction formatGroup(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nfunction formatNumerals(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n\n// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n\n// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nfunction formatTrim(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n\nvar prefixExponent;\n\nfunction formatPrefixAuto(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nfunction formatRounded(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n\nfunction identity(x) {\n  return x;\n}\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction formatLocale(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale;\nvar format;\nvar formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nfunction precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n\n/**\n * Create a function which maps a genome pair to a location in the entire genome\n *\n * @param {String} genomeId key from genomeSizes object\n * @returns a function which maps a (chrId, pairNum) => to\n *  a number between 1 and total number of genes in the genome\n */\nconst createPairMapperToGenome = (genomeId) => {\n  let chrSizes = genomeSizes[genomeId];\n\n  let chrStarts = new Map();\n  let cumulativeTotal = 0;\n  chrSizes.forEach((value, key) => {\n    chrStarts.set(key, cumulativeTotal);\n    cumulativeTotal += value;\n  });\n\n  return (chr, pairNum) => {\n    return chrStarts.get(chr) + pairNum;\n  };\n};\n\nclass GenomeScale {\n  /**\n   * A scale used to map a genome pair to a location between -1 and 1 for data visualization.\n   * Also contains inverse and utility functions for getting labels for axis.\n   *\n   * @param {String} genomeId key from genomeSizes object\n   * @param {Array} domain array of length 2 containing the start and end of the genome\n   *   for the scale. ex: [\"chr2:1000\", \"chr3:2000\"]\n   */\n  constructor(genomeId, domain) {\n    if (genomeSizes[genomeId] === undefined) {\n      console.error(`${genomeId} is not a recognized genome!`);\n    }\n    this.genomeId = genomeId;\n    this.domain = domain;\n\n    let [startChr, startPair] = domain[0]\n      .substring(3) // Remove chr\n      .split(\":\"); // split chromesome and pair number\n    startPair = parseInt(startPair);\n\n    let [endChr, endPair] = domain[1].substring(3).split(\":\");\n    endPair = parseInt(endPair);\n\n    this.mapPairToGenomeIndex = createPairMapperToGenome(genomeId);\n    const firstPairInDomain = this.mapPairToGenomeIndex(startChr, startPair);\n    const lastPairInDomain = this.mapPairToGenomeIndex(endChr, endPair);\n    this.mapGenomeIndexToClipSpace = scale(\n      [firstPairInDomain, lastPairInDomain],\n      [-1, 1]\n    );\n    this.mapGenomeIndexToClipSpaceInverse = scale(\n      [-1, 1],\n      [firstPairInDomain, lastPairInDomain]\n    );\n  }\n\n  /**\n   * Map a genome pair to [-1, 1] with the parts.\n   *\n   * @param {String} chr id of chromosome in genome\n   * @param {Number} pair location in chromosome\n   * @returns value in [-1, 1] corresponding to genome range location\n   */\n  toClipSpaceFromParts(chr, pair) {\n    return this.mapGenomeIndexToClipSpace(this.mapPairToGenomeIndex(chr, pair));\n  }\n\n  /**\n   * Utility method for calling this.toClipSpaceFromParts.\n   *\n   * @param {String} pairStr in form \"chrID:geneNumber\" ex: \"chr1:1000\"\n   * @returns value in [-1, 1] corresponding to genome range location\n   */\n  toClipSpaceFromString(pairStr) {\n    let [chr, pair] = pairStr.substring(3).split(\":\");\n    pair = parseInt(pair);\n    return this.toClipSpaceFromParts(chr, pair);\n  }\n\n  /**\n   * Get the gene id from a value between [-1, 1]\n   *\n   * @param {Number} num number between [-1, 1]\n   * @param {String} formatting used for formatting gene number with d3-format\n   * @returns `chr${chrId}:${chrLoc}`\n   */\n  inverse(num, formatting = false) {\n    let genomeSpot = Math.floor(this.mapGenomeIndexToClipSpaceInverse(num));\n    let chrId;\n    let chrLoc;\n    let cumulativeTotal = 0;\n    for (const [chrKey, pairCount] of genomeSizes[this.genomeId].entries()) {\n      if (cumulativeTotal + pairCount >= genomeSpot) {\n        chrLoc = genomeSpot - cumulativeTotal;\n        chrId = chrKey;\n        break;\n      }\n      cumulativeTotal += pairCount;\n    }\n\n    return formatting\n      ? `chr${chrId}:${format(formatting)(chrLoc)}`\n      : `chr${chrId}:${chrLoc}`;\n  }\n\n  getMidpoint(chr1, gene1, chr2, gene2) {\n    const x1 = this.toClipSpaceFromParts(chr1, gene1);\n    const x2 = this.toClipSpaceFromParts(chr2, gene2);\n    const middleGene = this.inverse((x1 + x2) / 2);\n    const [chrId, gene] = middleGene.substring(3).split(\":\");\n    return [chrId, parseInt(gene)];\n  }\n\n  /**\n   * Get a sequence of ticks for a range in the genome.\n   *\n   * @param {Number} start number between [-1, 1]\n   * @param {Number} end number between [-1, 1] > start\n   * @returns object with tickCoords and corresponding tickLabels property\n   */\n  getTickCoordsAndLabels(start, end) {\n    let [startChr, startPair] = this.inverse(start).substring(3).split(\":\");\n    let [endChr, endPair] = this.inverse(end).substring(3).split(\":\");\n\n    const toReturn = [];\n    let suggestedFormat;\n    if (startChr === endChr) {\n      let difference = endPair - startPair;\n      let magnitude = Math.floor(Math.log10(difference));\n      let startingValue = startPair - (startPair % 10 ** magnitude);\n      suggestedFormat = precisionRound(10 ** magnitude, startingValue);\n\n      for (\n        let currValue = startingValue;\n        currValue < endPair;\n        currValue += 10 ** magnitude\n      ) {\n        toReturn.push(this.toClipSpaceFromParts(startChr, currValue));\n      }\n    } else {\n      suggestedFormat = \"1\";\n      for (const chrId of genomeSizes[this.genomeId].keys()) {\n        toReturn.push(this.toClipSpaceFromParts(chrId, 1));\n      }\n    }\n    return {\n      tickCoords: toReturn,\n      tickLabels: toReturn.map((coord) =>\n        this.inverse(coord, format(`.${suggestedFormat}s`))\n      ),\n    };\n  }\n\n  toCallable() {\n    // TODO investigate if using this method in the vertex calculator leads to slow downs\n    const func = (args) => {\n      return this.toClipSpaceFromParts(args[0], args[1]);\n    };\n    func.isGenomeScale = true;\n    func.mapGenomeIndexToClipSpaceInverse =\n      this.mapGenomeIndexToClipSpaceInverse.bind(this);\n    func.getMidpoint = this.getMidpoint.bind(this);\n    func.getTickCoordsAndLabels = this.getTickCoordsAndLabels.bind(this);\n    return func;\n  }\n\n  /**\n   * Utility method for getting a GenomeScale across an entire genome.\n   *\n   * @param {String} genomeId from genomeSizes\n   * @returns a GenomeScale across an entire genome\n   */\n  static completeScale(genomeId) {\n    const chrSizes = genomeSizes[genomeId];\n    const finalEntry = [...chrSizes.entries()][chrSizes.size - 1];\n\n    return new GenomeScale(genomeId, [\n      \"chr1:1\",\n      `chr${finalEntry[0]}:${finalEntry[1]}`,\n    ]);\n  }\n}\n\n/**\n * Available genomes to visualize. Each genome is a map from chromosome id to number of genes in chromosome.\n * Order matters as maps remember insertion order.\n */\nconst genomeSizes = {\n  hg38: new Map([\n    [\"1\", 248956422], // chr1\n    [\"2\", 242193529], // chr2\n    [\"3\", 198295559], // ...\n    [\"4\", 190214555],\n    [\"5\", 181538259],\n    [\"6\", 170805979],\n    [\"7\", 159345973],\n    [\"8\", 145138636],\n    [\"9\", 138394717],\n    [\"10\", 135086622],\n    [\"11\", 133797422],\n    [\"12\", 133275309],\n    [\"13\", 114364328],\n    [\"14\", 107043718],\n    [\"15\", 101991189],\n    [\"16\", 90338345],\n    [\"17\", 83257441],\n    [\"18\", 80373285],\n    [\"19\", 58617616],\n    [\"20\", 64444167], // ...\n    [\"21\", 46709983], // chr21\n    [\"22\", 50818468], // chr22\n    [\"X\", 156040895], // chrX\n    [\"Y\", 57227415], // chrY\n  ]),\n\n  hg19: new Map([\n    [\"1\", 249250621], // chr1\n    [\"2\", 243199373], // chr2\n    [\"3\", 198022430], // ...\n    [\"4\", 191154276],\n    [\"5\", 180915260],\n    [\"6\", 171115067],\n    [\"7\", 159138663],\n    [\"8\", 146364022],\n    [\"9\", 141213431],\n    [\"10\", 135534747],\n    [\"11\", 135006516],\n    [\"12\", 133851895],\n    [\"13\", 115169878],\n    [\"14\", 107349540],\n    [\"15\", 102531392],\n    [\"16\", 90354753],\n    [\"17\", 81195210],\n    [\"18\", 78077248],\n    [\"19\", 59128983],\n    [\"20\", 63025520], // ...\n    [\"21\", 48129895], // chr21\n    [\"22\", 51304566], // chr22\n    [\"X\", 155270560], // chrX\n    [\"Y\", 59373566], // chrY\n  ]),\n\n  mm9: new Map([\n    [\"1\", 197195432],\n    [\"2\", 181748087],\n    [\"3\", 159599783],\n    [\"4\", 155630120],\n    [\"5\", 152537259],\n    [\"6\", 149517037],\n    [\"7\", 152524553],\n    [\"8\", 131738871],\n    [\"9\", 124076172],\n    [\"10\", 129993255],\n    [\"11\", 121843856],\n    [\"12\", 121257530],\n    [\"13\", 120284312],\n    [\"14\", 125194864],\n    [\"15\", 103494974],\n    [\"16\", 98319150],\n    [\"17\", 95272651],\n    [\"18\", 90772031],\n    [\"19\", 61342430],\n    [\"X\", 166650296],\n    [\"Y\", 15902555],\n  ]),\n\n  mm10: new Map([\n    [\"1\", 195471971],\n    [\"2\", 182113224],\n    [\"3\", 160039680],\n    [\"4\", 156508116],\n    [\"5\", 151834684],\n    [\"6\", 149736546],\n    [\"7\", 145441459],\n    [\"8\", 129401213],\n    [\"9\", 124595110],\n    [\"10\", 130694993],\n    [\"11\", 122082543],\n    [\"12\", 120129022],\n    [\"13\", 120421639],\n    [\"14\", 124902244],\n    [\"15\", 104043685],\n    [\"16\", 98207768],\n    [\"17\", 94987271],\n    [\"18\", 90702639],\n    [\"19\", 61431566],\n    [\"X\", 171031299],\n    [\"Y\", 91744698],\n  ]),\n\n  mm39: new Map([\n    [\"1\", 195154279], // chr1\n    [\"2\", 181755017], // chr2\n    [\"3\", 159745316], // ...\n    [\"4\", 156860686],\n    [\"5\", 151758149],\n    [\"6\", 149588044],\n    [\"7\", 144995196],\n    [\"8\", 130127694],\n    [\"9\", 124359700],\n    [\"10\", 130530862],\n    [\"11\", 121973369],\n    [\"12\", 120092757],\n    [\"13\", 120883175],\n    [\"14\", 125139656],\n    [\"15\", 104073951],\n    [\"16\", 98008968],\n    [\"17\", 95294699], // ...\n    [\"18\", 90720763], // chr18\n    [\"19\", 61420004], // chr19\n    [\"X\", 169476592], // chrX\n    [\"Y\", 91455967], // chrY\n  ]),\n};\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nfunction color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb$1(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb$1, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\n/**\n * Returns a linear scale to map elements in domain to elements in range.\n * @param {Array} domain array of length two containing minimum and maximum values\n * @param {Array} range array of length two containing minimum and maximum values\n * @returns linear scale mapping domain to range\n */\nfunction scale(domain, range) {\n  const domainLength = domain[1] - domain[0];\n  const rangeLength = range[1] - range[0];\n  const slope = rangeLength / domainLength;\n  const intercept = range[1] - slope * domain[1];\n  return (x) => slope * x + intercept;\n}\n\n/**\n * Maps RGB values to integer for webgl buffer.\n *\n * @param {Integer} red value from 0 to 255\n * @param {Integer} green value from 0 to 255\n * @param {Integer} blue value from 0 to 255\n * @returns RGB hex value as integer\n */\nfunction rgbToHex(red, green, blue) {\n  return (red << 16) | (green << 8) | (blue << 0);\n}\n\nfunction rgbStringToHex(rgb) {\n  const colorVals = rgb.substring(4, rgb.length - 1).split(\",\");\n  return rgbToHex(...colorVals.map((asStr) => parseInt(asStr)));\n}\n\nfunction colorSpecifierToHex(specifier) {\n  if (!isNaN(specifier)) {\n    // Specifier is already a hex value\n    return Math.floor(specifier);\n  }\n  const asColor = color(specifier);\n  return rgbToHex(asColor.r, asColor.g, asColor.b);\n}\n\n/**\n * Get the VIEWPORT of the specification to be used by the mouseReader.\n * If all types for a dimension across tracks are categorical or genomic,\n * will default to [-1, 1] for that dimension for the mouseReader. If X or Y\n * has a fixed value, it will consider the width or height channel domains.\n *\n * @param {Object} specification of visualization\n * @returns [smallestX, largestX, smallestY, largestY] of viewport\n */\nfunction getViewportForSpecification(specification) {\n  let smallestX = Number.POSITIVE_INFINITY;\n  let largestX = Number.NEGATIVE_INFINITY;\n  let smallestY = Number.POSITIVE_INFINITY;\n  let largestY = Number.NEGATIVE_INFINITY;\n\n  specification.tracks.forEach((track) => {\n    let xDomain = track.x.domain;\n    if (\n      !xDomain &&\n      track.x.value !== undefined &&\n      track.width.domain !== undefined\n    ) {\n      xDomain = track.width.domain;\n    }\n    let yDomain = track.y.domain;\n    if (\n      !yDomain &&\n      track.y.value !== undefined &&\n      track.height &&\n      track.height.domain !== undefined\n    ) {\n      yDomain = track.height.domain;\n    }\n\n    if (xDomain) {\n      smallestX = xDomain[0] < smallestX ? xDomain[0] : smallestX;\n      largestX = xDomain[1] > largestX ? xDomain[1] : largestX;\n    }\n    if (yDomain) {\n      smallestY = yDomain[0] < smallestY ? yDomain[0] : smallestY;\n      largestY = yDomain[1] > largestY ? yDomain[1] : largestY;\n    }\n  });\n  smallestX = smallestX === Number.POSITIVE_INFINITY ? -1 : smallestX;\n  largestX = largestX === Number.NEGATIVE_INFINITY ? 1 : largestX;\n  smallestY = smallestY === Number.POSITIVE_INFINITY ? -1 : smallestY;\n  largestY = largestY === Number.NEGATIVE_INFINITY ? 1 : largestY;\n\n  return [smallestX, largestX, smallestY, largestY];\n}\n\n/**\n * Given a specification, return a SCALE to be used for mapping data points to clip space\n * for the drawer.\n *\n * @param {String} dimension either x or y\n * @param {Object} specification for the visualization\n * @returns function which can be used to map to an \"x\" or \"y\" value\n */\nconst getScaleForSpecification = (dimension, specification) => {\n  if (dimension !== \"x\" && dimension !== \"y\") {\n    console.error(`${dimension} is not x or y!`);\n  }\n  let genomic = false;\n  let genome;\n  for (const track of specification.tracks) {\n    if (track[dimension].type && track[dimension].type.includes(\"genomic\")) {\n      genome = track[dimension].genome;\n      genomic = true;\n      break;\n    }\n  }\n\n  if (!genomic) {\n    const viewport = getViewportForSpecification(specification);\n    if (dimension === \"x\") {\n      return scale([viewport[0], viewport[1]], [-1, 1]);\n    }\n    return scale([viewport[2], viewport[3]], [-1, 1]);\n  }\n\n  const geneScale = GenomeScale.completeScale(genome);\n\n  let smallestGene = undefined;\n  let smallestGeneValue = Number.POSITIVE_INFINITY;\n  let largestGene = undefined;\n  let largestGeneValue = Number.NEGATIVE_INFINITY;\n\n  for (const track of specification.tracks) {\n    let xDomain = track[dimension].domain;\n    if (xDomain) {\n      if (geneScale.toClipSpaceFromString(xDomain[0]) < smallestGeneValue) {\n        smallestGeneValue = geneScale.toClipSpaceFromString(xDomain[0]);\n        smallestGene = xDomain[0];\n      }\n\n      if (geneScale.toClipSpaceFromString(xDomain[1]) > largestGeneValue) {\n        largestGeneValue = geneScale.toClipSpaceFromString(xDomain[1]);\n        largestGene = xDomain[1];\n      }\n    }\n  }\n\n  const asScale = new GenomeScale(genome, [smallestGene, largestGene]);\n  return asScale.toCallable();\n};\n\nconst RELATIVE_LENGTH_UNITS = [\n  \"em\",\n  \"ex\",\n  \"ch\",\n  \"rem\",\n  \"lh\",\n  \"vw\",\n  \"vh\",\n  \"vmin\",\n  \"vmax\",\n  \"%\",\n];\nconst getPixelMeasurement = (cssMeasurement) => {\n  if (RELATIVE_LENGTH_UNITS.some((unit) => cssMeasurement.includes(unit))) {\n    return false;\n  }\n  const asFloat = parseFloat(cssMeasurement);\n  return isNaN(asFloat) ? false : asFloat;\n};\n\nconst DEFAULT_MARGIN = \"50px\";\nconst DEFAULT_WIDTH = \"100%\";\nconst DEFAULT_HEIGHT = DEFAULT_WIDTH;\nconst getDimAndMarginStyleForSpecification = (specification) => {\n  let toReturn = {};\n  const calculatedMargins = {};\n  if (specification.margins === undefined) {\n    toReturn.margin = DEFAULT_MARGIN;\n    calculatedMargins.top = DEFAULT_MARGIN;\n    calculatedMargins.right = DEFAULT_MARGIN;\n    calculatedMargins.bottom = DEFAULT_MARGIN;\n    calculatedMargins.left = DEFAULT_MARGIN;\n  } else {\n    calculatedMargins.top =\n      specification.margins.top === undefined\n        ? DEFAULT_MARGIN\n        : specification.margins.top;\n    calculatedMargins.right =\n      specification.margins.right === undefined\n        ? DEFAULT_MARGIN\n        : specification.margins.right;\n    calculatedMargins.bottom =\n      specification.margins.bottom === undefined\n        ? DEFAULT_MARGIN\n        : specification.margins.bottom;\n    calculatedMargins.left =\n      specification.margins.left === undefined\n        ? DEFAULT_MARGIN\n        : specification.margins.left;\n    // Shorthand for top right bottom left\n    toReturn.margin = `${calculatedMargins.top}\n                       ${calculatedMargins.right}\n                       ${calculatedMargins.bottom}\n                       ${calculatedMargins.left}`;\n  }\n\n  const calculatedWidth = specification.width || DEFAULT_WIDTH;\n  const calculatedHeight = specification.height || DEFAULT_HEIGHT;\n  const allMeasurements = [\n    calculatedMargins.top,\n    calculatedMargins.right,\n    calculatedMargins.bottom,\n    calculatedMargins.left,\n    calculatedWidth,\n    calculatedHeight,\n  ];\n\n  if (allMeasurements.every(getPixelMeasurement)) {\n    // Let's encode as a number to allow users using typescript or doing weird DOM things able to define\n    // the width and height explicitly\n    toReturn.width =\n      getPixelMeasurement(calculatedWidth) -\n      getPixelMeasurement(calculatedMargins.left) -\n      getPixelMeasurement(calculatedMargins.right);\n    toReturn.height =\n      getPixelMeasurement(calculatedHeight) -\n      getPixelMeasurement(calculatedMargins.bottom) -\n      getPixelMeasurement(calculatedMargins.top);\n  } else {\n    // If user is using css units in their margins and dimensions, then use css calc\n    toReturn.width = `calc(\n      ${calculatedWidth} - \n      ${calculatedMargins.left} - \n      ${calculatedMargins.right}\n    )`;\n\n    toReturn.height = `calc(\n      ${calculatedHeight} - \n      ${calculatedMargins.top} - \n      ${calculatedMargins.bottom}\n    )`;\n  }\n  return toReturn;\n};\n\n/**\n * We need to calculate points on the arc for that mark type, but it needs to be quick.\n * In addition, it shouldn't be a perfect circle, and also should look somewhat arc like.\n * This utility funciton returns function that takes a value between 0 and 1 where 0 maps\n * to the first control point, and 1 maps to the third control point.\n *\n * https://math.stackexchange.com/a/1361717\n *\n * @param {Array} P0 first control point\n * @param {Array} P1 second control point\n * @param {Array} P2 third control point\n * @returns a function [0, 1] -> point on curve\n */\nconst getQuadraticBezierCurveForPoints = (P0, P1, P2) => {\n  const x = (t) =>\n    (1 - t) ** 2 * P0[0] + 2 * t * (1 - t) * P1[0] + t ** 2 * P2[0];\n  const y = (t) =>\n    (1 - t) ** 2 * P0[1] + 2 * t * (1 - t) * P1[1] + t ** 2 * P2[1];\n  return (t) => [x(t), y(t)];\n};\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nvar constant = x => () => x;\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb = (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = rgb$1(start)).r, (end = rgb$1(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = rgb$1(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\n\nexport { Color as C, DEFAULT_WIDTH as D, Rgb as R, color as a, formatPrefix as b, constant as c, format as d, exponent as e, formatSpecifier as f, getDimAndMarginStyleForSpecification as g, getScaleForSpecification as h, getViewportForSpecification as i, DEFAULT_HEIGHT as j, colorSpecifierToHex as k, rgbConvert as l, define as m, extend as n, brighter as o, precisionRound as p, darker as q, rgb as r, scale as s, nogamma as t, hue as u, getQuadraticBezierCurveForPoints as v, rgbBasis as w, rgb$1 as x, rgbStringToHex as y };\n","import { R as Rgb, l as rgbConvert, m as define, n as extend, C as Color, o as brighter, q as darker, t as nogamma, u as hue, v as getQuadraticBezierCurveForPoints, w as rgbBasis, x as rgb, h as getScaleForSpecification, k as colorSpecifierToHex, s as scale, y as rgbStringToHex } from './rgb-6a05388e.js';\n\nconst radians = Math.PI / 180;\nconst degrees = 180 / Math.PI;\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix$2(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix$2, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction cubehelix$1(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = cubehelix$2(start)).h, (end = cubehelix$2(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\ncubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\n// Each size unit refers to 1/200 of the clip space\n// e.g. if the canvas is 1000x1000 pixels, and the size value for a mark\n// is 10, then that mark takes up 10/200 = 1/20 of the clip space which\n// is equal to 50 pixels\nconst SIZE_UNITS = 1 / 100;\n\nconst NUMBER_OF_VERTICES_PER_ARC = 20;\n\nconst ARC_HEIGHT_MODIFIER = 10;\n\n/**\n * Get a curve representing the arc with given start and end points\n *\n * https://math.stackexchange.com/a/1484684\n *\n * @param {Array} P0 start of arc\n * @param {Array} P2 end of arc\n * @returns function mapping 0 to beginning of arc, and 1 to end of arc\n */\nconst getCurveForArc = (P0, P2) => {\n  const midpoint = [P0[0] / 2 + P2[0] / 2, P0[1] / 2 + P2[1] / 2];\n  const slope = (P2[1] - P0[1]) / (P2[0] - P0[0]);\n  const distance = Math.sqrt((P2[1] - P0[1]) ** 2 + (P2[0] - P0[0]) ** 2);\n  if (!isFinite(slope)) {\n    // vertical slope\n    return getQuadraticBezierCurveForPoints(\n      P0,\n      [P0[0] - distance, midpoint[1]],\n      P2\n    );\n  }\n\n  const parameterized = (t) => [\n    midpoint[0] + (t / distance) * (P0[1] - P2[1]),\n    midpoint[1] + (t / distance) * (P2[0] - P0[0]),\n  ];\n\n  return getQuadraticBezierCurveForPoints(\n    P0,\n    parameterized(distance * ARC_HEIGHT_MODIFIER),\n    P2\n  );\n};\n\n/**\n * Transform a mark with a range for coordinates into a simpler mark to draw.\n *\n * @param {Object} mark that contains ranges for x or y\n * @returns mark with fixed x and y but with appropriate width and height for drawing\n */\nconst transformGenomicRangeToStandard = (mark, xScale, yScale) => {\n  let x, y, width, height;\n  if (Array.isArray(mark.x)) {\n    let x1 = xScale(mark.x[0]);\n    x = mark.x[0];\n    width = (xScale(mark.x[1]) - x1) / SIZE_UNITS;\n  } else {\n    x = mark.x;\n    width = mark.width;\n  }\n\n  if (Array.isArray(mark.y)) {\n    let y1 = yScale(mark.y[0]);\n    y = mark.y[0];\n    height = (yScale(mark.y[1]) - y1) / SIZE_UNITS;\n  } else {\n    y = mark.y;\n    height = mark.height;\n  }\n  return {\n    x,\n    y,\n    width,\n    height,\n  };\n};\n\n/**\n * Transform a mark with a range for coordinates and a range for width or height into a simpler mark to draw.\n *\n * @param {Object} mark that contains ranges for x and y, and potentially ranges for width and height\n * @returns mark with fixed x, y, width, and height for drawing\n */\nconst transformGenomicRangeArcToStandard = (mark, xScale, yScale) => {\n  let x, y, width, height;\n  if (Array.isArray(mark.x)) {\n    x = xScale.getMidpoint(\n      mark.x[0][0],\n      mark.x[0][1],\n      mark.x[1][0],\n      mark.x[1][1]\n    );\n    let x2 = xScale.getMidpoint(\n      mark.width[0][0],\n      mark.width[0][1],\n      mark.width[1][0],\n      mark.width[1][1]\n    );\n    let x1ClipSpace = xScale(x);\n    let x2ClipSpace = xScale(x2);\n\n    x = x1ClipSpace < x2ClipSpace ? x : x2;\n    width = Math.abs(xScale(x2) - x1ClipSpace) / SIZE_UNITS;\n  } else {\n    x = mark.x;\n    width = mark.width;\n  }\n\n  if (Array.isArray(mark.y)) {\n    y = yScale.getMidpoint(\n      mark.y[0][0],\n      mark.y[0][1],\n      mark.y[1][0],\n      mark.y[1][1]\n    );\n    let y2 = yScale.getMidpoint(\n      mark.height[0][0],\n      mark.height[0][1],\n      mark.height[1][0],\n      mark.height[1][1]\n    );\n\n    let y1ClipSpace = xScale(y);\n    let y2ClipSpace = xScale(y2);\n\n    y = y1ClipSpace < y2ClipSpace ? y : y2;\n    height = Math.abs(yScale(y2) - y1ClipSpace) / SIZE_UNITS;\n  } else {\n    y = mark.y;\n    height = mark.height;\n  }\n  return {\n    x,\n    y,\n    width,\n    height,\n  };\n};\n\nclass VertexCalculator {\n  /**\n   * A class used to construct the vertices of marks that are given to the drawer to draw.\n   *\n   * @param {Function or GenomeScale} xScale maps the x values of the data to clip space [-1, 1]\n   * @param {Function or GenomeScale} yScale maps the y values of the data to clip space [-1, 1]\n   * @param {Object} track from specification\n   */\n  constructor(xScale, yScale, track) {\n    this.xScale = xScale;\n    this.yScale = yScale;\n\n    this.track = track;\n    this.drawMode = getDrawModeForTrack(track);\n  }\n\n  /**\n   * Construct the vertices of a mark.\n   *\n   * @param {Object} mark to draw\n   * @returns vertices of mark\n   */\n  calculateForMark(mark) {\n    if (\n      this.track.x.type === \"genomicRange\" ||\n      this.track.y.type === \"genomicRange\"\n    ) {\n      if (this.track.mark === \"arc\") {\n        return this._calculateForMark(\n          transformGenomicRangeArcToStandard(mark, this.xScale, this.yScale)\n        );\n      }\n      return this._calculateForMark(\n        transformGenomicRangeToStandard(mark, this.xScale, this.yScale)\n      );\n    }\n    return this._calculateForMark(mark);\n  }\n\n  _calculateForMark(mark) {\n    if (this.track.mark === \"area\") {\n      const toReturn = this._getVerticesForAreaSection(mark);\n      this.lastMark = mark;\n      return toReturn;\n    }\n\n    if (this.track.mark === \"tick\") {\n      return this._getVerticesForTick(mark);\n    }\n\n    if (this.track.mark === \"line\") {\n      return this._getVertexForDot(mark);\n    }\n\n    if (this.track.mark === \"rect\") {\n      return this._getVerticesForRect(mark);\n    }\n\n    if (this.track.mark === \"arc\") {\n      return this._getVerticesForArc(mark);\n    }\n\n    switch (mark.shape) {\n      case \"dot\":\n        if (this.drawMode === \"POINTS\") {\n          return this._getVertexForDot(mark);\n        } else {\n          return this._getVerticesForSquare(mark);\n        }\n      case \"triangle\":\n        return this._getVerticesForTriangle(mark);\n      case \"diamond\":\n        return this._getVerticesForPolygon(mark, 4);\n      case \"pentagon\":\n        return this._getVerticesForPolygon(mark, 5);\n      case \"hexagon\":\n        return this._getVerticesForPolygon(mark, 6);\n      case \"circle\":\n        return this._getVerticesForPolygon(mark, 16);\n      case \"cross\":\n        return this._getVerticesForCross(mark);\n      default:\n        console.error(`${mark.shape} is not a valid shape!`);\n    }\n  }\n\n  _mapToGPUSpace(vertices) {\n    let isX = false;\n    return vertices.map((coord) => {\n      isX = !isX;\n      return isX ? this.xScale(coord) : this.yScale(coord);\n    });\n  }\n\n  _getVerticesForArc(mark) {\n    const startPoint = this._mapToGPUSpace([mark.x, mark.y]);\n    const quadraticCurve = getCurveForArc(startPoint, [\n      startPoint[0] + mark.width * SIZE_UNITS,\n      startPoint[1] + mark.height * SIZE_UNITS,\n    ]);\n\n    const vertices = [\n      ...quadraticCurve(0),\n      ...quadraticCurve(1 / NUMBER_OF_VERTICES_PER_ARC),\n    ];\n\n    for (let i = 2; i < NUMBER_OF_VERTICES_PER_ARC + 1; i++) {\n      const nextPoint = quadraticCurve(i / NUMBER_OF_VERTICES_PER_ARC);\n      vertices.push(\n        vertices[vertices.length - 2],\n        vertices[vertices.length - 1],\n        nextPoint[0],\n        nextPoint[1]\n      );\n    }\n\n    return vertices;\n  }\n\n  _getVerticesForAreaSection(mark) {\n    if (!this.lastMark) {\n      return [];\n    }\n\n    return this._mapToGPUSpace([\n      mark.x,\n      mark.y,\n      this.lastMark.x,\n      this.lastMark.y,\n      mark.x,\n      0, // TODO: Replace 0 to let area charts center around some other number\n      this.lastMark.x,\n      this.lastMark.y,\n      this.lastMark.x,\n      0,\n      mark.x,\n      0,\n    ]);\n  }\n\n  _getVerticesForPolygon(mark, sides) {\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n    const vertices = [];\n\n    for (let theta = 0; theta < 2 * Math.PI; theta += (2 * Math.PI) / sides) {\n      vertices.push(\n        center[0],\n        center[1],\n        center[0] + (mark.size / 2) * Math.cos(theta) * SIZE_UNITS,\n        center[1] + (mark.size / 2) * Math.sin(theta) * SIZE_UNITS,\n        center[0] +\n          (mark.size / 2) *\n            Math.cos(theta + (2 * Math.PI) / sides) *\n            SIZE_UNITS,\n        center[1] +\n          (mark.size / 2) * Math.sin(theta + (2 * Math.PI) / sides) * SIZE_UNITS\n      );\n    }\n    return vertices;\n  }\n\n  _getVerticesForTriangle(mark) {\n    //     1\n    //    / \\\n    //   2---3\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n\n    return [\n      center[0],\n      center[1] + (mark.size / 2) * SIZE_UNITS,\n      center[0] - (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n      center[0] + (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n    ];\n  }\n\n  _getVertexForDot(mark) {\n    return this._mapToGPUSpace([mark.x, mark.y]);\n  }\n\n  _getVerticesForSquare(mark) {\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n    return [\n      center[0] + (mark.size / 2) * SIZE_UNITS, //  2------1,4\n      center[1] + (mark.size / 2) * SIZE_UNITS, //  |    /  |\n      center[0] - (mark.size / 2) * SIZE_UNITS, //  |  /    |\n      center[1] + (mark.size / 2) * SIZE_UNITS, // 3,5------6\n      center[0] - (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n      center[0] + (mark.size / 2) * SIZE_UNITS,\n      center[1] + (mark.size / 2) * SIZE_UNITS,\n      center[0] - (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n      center[0] + (mark.size / 2) * SIZE_UNITS,\n      center[1] - (mark.size / 2) * SIZE_UNITS,\n    ];\n  }\n\n  _getVerticesForRect(mark) {\n    //  1-----------3,6\n    //  |       /    |\n    //  |     /      |\n    // 2,5-----------4\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n    return [\n      center[0],\n      center[1] + mark.height * SIZE_UNITS,\n      center[0],\n      center[1],\n      center[0] + mark.width * SIZE_UNITS,\n      center[1] + mark.height * SIZE_UNITS,\n      center[0] + mark.width * SIZE_UNITS,\n      center[1],\n      center[0],\n      center[1],\n      center[0] + mark.width * SIZE_UNITS,\n      center[1] + mark.height * SIZE_UNITS,\n    ];\n  }\n\n  _getVerticesForTick(mark) {\n    const center = this._mapToGPUSpace([mark.x, mark.y]);\n    // 1----2\n    if (this.track.width) {\n      return [\n        center[0],\n        center[1],\n        center[0] + mark.width * SIZE_UNITS,\n        center[1],\n      ];\n    }\n\n    // 1\n    // |\n    // 2\n    if (mark.height) {\n      // default to mark value which has default if height never specified in track\n      return [\n        center[0],\n        center[1],\n        center[0],\n        center[1] + mark.height * SIZE_UNITS,\n      ];\n    }\n  }\n}\n\nfunction colors(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar Accent = colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n\nvar Dark2 = colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n\nvar Paired = colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n\nvar Pastel1 = colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n\nvar Pastel2 = colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n\nvar Set1 = colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n\nvar Set2 = colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n\nvar Set3 = colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n\nvar Tableau10 = colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n\nvar ramp$1 = scheme => rgbBasis(scheme[scheme.length - 1]);\n\nvar scheme$q = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nvar BrBG = ramp$1(scheme$q);\n\nvar scheme$p = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nvar PRGn = ramp$1(scheme$p);\n\nvar scheme$o = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nvar PiYG = ramp$1(scheme$o);\n\nvar scheme$n = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nvar PuOr = ramp$1(scheme$n);\n\nvar scheme$m = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nvar RdBu = ramp$1(scheme$m);\n\nvar scheme$l = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nvar RdGy = ramp$1(scheme$l);\n\nvar scheme$k = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nvar RdYlBu = ramp$1(scheme$k);\n\nvar scheme$j = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nvar RdYlGn = ramp$1(scheme$j);\n\nvar scheme$i = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nvar Spectral = ramp$1(scheme$i);\n\nvar scheme$h = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nvar BuGn = ramp$1(scheme$h);\n\nvar scheme$g = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nvar BuPu = ramp$1(scheme$g);\n\nvar scheme$f = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nvar GnBu = ramp$1(scheme$f);\n\nvar scheme$e = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nvar OrRd = ramp$1(scheme$e);\n\nvar scheme$d = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nvar PuBuGn = ramp$1(scheme$d);\n\nvar scheme$c = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nvar PuBu = ramp$1(scheme$c);\n\nvar scheme$b = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nvar PuRd = ramp$1(scheme$b);\n\nvar scheme$a = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nvar RdPu = ramp$1(scheme$a);\n\nvar scheme$9 = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nvar YlGnBu = ramp$1(scheme$9);\n\nvar scheme$8 = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nvar YlGn = ramp$1(scheme$8);\n\nvar scheme$7 = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nvar YlOrBr = ramp$1(scheme$7);\n\nvar scheme$6 = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nvar YlOrRd = ramp$1(scheme$6);\n\nvar scheme$5 = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nvar Blues = ramp$1(scheme$5);\n\nvar scheme$4 = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nvar Greens = ramp$1(scheme$4);\n\nvar scheme$3 = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nvar Greys = ramp$1(scheme$3);\n\nvar scheme$2 = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nvar Purples = ramp$1(scheme$2);\n\nvar scheme$1 = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nvar Reds = ramp$1(scheme$1);\n\nvar scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nvar Oranges = ramp$1(scheme);\n\nfunction cividis(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\n      + \")\";\n}\n\nvar cubehelix = cubehelixLong(cubehelix$2(300, 0.5, 0.0), cubehelix$2(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix$2(-100, 0.75, 0.35), cubehelix$2(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix$2(260, 0.75, 0.35), cubehelix$2(80, 1.50, 0.8));\n\nvar c$1 = cubehelix$2();\n\nfunction rainbow(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c$1.h = 360 * t - 100;\n  c$1.s = 1.5 - 1.5 * ts;\n  c$1.l = 0.8 - 0.9 * ts;\n  return c$1 + \"\";\n}\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nfunction sinebow(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n\nfunction turbo(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\n      + \")\";\n}\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nvar d3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  schemeCategory10: category10,\n  schemeAccent: Accent,\n  schemeDark2: Dark2,\n  schemePaired: Paired,\n  schemePastel1: Pastel1,\n  schemePastel2: Pastel2,\n  schemeSet1: Set1,\n  schemeSet2: Set2,\n  schemeSet3: Set3,\n  schemeTableau10: Tableau10,\n  interpolateBrBG: BrBG,\n  schemeBrBG: scheme$q,\n  interpolatePRGn: PRGn,\n  schemePRGn: scheme$p,\n  interpolatePiYG: PiYG,\n  schemePiYG: scheme$o,\n  interpolatePuOr: PuOr,\n  schemePuOr: scheme$n,\n  interpolateRdBu: RdBu,\n  schemeRdBu: scheme$m,\n  interpolateRdGy: RdGy,\n  schemeRdGy: scheme$l,\n  interpolateRdYlBu: RdYlBu,\n  schemeRdYlBu: scheme$k,\n  interpolateRdYlGn: RdYlGn,\n  schemeRdYlGn: scheme$j,\n  interpolateSpectral: Spectral,\n  schemeSpectral: scheme$i,\n  interpolateBuGn: BuGn,\n  schemeBuGn: scheme$h,\n  interpolateBuPu: BuPu,\n  schemeBuPu: scheme$g,\n  interpolateGnBu: GnBu,\n  schemeGnBu: scheme$f,\n  interpolateOrRd: OrRd,\n  schemeOrRd: scheme$e,\n  interpolatePuBuGn: PuBuGn,\n  schemePuBuGn: scheme$d,\n  interpolatePuBu: PuBu,\n  schemePuBu: scheme$c,\n  interpolatePuRd: PuRd,\n  schemePuRd: scheme$b,\n  interpolateRdPu: RdPu,\n  schemeRdPu: scheme$a,\n  interpolateYlGnBu: YlGnBu,\n  schemeYlGnBu: scheme$9,\n  interpolateYlGn: YlGn,\n  schemeYlGn: scheme$8,\n  interpolateYlOrBr: YlOrBr,\n  schemeYlOrBr: scheme$7,\n  interpolateYlOrRd: YlOrRd,\n  schemeYlOrRd: scheme$6,\n  interpolateBlues: Blues,\n  schemeBlues: scheme$5,\n  interpolateGreens: Greens,\n  schemeGreens: scheme$4,\n  interpolateGreys: Greys,\n  schemeGreys: scheme$3,\n  interpolatePurples: Purples,\n  schemePurples: scheme$2,\n  interpolateReds: Reds,\n  schemeReds: scheme$1,\n  interpolateOranges: Oranges,\n  schemeOranges: scheme,\n  interpolateCividis: cividis,\n  interpolateCubehelixDefault: cubehelix,\n  interpolateRainbow: rainbow,\n  interpolateWarm: warm,\n  interpolateCool: cool,\n  interpolateSinebow: sinebow,\n  interpolateTurbo: turbo,\n  interpolateViridis: viridis,\n  interpolateMagma: magma,\n  interpolateInferno: inferno,\n  interpolatePlasma: plasma\n});\n\n// Default channel values of specification which is passed to webgl drawer\nconst DEFAULT_CHANNELS = Object.freeze({\n  size: {\n    value: 1,\n    numComponents: 1,\n    type: \"float\",\n  },\n  color: {\n    value: 255 ** 3,\n    numComponents: 1,\n    type: \"float\",\n  },\n  x: {\n    value: 0,\n    numComponents: null, // x and y are placed in an attribute vector in the shader that is already handled\n    type: null, // i.e. calls to numComponents or type should not happen as it would break the shader\n  },\n  y: {\n    value: 0,\n    numComponents: null,\n    type: null,\n  },\n  opacity: {\n    value: 1,\n    numComponents: 1,\n    type: \"float\",\n  },\n  shape: {\n    value: \"dot\",\n    numComponents: null,\n    type: null, // Will not interact with shader code\n  },\n  width: {\n    // Default values for width and height add complications\n    // to mapping geometry and creating tick vertices\n    value: undefined,\n    numComponents: 1,\n    type: \"float\",\n  },\n\n  height: {\n    value: undefined,\n    numComponents: 1,\n    type: \"float\",\n  },\n});\n\nconst DEFAULT_MAX_SIZE = 100;\nconst DEFAULT_MIN_SIZE = 0;\nconst DEFAULT_MIN_OPACITY = 0;\n\nconst DEFAULT_MIN_WIDTH = 0;\nconst DEFAULT_MIN_HEIGHT = 0;\nconst DEFAULT_MAX_WIDTH = 1 / SIZE_UNITS;\nconst DEFAULT_MAX_HEIGHT = 1 / SIZE_UNITS;\n\nconst DEFAULT_COLOR_SCHEME = \"interpolateBrBG\";\n\n// first value is undefined as categories are 1-indexed\nconst SHAPES = [undefined, \"dot\", \"triangle\", \"circle\", \"diamond\"];\n\n/**\n * Given a track, determine the WebGL draw mode for it\n *\n * @param {Object} track from specification\n * @returns WebGLDrawMode as a string\n */\nconst getDrawModeForTrack = (track) => {\n  switch (track.mark) {\n    case \"line\":\n      return \"LINE_STRIP\";\n    case \"tick\":\n    case \"arc\":\n      return \"LINES\";\n    case \"point\":\n      if (track.shape && track.shape.value !== \"dot\") {\n        return \"TRIANGLES\";\n      } else {\n        return \"POINTS\";\n      }\n    case \"rect\":\n    case \"area\":\n      return \"TRIANGLES\";\n  }\n};\n\nclass SpecificationProcessor {\n  /**\n   * Process a specification by reading in the data, the channel information, and producing an\n   * iterator like interface with getNextTrack to feed to a drawer.\n   *\n   * @param {Object} specification user defined specification\n   * @param {Function} callback function to call after all the data has been loaded\n   */\n  constructor(specification, callback) {\n    this.index = 0;\n    this.specification = specification;\n    if (typeof specification.defaultData === \"string\") {\n      // data is a url to get\n      this.dataPromise = fetch(specification.defaultData)\n        .then((response) => response.text())\n        .then((text) => (this.data = text.split(\"\\n\")));\n    } else if (specification.defaultData) {\n      // default data is defined, assumed to be an object\n      this.data = specification.defaultData;\n      this.isInlineData = true;\n    }\n    this.tracks = specification.tracks.map((track) => new Track(this, track));\n\n    const allPromises = this.tracks\n      .map((track) => track.dataPromise)\n      .filter((p) => p); // Removes undefined\n    if (this.dataPromise) {\n      allPromises.push(this.dataPromise);\n    }\n\n    this.xScale = getScaleForSpecification(\"x\", specification);\n    this.yScale = getScaleForSpecification(\"y\", specification);\n\n    // When all tracks have acquired their data, call the callback\n    // TODO: Allow tracks to be processed while waiting for others, need to keep in mind order\n    Promise.all(allPromises).then(() => callback(this));\n  }\n\n  /**\n   * Get the next track to process\n   * @returns {@link Track}\n   */\n  getNextTrack() {\n    if (this.index >= this.tracks.length) {\n      return null;\n    }\n    return this.tracks[this.index++];\n  }\n}\n\nclass Track {\n  /**\n   * Process a track from a specification by loading data and producing an iterator\n   * like interface with getNextDataPoint or getNextMark.\n   *\n   * @param {Object} specification user defined visualization\n   * @param {Object} track user defined track\n   */\n  constructor(specification, track) {\n    this.track = track;\n\n    if (typeof track.data === \"string\") {\n      // Track has its own data to GET\n      this.dataPromise = fetch(track.data)\n        .then((response) => response.text())\n        .then((text) => {\n          this.data = text.split(/[\\n\\r]+/);\n          this.processHeadersAndMappers();\n          this.hasOwnData = true;\n        });\n    } else if (track.data) {\n      // Track has its own inline data\n      this.data = track.data;\n      this.isInlineData = true;\n      this.processHeadersAndMappers();\n      this.hasOwnData = true;\n    } else if (specification.data) {\n      // Track does not have its own data, but the specification has default data\n      this.data = specification.data;\n      this.isInlineData = specification.isInlineData;\n      this.processHeadersAndMappers();\n    } else if (specification.dataPromise) {\n      // Track does not have its own data, but the specification is GETting default data\n      specification.dataPromise.then(() => {\n        this.data = specification.data;\n        this.processHeadersAndMappers();\n      });\n    } else {\n      console.error(\n        `Could not find data (no defaultData in specification and no data specified for this track) for track ${track}.`\n      );\n    }\n  }\n\n  /**\n   * Read the headers from the first row of data and then build functions to map a data row\n   * to a channel value for drawing. Ultimately a method due to clunky constructor.\n   */\n  processHeadersAndMappers() {\n    // Processing headers\n    if (this.isInlineData) {\n      this.headers = Object.keys(this.data);\n      this.data.length = this.data[this.headers[0]].length; // assign length to data object for iteration\n      this.index = 0;\n    } else {\n      this.headers = this.data[0].split(\",\");\n      this.index = 1; // 1 to skip header\n    }\n\n    // Creating channel mappers\n    this.channelMaps = new Map();\n    Object.keys(DEFAULT_CHANNELS).forEach((channel) => {\n      this.channelMaps.set(channel, this.buildMapperForChannel(channel));\n    });\n  }\n\n  /**\n   * Get the next data point from the track. Returns null when all points have been returned.\n   * @returns A data point with the x and y coordinates and other attributes from the header\n   */\n  getNextDataPoint() {\n    if (this.index >= this.data.length) {\n      return null;\n    }\n\n    const toReturn = { geometry: { coordinates: [], dimensions: [] } };\n    let splitted;\n    if (this.isInlineData) {\n      splitted = this.headers.map((header) => this.data[header][this.index]);\n    } else {\n      const currRow = this.data[this.index];\n      splitted = currRow.split(\",\");\n    }\n\n    this.index++;\n\n    this.headers.forEach((header, index) => {\n      toReturn[header] = splitted[index];\n    });\n\n    const rawHeight = this.channelMaps.get(\"height\")(splitted);\n    const rawWidth = this.channelMaps.get(\"width\")(splitted);\n    const x = this.channelMaps.get(\"x\")(splitted);\n    const y = this.channelMaps.get(\"y\")(splitted);\n    toReturn.geometry.coordinates.push(x, y);\n    toReturn.geometry.dimensions.push(rawWidth, rawHeight);\n    return toReturn;\n  }\n\n  /**\n   * Get the next mark from the track for the drawer to process. Returns null when all\n   * marks have been returned.\n   * @returns An object containing information used to draw a mark for a row of data.\n   */\n  getNextMark() {\n    // Getting the next mark cannot modify the data objects as other tracks may refer to\n    // the same data\n    if (this.index >= this.data.length) {\n      return null;\n    }\n\n    const toReturn = {};\n    let splitted;\n    if (this.isInlineData) {\n      splitted = this.headers.map((header) => this.data[header][this.index]);\n    } else {\n      const currRow = this.data[this.index];\n      splitted = currRow.split(\",\");\n    }\n\n    this.index++;\n\n    this.channelMaps.forEach((mapper, channel) => {\n      toReturn[channel] = mapper(splitted);\n    });\n\n    return toReturn;\n  }\n\n  /**\n   * Builds a function which maps an attribute value to a channel value for use by the drawer.\n   * The function will return a default if not present in the track, or a constant if\n   * value is defined.\n   *\n   * @param {String} channel one of the channels listed in default channels\n   * @returns the function\n   */\n  buildMapperForChannel(channel) {\n    if (channel in this.track) {\n      const channelInfo = this.track[channel];\n      if (\"value\" in channelInfo) {\n        if (channel === \"color\") {\n          channelInfo.value = colorSpecifierToHex(channelInfo.value);\n        }\n        return () => channelInfo.value;\n      } else {\n        const attributeIndex = this.headers.indexOf(channelInfo.attribute);\n        let attrMapper;\n\n        switch (channelInfo.type) {\n          case \"inline\":\n            attrMapper = buildMapperForInlineChannel(channel);\n            break;\n          case \"quantitative\":\n            attrMapper = buildMapperForQuantitiveChannel(channel, channelInfo);\n            break;\n          case \"categorical\":\n            attrMapper = buildMapperForCategoricalChannel(channel, channelInfo);\n            break;\n          case \"genomic\":\n            const chrAttributeIndex = this.headers.indexOf(\n              channelInfo.chrAttribute\n            );\n            const geneAttributeIndex = this.headers.indexOf(\n              channelInfo.geneAttribute\n            );\n            attrMapper = buildMapperForGenomicChannel(channel);\n            return (row) =>\n              attrMapper(row[chrAttributeIndex], row[geneAttributeIndex]);\n          case \"genomicRange\":\n            const genomicAttributeIndices = [\n              this.headers.indexOf(channelInfo.chrAttribute),\n              this.headers.indexOf(channelInfo.startAttribute),\n              this.headers.indexOf(channelInfo.endAttribute),\n            ];\n            attrMapper = buildMapperForGenomicRangeChannel(\n              channel);\n            return (\n              row // Pass in values for the genomic attributes to mapper\n            ) =>\n              attrMapper(...genomicAttributeIndices.map((index) => row[index]));\n        }\n        return (row) => attrMapper(row[attributeIndex]);\n      }\n    } else {\n      return () => DEFAULT_CHANNELS[channel].value;\n    }\n  };\n}\n\n/**\n * Build a function which maps an attribute that is a channel value to a compatible value.\n *\n * @param {String} channel the name of the channel to build an inline mapper for\n * @param {Object} channelInfo the info of the channel from a track\n * @returns a function that maps attribute values to appropriate channel values.\n */\nconst buildMapperForInlineChannel = (channel, channelInfo) => {\n  switch (channel) {\n    case \"width\":\n    case \"height\":\n    case \"size\":\n      return (dimension) => parseFloat(dimension);\n    case \"color\":\n      return (color) => colorSpecifierToHex(color);\n    default:\n      console.info(\n        `No special behavior for ${channel} as an inline attribute.`\n      );\n      return (inlineValue) => inlineValue;\n  }\n};\n\n/**\n * Build a function which maps a numerical value for an attribute to a property of a mark\n * @param {*} channel the name of the quantitative channel to map\n * @param {*} channelInfo the object containing info for this channel from the specification\n * @returns a function that maps a data attribute value to a channel value\n */\nconst buildMapperForQuantitiveChannel = (channel, channelInfo) => {\n  switch (channel) {\n    case \"x\":\n    case \"y\":\n      // Map x and y to itself, but we need a function to do it\n      return (coord) => parseFloat(coord);\n    case \"opacity\":\n      return scale(channelInfo.domain, [\n        channelInfo.minOpacity || DEFAULT_MIN_OPACITY,\n        1,\n      ]);\n    case \"size\":\n      return scale(channelInfo.domain, [\n        channelInfo.minSize || DEFAULT_MIN_SIZE,\n        channelInfo.maxSize || DEFAULT_MAX_SIZE,\n      ]);\n    case \"color\":\n      const d3colorScale =\n        !channelInfo.colorScheme || !(channelInfo.colorScheme in d3)\n          ? d3[DEFAULT_COLOR_SCHEME]\n          : d3[channelInfo.colorScheme];\n      const zeroToOneScale = scale(channelInfo.domain, [0, 1]);\n      return (attrValue) =>\n        rgbStringToHex(d3colorScale(zeroToOneScale(attrValue)));\n    case \"width\":\n      return scale(channelInfo.domain, [\n        channelInfo.minWidth || DEFAULT_MIN_WIDTH,\n        channelInfo.maxWidth || DEFAULT_MAX_WIDTH,\n      ]);\n    case \"height\":\n      return scale(channelInfo.domain, [\n        channelInfo.minHeight || DEFAULT_MIN_HEIGHT,\n        channelInfo.maxHeight || DEFAULT_MAX_WIDTH,\n      ]);\n    default:\n      console.error(\n        `${channel} is not a supported channel for quantitative attributes!`\n      );\n  }\n};\n\n/**\n * Build a function which maps a discrete (integers are possible) value for an attribute\n * to a property of a mark\n * @param {*} channel the name of the categorical channel to map\n * @param {*} channelInfo the object containing info for this channel from the specification\n * @returns a function that maps a data attribute value to a channel value\n */\nconst buildMapperForCategoricalChannel = (channel, channelInfo) => {\n  const categoryTracker = new Map();\n  let channelScale;\n  switch (channel) {\n    case \"x\":\n    case \"y\":\n      // +1 here to avoid setting x or y at a boundary that makes it not visible\n      channelScale = scale([1, channelInfo.cardinality + 1], [-1, 1]);\n      break;\n    case \"opacity\":\n      channelScale = scale(\n        [1, channelInfo.cardinality],\n        [channelInfo.minOpacity || DEFAULT_MIN_OPACITY, 1]\n      );\n      break;\n    case \"size\":\n      channelScale = scale(\n        [1, channelInfo.cardinality],\n        [\n          channelInfo.minSize || DEFAULT_MIN_SIZE,\n          channelInfo.maxSize || DEFAULT_MAX_SIZE,\n        ]\n      );\n      break;\n    case \"shape\":\n      channelScale = (categoryId) => SHAPES[categoryId % SHAPES.length];\n      break;\n    case \"color\":\n      let d3colorScale =\n        !channelInfo.colorScheme || !(channelInfo.colorScheme in d3)\n          ? d3[DEFAULT_COLOR_SCHEME]\n          : d3[channelInfo.colorScheme];\n      if (Array.isArray(d3colorScale)) {\n        console.error(\n          \"Currenty only interpolating color schemes are supported, using default\"\n        );\n        d3colorScale = d3[DEFAULT_COLOR_SCHEME];\n      }\n      const zeroToOneScale = scale([1, channelInfo.cardinality], [0, 1]);\n      channelScale = (categoryId) =>\n        rgbStringToHex(d3colorScale(zeroToOneScale(categoryId)));\n      break;\n    case \"width\":\n      channelScale = scale(\n        [1, channelInfo.cardinality],\n        [\n          channelInfo.minWidth || DEFAULT_MIN_WIDTH,\n          channelInfo.maxWidth || DEFAULT_MAX_WIDTH,\n        ]\n      );\n      break;\n    case \"height\":\n      channelScale = scale(\n        [1, channelInfo.cardinality],\n        [\n          channelInfo.minHeight || DEFAULT_MIN_HEIGHT,\n          channelInfo.maxHeight || DEFAULT_MAX_HEIGHT,\n        ]\n      );\n      break;\n    default:\n      console.error(\n        `${channel} is not a supported channel for categorical attributes!`\n      );\n  }\n\n  return (attrValue) => {\n    if (!categoryTracker.has(attrValue)) {\n      categoryTracker.set(attrValue, categoryTracker.size + 1);\n    }\n    return channelScale(categoryTracker.get(attrValue));\n  };\n};\n\n/**\n * Build a function which maps a genome chr, gene, to an object consumable by a GenomeScale\n * @param {*} channel either x or y\n * @param {*} channelInfo the object containing info for this channel from the specification\n * @returns a function that maps (genomeChr, geneLoc) -> [chrId, geneLocation]\n *  ex: [\"X\", 200]\n */\nconst buildMapperForGenomicChannel = (channel, channelInfo) => {\n  switch (channel) {\n    case \"x\":\n    case \"y\":\n      return (chr, gene) => {\n        let chrId = chr.startsWith(\"chr\") ? chr.substring(3) : chr.toString();\n        return [chrId, parseInt(gene)];\n      };\n\n    default:\n      console.error(\n        `${channel} is not a supported channel for genomic attributes!`\n      );\n  }\n};\n\n/**\n * Build a function which maps a genome chr, start, and end to an object consumable by a scale\n * @param {*} channel either x or y, width or height may be included if doing arc marks\n * @param {*} channelInfo the object containing info for this channel from the specification\n * @returns a function that maps (genomeChr, genomeStart, genomeEnd) -> an object containing mark metadata for position\n *  format: [chrId, geneLocation, chrId2, geneLocation2]\n *  ex: [\"1\", 1000, \"X\", 2000]\n */\nconst buildMapperForGenomicRangeChannel = (channel, channelInfo) => {\n  switch (channel) {\n    case \"width\":\n    case \"height\":\n    case \"x\":\n    case \"y\":\n      return (chr, genomeStart, genomeEnd) => {\n        let chrId = chr.startsWith(\"chr\") ? chr.substring(3) : chr.toString();\n        return [\n          [chrId, parseInt(genomeStart)],\n          [chrId, parseInt(genomeEnd)],\n        ];\n      };\n\n    default:\n      console.error(\n        `${channel} is not a supported channel for genomic attributes!`\n      );\n  }\n};\n\nexport { DEFAULT_CHANNELS as D, SpecificationProcessor as S, VertexCalculator as V, SIZE_UNITS as a, transformGenomicRangeToStandard as b, getDrawModeForTrack as g, transformGenomicRangeArcToStandard as t };\n","import { a as SIZE_UNITS, t as transformGenomicRangeArcToStandard, b as transformGenomicRangeToStandard, S as SpecificationProcessor } from './specification-processor-c99b2c15.js';\nimport { i as getViewportForSpecification } from './rgb-6a05388e.js';\n\nclass FlatQueue {\n\n    constructor() {\n        this.ids = [];\n        this.values = [];\n        this.length = 0;\n    }\n\n    clear() {\n        this.length = 0;\n    }\n\n    push(id, value) {\n        let pos = this.length++;\n        this.ids[pos] = id;\n        this.values[pos] = value;\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const parentValue = this.values[parent];\n            if (value >= parentValue) break;\n            this.ids[pos] = this.ids[parent];\n            this.values[pos] = parentValue;\n            pos = parent;\n        }\n\n        this.ids[pos] = id;\n        this.values[pos] = value;\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.ids[0];\n        this.length--;\n\n        if (this.length > 0) {\n            const id = this.ids[0] = this.ids[this.length];\n            const value = this.values[0] = this.values[this.length];\n            const halfLength = this.length >> 1;\n            let pos = 0;\n\n            while (pos < halfLength) {\n                let left = (pos << 1) + 1;\n                const right = left + 1;\n                let bestIndex = this.ids[left];\n                let bestValue = this.values[left];\n                const rightValue = this.values[right];\n\n                if (right < this.length && rightValue < bestValue) {\n                    left = right;\n                    bestIndex = this.ids[right];\n                    bestValue = rightValue;\n                }\n                if (bestValue >= value) break;\n\n                this.ids[pos] = bestIndex;\n                this.values[pos] = bestValue;\n                pos = left;\n            }\n\n            this.ids[pos] = id;\n            this.values[pos] = value;\n        }\n\n        return top;\n    }\n\n    peek() {\n        if (this.length === 0) return undefined;\n        return this.ids[0];\n    }\n\n    peekValue() {\n        if (this.length === 0) return undefined;\n        return this.values[0];\n    }\n}\n\nconst ARRAY_TYPES = [\n    Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array,\n    Int32Array, Uint32Array, Float32Array, Float64Array\n];\n\nconst VERSION = 3; // serialized format version\n\nclass Flatbush {\n\n    static from(data) {\n        if (!(data instanceof ArrayBuffer)) {\n            throw new Error('Data must be an instance of ArrayBuffer.');\n        }\n        const [magic, versionAndType] = new Uint8Array(data, 0, 2);\n        if (magic !== 0xfb) {\n            throw new Error('Data does not appear to be in a Flatbush format.');\n        }\n        if (versionAndType >> 4 !== VERSION) {\n            throw new Error(`Got v${versionAndType >> 4} data when expected v${VERSION}.`);\n        }\n        const [nodeSize] = new Uint16Array(data, 2, 1);\n        const [numItems] = new Uint32Array(data, 4, 1);\n\n        return new Flatbush(numItems, nodeSize, ARRAY_TYPES[versionAndType & 0x0f], data);\n    }\n\n    constructor(numItems, nodeSize = 16, ArrayType = Float64Array, data) {\n        if (numItems === undefined) throw new Error('Missing required argument: numItems.');\n        if (isNaN(numItems) || numItems <= 0) throw new Error(`Unpexpected numItems value: ${numItems}.`);\n\n        this.numItems = +numItems;\n        this.nodeSize = Math.min(Math.max(+nodeSize, 2), 65535);\n\n        // calculate the total number of nodes in the R-tree to allocate space for\n        // and the index of each tree level (used in search later)\n        let n = numItems;\n        let numNodes = n;\n        this._levelBounds = [n * 4];\n        do {\n            n = Math.ceil(n / this.nodeSize);\n            numNodes += n;\n            this._levelBounds.push(numNodes * 4);\n        } while (n !== 1);\n\n        this.ArrayType = ArrayType || Float64Array;\n        this.IndexArrayType = numNodes < 16384 ? Uint16Array : Uint32Array;\n\n        const arrayTypeIndex = ARRAY_TYPES.indexOf(this.ArrayType);\n        const nodesByteSize = numNodes * 4 * this.ArrayType.BYTES_PER_ELEMENT;\n\n        if (arrayTypeIndex < 0) {\n            throw new Error(`Unexpected typed array class: ${ArrayType}.`);\n        }\n\n        if (data && (data instanceof ArrayBuffer)) {\n            this.data = data;\n            this._boxes = new this.ArrayType(this.data, 8, numNodes * 4);\n            this._indices = new this.IndexArrayType(this.data, 8 + nodesByteSize, numNodes);\n\n            this._pos = numNodes * 4;\n            this.minX = this._boxes[this._pos - 4];\n            this.minY = this._boxes[this._pos - 3];\n            this.maxX = this._boxes[this._pos - 2];\n            this.maxY = this._boxes[this._pos - 1];\n\n        } else {\n            this.data = new ArrayBuffer(8 + nodesByteSize + numNodes * this.IndexArrayType.BYTES_PER_ELEMENT);\n            this._boxes = new this.ArrayType(this.data, 8, numNodes * 4);\n            this._indices = new this.IndexArrayType(this.data, 8 + nodesByteSize, numNodes);\n            this._pos = 0;\n            this.minX = Infinity;\n            this.minY = Infinity;\n            this.maxX = -Infinity;\n            this.maxY = -Infinity;\n\n            new Uint8Array(this.data, 0, 2).set([0xfb, (VERSION << 4) + arrayTypeIndex]);\n            new Uint16Array(this.data, 2, 1)[0] = nodeSize;\n            new Uint32Array(this.data, 4, 1)[0] = numItems;\n        }\n\n        // a priority queue for k-nearest-neighbors queries\n        this._queue = new FlatQueue();\n    }\n\n    add(minX, minY, maxX, maxY) {\n        const index = this._pos >> 2;\n        this._indices[index] = index;\n        this._boxes[this._pos++] = minX;\n        this._boxes[this._pos++] = minY;\n        this._boxes[this._pos++] = maxX;\n        this._boxes[this._pos++] = maxY;\n\n        if (minX < this.minX) this.minX = minX;\n        if (minY < this.minY) this.minY = minY;\n        if (maxX > this.maxX) this.maxX = maxX;\n        if (maxY > this.maxY) this.maxY = maxY;\n\n        return index;\n    }\n\n    finish() {\n        if (this._pos >> 2 !== this.numItems) {\n            throw new Error(`Added ${this._pos >> 2} items when expected ${this.numItems}.`);\n        }\n\n        if (this.numItems <= this.nodeSize) {\n            // only one node, skip sorting and just fill the root box\n            this._boxes[this._pos++] = this.minX;\n            this._boxes[this._pos++] = this.minY;\n            this._boxes[this._pos++] = this.maxX;\n            this._boxes[this._pos++] = this.maxY;\n            return;\n        }\n\n        const width = this.maxX - this.minX;\n        const height = this.maxY - this.minY;\n        const hilbertValues = new Uint32Array(this.numItems);\n        const hilbertMax = (1 << 16) - 1;\n\n        // map item centers into Hilbert coordinate space and calculate Hilbert values\n        for (let i = 0; i < this.numItems; i++) {\n            let pos = 4 * i;\n            const minX = this._boxes[pos++];\n            const minY = this._boxes[pos++];\n            const maxX = this._boxes[pos++];\n            const maxY = this._boxes[pos++];\n            const x = Math.floor(hilbertMax * ((minX + maxX) / 2 - this.minX) / width);\n            const y = Math.floor(hilbertMax * ((minY + maxY) / 2 - this.minY) / height);\n            hilbertValues[i] = hilbert(x, y);\n        }\n\n        // sort items by their Hilbert value (for packing later)\n        sort(hilbertValues, this._boxes, this._indices, 0, this.numItems - 1, this.nodeSize);\n\n        // generate nodes at each tree level, bottom-up\n        for (let i = 0, pos = 0; i < this._levelBounds.length - 1; i++) {\n            const end = this._levelBounds[i];\n\n            // generate a parent node for each block of consecutive <nodeSize> nodes\n            while (pos < end) {\n                const nodeIndex = pos;\n\n                // calculate bbox for the new node\n                let nodeMinX = Infinity;\n                let nodeMinY = Infinity;\n                let nodeMaxX = -Infinity;\n                let nodeMaxY = -Infinity;\n                for (let i = 0; i < this.nodeSize && pos < end; i++) {\n                    nodeMinX = Math.min(nodeMinX, this._boxes[pos++]);\n                    nodeMinY = Math.min(nodeMinY, this._boxes[pos++]);\n                    nodeMaxX = Math.max(nodeMaxX, this._boxes[pos++]);\n                    nodeMaxY = Math.max(nodeMaxY, this._boxes[pos++]);\n                }\n\n                // add the new node to the tree data\n                this._indices[this._pos >> 2] = nodeIndex;\n                this._boxes[this._pos++] = nodeMinX;\n                this._boxes[this._pos++] = nodeMinY;\n                this._boxes[this._pos++] = nodeMaxX;\n                this._boxes[this._pos++] = nodeMaxY;\n            }\n        }\n    }\n\n    search(minX, minY, maxX, maxY, filterFn) {\n        if (this._pos !== this._boxes.length) {\n            throw new Error('Data not yet indexed - call index.finish().');\n        }\n\n        let nodeIndex = this._boxes.length - 4;\n        const queue = [];\n        const results = [];\n\n        while (nodeIndex !== undefined) {\n            // find the end index of the node\n            const end = Math.min(nodeIndex + this.nodeSize * 4, upperBound(nodeIndex, this._levelBounds));\n\n            // search through child nodes\n            for (let pos = nodeIndex; pos < end; pos += 4) {\n                const index = this._indices[pos >> 2] | 0;\n\n                // check if node bbox intersects with query bbox\n                if (maxX < this._boxes[pos]) continue; // maxX < nodeMinX\n                if (maxY < this._boxes[pos + 1]) continue; // maxY < nodeMinY\n                if (minX > this._boxes[pos + 2]) continue; // minX > nodeMaxX\n                if (minY > this._boxes[pos + 3]) continue; // minY > nodeMaxY\n\n                if (nodeIndex < this.numItems * 4) {\n                    if (filterFn === undefined || filterFn(index)) {\n                        results.push(index); // leaf item\n                    }\n\n                } else {\n                    queue.push(index); // node; add it to the search queue\n                }\n            }\n\n            nodeIndex = queue.pop();\n        }\n\n        return results;\n    }\n\n    neighbors(x, y, maxResults = Infinity, maxDistance = Infinity, filterFn) {\n        if (this._pos !== this._boxes.length) {\n            throw new Error('Data not yet indexed - call index.finish().');\n        }\n\n        let nodeIndex = this._boxes.length - 4;\n        const q = this._queue;\n        const results = [];\n        const maxDistSquared = maxDistance * maxDistance;\n\n        while (nodeIndex !== undefined) {\n            // find the end index of the node\n            const end = Math.min(nodeIndex + this.nodeSize * 4, upperBound(nodeIndex, this._levelBounds));\n\n            // add child nodes to the queue\n            for (let pos = nodeIndex; pos < end; pos += 4) {\n                const index = this._indices[pos >> 2] | 0;\n\n                const dx = axisDist(x, this._boxes[pos], this._boxes[pos + 2]);\n                const dy = axisDist(y, this._boxes[pos + 1], this._boxes[pos + 3]);\n                const dist = dx * dx + dy * dy;\n\n                if (nodeIndex < this.numItems * 4) { // leaf node\n                    if (filterFn === undefined || filterFn(index)) {\n                        // put a negative index if it's an item rather than a node, to recognize later\n                        q.push(-index - 1, dist);\n                    }\n                } else {\n                    q.push(index, dist);\n                }\n            }\n\n            // pop items from the queue\n            while (q.length && q.peek() < 0) {\n                const dist = q.peekValue();\n                if (dist > maxDistSquared) {\n                    q.clear();\n                    return results;\n                }\n                results.push(-q.pop() - 1);\n\n                if (results.length === maxResults) {\n                    q.clear();\n                    return results;\n                }\n            }\n\n            nodeIndex = q.pop();\n        }\n\n        q.clear();\n        return results;\n    }\n}\n\nfunction axisDist(k, min, max) {\n    return k < min ? min - k : k <= max ? 0 : k - max;\n}\n\n// binary search for the first value in the array bigger than the given\nfunction upperBound(value, arr) {\n    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        const m = (i + j) >> 1;\n        if (arr[m] > value) {\n            j = m;\n        } else {\n            i = m + 1;\n        }\n    }\n    return arr[i];\n}\n\n// custom quicksort that partially sorts bbox data alongside the hilbert values\nfunction sort(values, boxes, indices, left, right, nodeSize) {\n    if (Math.floor(left / nodeSize) >= Math.floor(right / nodeSize)) return;\n\n    const pivot = values[(left + right) >> 1];\n    let i = left - 1;\n    let j = right + 1;\n\n    while (true) {\n        do i++; while (values[i] < pivot);\n        do j--; while (values[j] > pivot);\n        if (i >= j) break;\n        swap(values, boxes, indices, i, j);\n    }\n\n    sort(values, boxes, indices, left, j, nodeSize);\n    sort(values, boxes, indices, j + 1, right, nodeSize);\n}\n\n// swap two values and two corresponding boxes\nfunction swap(values, boxes, indices, i, j) {\n    const temp = values[i];\n    values[i] = values[j];\n    values[j] = temp;\n\n    const k = 4 * i;\n    const m = 4 * j;\n\n    const a = boxes[k];\n    const b = boxes[k + 1];\n    const c = boxes[k + 2];\n    const d = boxes[k + 3];\n    boxes[k] = boxes[m];\n    boxes[k + 1] = boxes[m + 1];\n    boxes[k + 2] = boxes[m + 2];\n    boxes[k + 3] = boxes[m + 3];\n    boxes[m] = a;\n    boxes[m + 1] = b;\n    boxes[m + 2] = c;\n    boxes[m + 3] = d;\n\n    const e = indices[i];\n    indices[i] = indices[j];\n    indices[j] = e;\n}\n\n// Fast Hilbert curve algorithm by http://threadlocalmutex.com/\n// Ported from C++ https://github.com/rawrunprotected/hilbert_curves (public domain)\nfunction hilbert(x, y) {\n    let a = x ^ y;\n    let b = 0xFFFF ^ a;\n    let c = 0xFFFF ^ (x | y);\n    let d = x & (y ^ 0xFFFF);\n\n    let A = a | (b >> 1);\n    let B = (a >> 1) ^ a;\n    let C = ((c >> 1) ^ (b & (d >> 1))) ^ c;\n    let D = ((a & (c >> 1)) ^ (d >> 1)) ^ d;\n\n    a = A; b = B; c = C; d = D;\n    A = ((a & (a >> 2)) ^ (b & (b >> 2)));\n    B = ((a & (b >> 2)) ^ (b & ((a ^ b) >> 2)));\n    C ^= ((a & (c >> 2)) ^ (b & (d >> 2)));\n    D ^= ((b & (c >> 2)) ^ ((a ^ b) & (d >> 2)));\n\n    a = A; b = B; c = C; d = D;\n    A = ((a & (a >> 4)) ^ (b & (b >> 4)));\n    B = ((a & (b >> 4)) ^ (b & ((a ^ b) >> 4)));\n    C ^= ((a & (c >> 4)) ^ (b & (d >> 4)));\n    D ^= ((b & (c >> 4)) ^ ((a ^ b) & (d >> 4)));\n\n    a = A; b = B; c = C; d = D;\n    C ^= ((a & (c >> 8)) ^ (b & (d >> 8)));\n    D ^= ((b & (c >> 8)) ^ ((a ^ b) & (d >> 8)));\n\n    a = C ^ (C >> 1);\n    b = D ^ (D >> 1);\n\n    let i0 = x ^ y;\n    let i1 = b | (0xFFFF ^ (i0 | a));\n\n    i0 = (i0 | (i0 << 8)) & 0x00FF00FF;\n    i0 = (i0 | (i0 << 4)) & 0x0F0F0F0F;\n    i0 = (i0 | (i0 << 2)) & 0x33333333;\n    i0 = (i0 | (i0 << 1)) & 0x55555555;\n\n    i1 = (i1 | (i1 << 8)) & 0x00FF00FF;\n    i1 = (i1 | (i1 << 4)) & 0x0F0F0F0F;\n    i1 = (i1 | (i1 << 2)) & 0x33333333;\n    i1 = (i1 | (i1 << 1)) & 0x55555555;\n\n    return ((i1 << 1) | i0) >>> 0;\n}\n\n/**\n * @module helpers\n */\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return !!input && input.constructor === Object;\n}\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\n\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point\n * resides inside the polygon. The polygon can be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if\n * the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nfunction booleanPointInPolygon(point, polygon, options) {\n    if (options === void 0) { options = {}; }\n    // validation\n    if (!point) {\n        throw new Error(\"point is required\");\n    }\n    if (!polygon) {\n        throw new Error(\"polygon is required\");\n    }\n    var pt = getCoord(point);\n    var geom = getGeom(polygon);\n    var type = geom.type;\n    var bbox = polygon.bbox;\n    var polys = geom.coordinates;\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) {\n        return false;\n    }\n    // normalize to multipolygon\n    if (type === \"Polygon\") {\n        polys = [polys];\n    }\n    var insidePoly = false;\n    for (var i = 0; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], options.ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !options.ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) {\n                insidePoly = true;\n            }\n        }\n    }\n    return insidePoly;\n}\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] &&\n        ring[0][1] === ring[ring.length - 1][1]) {\n        ring = ring.slice(0, ring.length - 1);\n    }\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0];\n        var yi = ring[i][1];\n        var xj = ring[j][0];\n        var yj = ring[j][1];\n        var onBoundary = pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0 &&\n            (xi - pt[0]) * (xj - pt[0]) <= 0 &&\n            (yi - pt[1]) * (yj - pt[1]) <= 0;\n        if (onBoundary) {\n            return !ignoreBoundary;\n        }\n        var intersect = yi > pt[1] !== yj > pt[1] &&\n            pt[0] < ((xj - xi) * (pt[1] - yi)) / (yj - yi) + xi;\n        if (intersect) {\n            isInside = !isInside;\n        }\n    }\n    return isInside;\n}\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return (bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1]);\n}\n\n// To-Do => Improve Typescript GeoJSON handling\n/**\n * Removes redundant coordinates from any GeoJSON Geometry.\n *\n * @name cleanCoords\n * @param {Geometry|Feature} geojson Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated\n * @returns {Geometry|Feature} the cleaned input Feature/Geometry\n * @example\n * var line = turf.lineString([[0, 0], [0, 2], [0, 5], [0, 8], [0, 8], [0, 10]]);\n * var multiPoint = turf.multiPoint([[0, 0], [0, 0], [2, 2]]);\n *\n * turf.cleanCoords(line).geometry.coordinates;\n * //= [[0, 0], [0, 10]]\n *\n * turf.cleanCoords(multiPoint).geometry.coordinates;\n * //= [[0, 0], [2, 2]]\n */\nfunction cleanCoords(geojson, options) {\n    if (options === void 0) { options = {}; }\n    // Backwards compatible with v4.0\n    var mutate = typeof options === \"object\" ? options.mutate : options;\n    if (!geojson)\n        throw new Error(\"geojson is required\");\n    var type = getType(geojson);\n    // Store new \"clean\" points in this Array\n    var newCoords = [];\n    switch (type) {\n        case \"LineString\":\n            newCoords = cleanLine(geojson);\n            break;\n        case \"MultiLineString\":\n        case \"Polygon\":\n            getCoords(geojson).forEach(function (line) {\n                newCoords.push(cleanLine(line));\n            });\n            break;\n        case \"MultiPolygon\":\n            getCoords(geojson).forEach(function (polygons) {\n                var polyPoints = [];\n                polygons.forEach(function (ring) {\n                    polyPoints.push(cleanLine(ring));\n                });\n                newCoords.push(polyPoints);\n            });\n            break;\n        case \"Point\":\n            return geojson;\n        case \"MultiPoint\":\n            var existing = {};\n            getCoords(geojson).forEach(function (coord) {\n                var key = coord.join(\"-\");\n                if (!Object.prototype.hasOwnProperty.call(existing, key)) {\n                    newCoords.push(coord);\n                    existing[key] = true;\n                }\n            });\n            break;\n        default:\n            throw new Error(type + \" geometry not supported\");\n    }\n    // Support input mutation\n    if (geojson.coordinates) {\n        if (mutate === true) {\n            geojson.coordinates = newCoords;\n            return geojson;\n        }\n        return { type: type, coordinates: newCoords };\n    }\n    else {\n        if (mutate === true) {\n            geojson.geometry.coordinates = newCoords;\n            return geojson;\n        }\n        return feature({ type: type, coordinates: newCoords }, geojson.properties, {\n            bbox: geojson.bbox,\n            id: geojson.id,\n        });\n    }\n}\n/**\n * Clean Coords\n *\n * @private\n * @param {Array<number>|LineString} line Line\n * @returns {Array<number>} Cleaned coordinates\n */\nfunction cleanLine(line) {\n    var points = getCoords(line);\n    // handle \"clean\" segment\n    if (points.length === 2 && !equals(points[0], points[1]))\n        return points;\n    var newPoints = [];\n    var secondToLast = points.length - 1;\n    var newPointsLength = newPoints.length;\n    newPoints.push(points[0]);\n    for (var i = 1; i < secondToLast; i++) {\n        var prevAddedPoint = newPoints[newPoints.length - 1];\n        if (points[i][0] === prevAddedPoint[0] &&\n            points[i][1] === prevAddedPoint[1])\n            continue;\n        else {\n            newPoints.push(points[i]);\n            newPointsLength = newPoints.length;\n            if (newPointsLength > 2) {\n                if (isPointOnLineSegment(newPoints[newPointsLength - 3], newPoints[newPointsLength - 1], newPoints[newPointsLength - 2]))\n                    newPoints.splice(newPoints.length - 2, 1);\n            }\n        }\n    }\n    newPoints.push(points[points.length - 1]);\n    newPointsLength = newPoints.length;\n    if (equals(points[0], points[points.length - 1]) && newPointsLength < 4)\n        throw new Error(\"invalid polygon\");\n    if (isPointOnLineSegment(newPoints[newPointsLength - 3], newPoints[newPointsLength - 1], newPoints[newPointsLength - 2]))\n        newPoints.splice(newPoints.length - 2, 1);\n    return newPoints;\n}\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Position} pt1 point\n * @param {Position} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction equals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n/**\n * Returns if `point` is on the segment between `start` and `end`.\n * Borrowed from `@turf/boolean-point-on-line` to speed up the evaluation (instead of using the module as dependency)\n *\n * @private\n * @param {Position} start coord pair of start of line\n * @param {Position} end coord pair of end of line\n * @param {Position} point coord pair of point to check\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(start, end, point) {\n    var x = point[0], y = point[1];\n    var startX = start[0], startY = start[1];\n    var endX = end[0], endY = end[1];\n    var dxc = x - startX;\n    var dyc = y - startY;\n    var dxl = endX - startX;\n    var dyl = endY - startY;\n    var cross = dxc * dyl - dyc * dxl;\n    if (cross !== 0)\n        return false;\n    else if (Math.abs(dxl) >= Math.abs(dyl))\n        return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;\n    else\n        return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\n\n/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    switch (geojson.type) {\n        case \"Feature\":\n            return cloneFeature(geojson);\n        case \"FeatureCollection\":\n            return cloneFeatureCollection(geojson);\n        case \"Point\":\n        case \"LineString\":\n        case \"Polygon\":\n        case \"MultiPoint\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\":\n        case \"GeometryCollection\":\n            return cloneGeometry(geojson);\n        default:\n            throw new Error(\"unknown GeoJSON type\");\n    }\n}\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = { type: \"Feature\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"properties\":\n            case \"geometry\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) {\n        return cloned;\n    }\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === \"object\") {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            }\n            else if (Array.isArray(value)) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            }\n            else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        }\n        else {\n            cloned[key] = value;\n        }\n    });\n    return cloned;\n}\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = { type: \"FeatureCollection\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"features\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = { type: geometry.type };\n    if (geometry.bbox) {\n        geom.bbox = geometry.bbox;\n    }\n    if (geometry.type === \"GeometryCollection\") {\n        geom.geometries = geometry.geometries.map(function (g) {\n            return cloneGeometry(g);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    var cloned = coords;\n    if (typeof cloned[0] !== \"object\") {\n        return cloned.slice();\n    }\n    return cloned.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/*\n (c) 2013, Vladimir Agafonkin\n Simplify.js, a high-performance JS polyline simplification library\n mourner.github.io/simplify-js\n*/\n\n// to suit your point format, run search/replace for '.x' and '.y';\n// for 3D version, see 3d branch (configurability would draw significant performance overhead)\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n  var dx = p1.x - p2.x,\n    dy = p1.y - p2.y;\n\n  return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(p, p1, p2) {\n  var x = p1.x,\n    y = p1.y,\n    dx = p2.x - x,\n    dy = p2.y - y;\n\n  if (dx !== 0 || dy !== 0) {\n    var t = ((p.x - x) * dx + (p.y - y) * dy) / (dx * dx + dy * dy);\n\n    if (t > 1) {\n      x = p2.x;\n      y = p2.y;\n    } else if (t > 0) {\n      x += dx * t;\n      y += dy * t;\n    }\n  }\n\n  dx = p.x - x;\n  dy = p.y - y;\n\n  return dx * dx + dy * dy;\n}\n// rest of the code doesn't care about point format\n\n// basic distance-based simplification\nfunction simplifyRadialDist(points, sqTolerance) {\n  var prevPoint = points[0],\n    newPoints = [prevPoint],\n    point;\n\n  for (var i = 1, len = points.length; i < len; i++) {\n    point = points[i];\n\n    if (getSqDist(point, prevPoint) > sqTolerance) {\n      newPoints.push(point);\n      prevPoint = point;\n    }\n  }\n\n  if (prevPoint !== point) newPoints.push(point);\n\n  return newPoints;\n}\n\nfunction simplifyDPStep(points, first, last, sqTolerance, simplified) {\n  var maxSqDist = sqTolerance,\n    index;\n\n  for (var i = first + 1; i < last; i++) {\n    var sqDist = getSqSegDist(points[i], points[first], points[last]);\n\n    if (sqDist > maxSqDist) {\n      index = i;\n      maxSqDist = sqDist;\n    }\n  }\n\n  if (maxSqDist > sqTolerance) {\n    if (index - first > 1)\n      simplifyDPStep(points, first, index, sqTolerance, simplified);\n    simplified.push(points[index]);\n    if (last - index > 1)\n      simplifyDPStep(points, index, last, sqTolerance, simplified);\n  }\n}\n\n// simplification using Ramer-Douglas-Peucker algorithm\nfunction simplifyDouglasPeucker(points, sqTolerance) {\n  var last = points.length - 1;\n\n  var simplified = [points[0]];\n  simplifyDPStep(points, 0, last, sqTolerance, simplified);\n  simplified.push(points[last]);\n\n  return simplified;\n}\n\n// both algorithms combined for awesome performance\nfunction simplify(points, tolerance, highestQuality) {\n  if (points.length <= 2) return points;\n\n  var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n\n  points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\n  points = simplifyDouglasPeucker(points, sqTolerance);\n\n  return points;\n}\n\n/**\n * Takes a {@link GeoJSON} object and returns a simplified version. Internally uses\n * [simplify-js](http://mourner.github.io/simplify-js/) to perform simplification using the Ramer-Douglas-Peucker algorithm.\n *\n * @name simplify\n * @param {GeoJSON} geojson object to be simplified\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.tolerance=1] simplification tolerance\n * @param {boolean} [options.highQuality=false] whether or not to spend more time to create a higher-quality simplification with a different algorithm\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} a simplified GeoJSON\n * @example\n * var geojson = turf.polygon([[\n *   [-70.603637, -33.399918],\n *   [-70.614624, -33.395332],\n *   [-70.639343, -33.392466],\n *   [-70.659942, -33.394759],\n *   [-70.683975, -33.404504],\n *   [-70.697021, -33.419406],\n *   [-70.701141, -33.434306],\n *   [-70.700454, -33.446339],\n *   [-70.694274, -33.458369],\n *   [-70.682601, -33.465816],\n *   [-70.668869, -33.472117],\n *   [-70.646209, -33.473835],\n *   [-70.624923, -33.472117],\n *   [-70.609817, -33.468107],\n *   [-70.595397, -33.458369],\n *   [-70.587158, -33.442901],\n *   [-70.587158, -33.426283],\n *   [-70.590591, -33.414248],\n *   [-70.594711, -33.406224],\n *   [-70.603637, -33.399918]\n * ]]);\n * var options = {tolerance: 0.01, highQuality: false};\n * var simplified = turf.simplify(geojson, options);\n *\n * //addToMap\n * var addToMap = [geojson, simplified]\n */\nfunction simplify$1(geojson, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var tolerance = options.tolerance !== undefined ? options.tolerance : 1;\n  var highQuality = options.highQuality || false;\n  var mutate = options.mutate || false;\n\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (tolerance && tolerance < 0) throw new Error(\"invalid tolerance\");\n\n  // Clone geojson to avoid side effects\n  if (mutate !== true) geojson = clone(geojson);\n\n  geomEach(geojson, function (geom) {\n    simplifyGeom(geom, tolerance, highQuality);\n  });\n  return geojson;\n}\n\n/**\n * Simplifies a feature's coordinates\n *\n * @private\n * @param {Geometry} geometry to be simplified\n * @param {number} [tolerance=1] simplification tolerance\n * @param {boolean} [highQuality=false] whether or not to spend more time to create a higher-quality simplification with a different algorithm\n * @returns {Geometry} output\n */\nfunction simplifyGeom(geometry, tolerance, highQuality) {\n  var type = geometry.type;\n\n  // \"unsimplyfiable\" geometry types\n  if (type === \"Point\" || type === \"MultiPoint\") return geometry;\n\n  // Remove any extra coordinates\n  cleanCoords(geometry, true);\n\n  var coordinates = geometry.coordinates;\n  switch (type) {\n    case \"LineString\":\n      geometry[\"coordinates\"] = simplifyLine(\n        coordinates,\n        tolerance,\n        highQuality\n      );\n      break;\n    case \"MultiLineString\":\n      geometry[\"coordinates\"] = coordinates.map(function (lines) {\n        return simplifyLine(lines, tolerance, highQuality);\n      });\n      break;\n    case \"Polygon\":\n      geometry[\"coordinates\"] = simplifyPolygon(\n        coordinates,\n        tolerance,\n        highQuality\n      );\n      break;\n    case \"MultiPolygon\":\n      geometry[\"coordinates\"] = coordinates.map(function (rings) {\n        return simplifyPolygon(rings, tolerance, highQuality);\n      });\n  }\n  return geometry;\n}\n\n/**\n * Simplifies the coordinates of a LineString with simplify-js\n *\n * @private\n * @param {Array<number>} coordinates to be processed\n * @param {number} tolerance simplification tolerance\n * @param {boolean} highQuality whether or not to spend more time to create a higher-quality\n * @returns {Array<Array<number>>} simplified coords\n */\nfunction simplifyLine(coordinates, tolerance, highQuality) {\n  return simplify(\n    coordinates.map(function (coord) {\n      return { x: coord[0], y: coord[1], z: coord[2] };\n    }),\n    tolerance,\n    highQuality\n  ).map(function (coords) {\n    return coords.z ? [coords.x, coords.y, coords.z] : [coords.x, coords.y];\n  });\n}\n\n/**\n * Simplifies the coordinates of a Polygon with simplify-js\n *\n * @private\n * @param {Array<number>} coordinates to be processed\n * @param {number} tolerance simplification tolerance\n * @param {boolean} highQuality whether or not to spend more time to create a higher-quality\n * @returns {Array<Array<Array<number>>>} simplified coords\n */\nfunction simplifyPolygon(coordinates, tolerance, highQuality) {\n  return coordinates.map(function (ring) {\n    var pts = ring.map(function (coord) {\n      return { x: coord[0], y: coord[1] };\n    });\n    if (pts.length < 4) {\n      throw new Error(\"invalid polygon\");\n    }\n    var simpleRing = simplify(pts, tolerance, highQuality).map(function (\n      coords\n    ) {\n      return [coords.x, coords.y];\n    });\n    //remove 1 percent of tolerance until enough points to make a triangle\n    while (!checkValidity(simpleRing)) {\n      tolerance -= tolerance * 0.01;\n      simpleRing = simplify(pts, tolerance, highQuality).map(function (\n        coords\n      ) {\n        return [coords.x, coords.y];\n      });\n    }\n    if (\n      simpleRing[simpleRing.length - 1][0] !== simpleRing[0][0] ||\n      simpleRing[simpleRing.length - 1][1] !== simpleRing[0][1]\n    ) {\n      simpleRing.push(simpleRing[0]);\n    }\n    return simpleRing;\n  });\n}\n\n/**\n * Returns true if ring has at least 3 coordinates and its first coordinate is the same as its last\n *\n * @private\n * @param {Array<number>} ring coordinates to be checked\n * @returns {boolean} true if valid\n */\nfunction checkValidity(ring) {\n  if (ring.length < 3) return false;\n  //if the last point is the same as the first, it's not a triangle\n  return !(\n    ring.length === 3 &&\n    ring[2][0] === ring[0][0] &&\n    ring[2][1] === ring[0][1]\n  );\n}\n\nclass GeometryMapper {\n  /**\n   * A class meant to modify data points from the getNextDataPoint method of the {@link Track} object\n   * to geometries that coincide with their visibility on the canvas i.e. with a proper width, height,\n   * x and y. This class is NOT meant to be used by the WebGLDrawer for rendering. It is solely used\n   * by the DataProcessor to properly index the data.\n   *\n   * @param {SpecificationProcessor} specificationObject of the visualization for these geometries\n   * @param {Track} trackObject containing track info for track that these geometries are a part of\n   */\n  constructor(specificationObject, trackObject) {\n    this.specificationObject = specificationObject;\n    this.trackObject = trackObject;\n    this.track = trackObject.track;\n    this.xScale = this.specificationObject.xScale;\n    this.yScale = this.specificationObject.yScale;\n\n    const viewportForSpecification = getViewportForSpecification(\n      specificationObject.specification\n    );\n    if (specificationObject.xScale.isGenomeScale) {\n      this.xDomainWidth = 2 / 2;\n    } else {\n      this.xDomainWidth =\n        (viewportForSpecification[1] - viewportForSpecification[0]) / 2;\n    }\n\n    if (specificationObject.yScale.isGenomeScale) {\n      this.yDomainHeight = 2 / 2;\n    } else {\n      this.yDomainHeight =\n        (viewportForSpecification[3] - viewportForSpecification[2]) / 2;\n    }\n  }\n\n  /**\n   * Modifies a geometry object in place based on the specification.\n   *\n   * @param {Object} geometry an object of the form {dimensions: Array(2), coordinates: Array(2)}\n   */\n  modifyGeometry(geometry) {\n    if (this.xScale.isGenomeScale) {\n      // transforms x part into a standard format\n      if (this.trackObject.track.x.type === \"genomicRange\") {\n        this._modifyGenomicRangeX(geometry);\n      }\n      geometry.coordinates[0] = this.xScale(geometry.coordinates[0]);\n    }\n    this._modifyStandardX(geometry);\n\n    if (this.yScale.isGenomeScale) {\n      // transforms y part into a standard format\n      if (this.trackObject.track.y.type === \"genomicRange\") {\n        this._modifyGenomicRangeY(geometry);\n      }\n      geometry.coordinates[1] = this.yScale(geometry.coordinates[1]);\n    }\n    this._modifyStandardY(geometry);\n  }\n\n  _modifyStandardX(geometry) {\n    if (geometry.dimensions[0]) {\n      // Transform width from the data point into visible width on the canvas\n      geometry.dimensions[0] *= this.xDomainWidth * SIZE_UNITS;\n    }\n\n    // If there is no width, give very small width for flatbush indexing\n    geometry.dimensions[0] = geometry.dimensions[0] || 1e-10;\n  }\n\n  _modifyStandardY(geometry) {\n    if (geometry.dimensions[1]) {\n      // Transform height from the data point into visible height on the canvas\n      geometry.dimensions[1] *= this.yDomainHeight * SIZE_UNITS;\n    }\n\n    // If there is no height, give very small height for flatbush indexing\n    geometry.dimensions[1] = geometry.dimensions[1] || 1e-10;\n  }\n\n  _modifyGenomicRangeX(geometry) {\n    if (this.trackObject.track.mark === \"arc\") {\n      /**\n       * Geometry is in the form\n       * {\n       *   coordinates: [[[chr1,gene1], [chr2,gene2]], <y-coord handled in _modifyGenomicRangeY>]\n       *   dimensions: [[[chr3,gene3], [chr3,gene3]], <height handled in _modifyGenomicRangeY>]\n       * }\n       *\n       * and is transformed to\n       * {\n       *   coordinates: [x-coord between -1 and 1, <y handled elsewhere>]\n       *   dimensions: [width, <height handled elsewhere>]\n       * }\n       */\n      const standardized = transformGenomicRangeArcToStandard(\n        {\n          x: geometry.coordinates[0],\n          y: 0,\n          width: geometry.dimensions[0],\n          height: 0,\n        },\n        this.specificationObject.xScale,\n        this.specificationObject.yScale\n      );\n\n      geometry.coordinates[0] = standardized.x;\n      geometry.dimensions[0] = standardized.width;\n    } else {\n      /**\n       * Geometry is in the form\n       * {\n       *   coordinates: [[[chr1,gene1], [chr2,gene2]], <y-coord handled in _modifyGenomicRangeY>]\n       *   dimensions: [<ignored value>, <height handled elsewhere>]\n       * }\n       *\n       * and is transformed to\n       * {\n       *   coordinates: [x-coord between -1 and 1, <y handled elsewhere>]\n       *   dimensions: [width, <height handled elsewhere>]\n       * }\n       */\n\n      const standardized = transformGenomicRangeToStandard(\n        {\n          x: geometry.coordinates[0],\n          y: 0,\n        },\n        this.specificationObject.xScale,\n        this.specificationObject.yScale\n      );\n      geometry.coordinates[0] = standardized.x;\n      geometry.dimensions[0] = standardized.width;\n    }\n  }\n\n  _modifyGenomicRangeY(geometry) {\n    // See comments in _modifyGenomicRangeX\n\n    if (this.trackObject.track.mark === \"arc\") {\n      const standardized = transformGenomicRangeArcToStandard(\n        {\n          x: 0,\n          y: geometry.coordinates[1],\n          width: 0,\n          height: geometry.coordinates[1],\n        },\n        this.specificationObject.xScale,\n        this.specificationObject.yScale\n      );\n\n      geometry.coordinates[1] = standardized.y;\n      geometry.dimensions[1] = standardized.height;\n    } else {\n      const standardized = transformGenomicRangeToStandard(\n        {\n          x: 0,\n          y: geometry.coordinates[1],\n        },\n        this.specificationObject.xScale,\n        this.specificationObject.yScale\n      );\n      geometry.coordinates[1] = standardized.y;\n      geometry.dimensions[1] = standardized.height;\n    }\n  }\n}\n\nclass DataProcessor {\n  /**\n   * A class meant to handle processing of data used in the scatterplot.\n   *\n   * @param {Array} data the processor is meant to handle and index\n   */\n  constructor(specification) {\n    this.specification = specification;\n\n    console.log(\"Loading data...\");\n\n    new SpecificationProcessor(specification, this.indexData.bind(this));\n  }\n\n  /**\n   * Callback function that occurs after the specification processor has loaded the appropriate data\n   *\n   * @param {SpecificationProcessor} specificationHelper that is built in the constructor\n   */\n  indexData(specificationHelper) {\n    let totalPoints = 0;\n\n    for (const track of specificationHelper.tracks) {\n      if (!track.hasOwnData) {\n        // index at 1 means a header needs to be skipped\n        totalPoints +=\n          track.index === 1 ? track.data.length - 1 : track.data.length;\n        break;\n      }\n    }\n    specificationHelper.tracks\n      .filter((track) => track.hasOwnData)\n      .forEach(\n        (track) =>\n          (totalPoints +=\n            track.index === 1 ? track.data.length - 1 : track.data.length)\n      );\n\n    this.index = new Flatbush(totalPoints);\n    this.data = [];\n    console.log(\"Reading data...\");\n\n    // Process the global data in the specification processor\n    if (specificationHelper.data) {\n      for (let track of specificationHelper.tracks) {\n        if (!track.hasOwnData) {\n          const geometryMapper = new GeometryMapper(specificationHelper, track);\n\n          let currentPoint = track.getNextDataPoint();\n          while (currentPoint) {\n            geometryMapper.modifyGeometry(currentPoint.geometry);\n\n            this.data[\n              this.index.add(\n                currentPoint.geometry.coordinates[0],\n                currentPoint.geometry.coordinates[1],\n                currentPoint.geometry.coordinates[0] +\n                  currentPoint.geometry.dimensions[0],\n                currentPoint.geometry.coordinates[1] +\n                  currentPoint.geometry.dimensions[1]\n              )\n            ] = currentPoint;\n\n            currentPoint = track.getNextDataPoint();\n          }\n          break;\n        }\n      }\n    }\n\n    // Process the data that is local to each track\n    specificationHelper.tracks\n      .filter((track) => track.hasOwnData)\n      .forEach((track) => {\n        const geometryMapper = new GeometryMapper(specificationHelper, track);\n\n        let currentPoint = track.getNextDataPoint();\n        while (currentPoint) {\n          geometryMapper.modifyGeometry(currentPoint.geometry);\n\n          this.data[\n            this.index.add(\n              currentPoint.geometry.coordinates[0],\n              currentPoint.geometry.coordinates[1],\n              currentPoint.geometry.coordinates[0] +\n                currentPoint.geometry.dimensions[0],\n              currentPoint.geometry.coordinates[1] +\n                currentPoint.geometry.dimensions[1]\n            )\n          ] = currentPoint;\n\n          currentPoint = track.getNextDataPoint();\n        }\n      });\n\n    console.log(\"Indexing data...\");\n    this.index.finish();\n\n    console.log(\"Data processing complete.\");\n  }\n\n  /**\n   * Find the closest point in the data to a given point.\n   *\n   * @param {Array} point of two floats to find closest point to\n   * @returns closest point or undefined\n   */\n  getClosestPoint(point) {\n    let indices = this.index.neighbors(point[0], point[1], 1, 0);\n    let pointToReturn =\n      this.data[indices];\n    let distance = 0;\n    let isInside = true;\n    if (pointToReturn === undefined) {\n      indices = this.index.neighbors(point[0], point[1], 1, 5);\n      if(indices.length === 0) {\n        indices = this.index.neighbors(point[0], point[1], 1);\n      }\n      pointToReturn = this.data[indices];\n      distance = Math.sqrt(\n        (pointToReturn.geometry.coordinates[0] - point[0]) ** 2 +\n          (pointToReturn.geometry.coordinates[1] - point[1]) ** 2\n      );\n      isInside = false;\n    }\n    return { closestPoint: pointToReturn, distance, isInside, indices };\n  }\n\n  /**\n   * Get points within a bounding box.\n   *\n   * @param {Array} points Bounding rectangle in the format of [x1, y1, x2, y2]\n   * @returns points in bounding box\n   */\n  selectBox(points) {\n    const smallerX = Math.min(points[0], points[2]);\n    const smallerY = Math.min(points[1], points[3]);\n    const largerX = Math.max(points[0], points[2]);\n    const largerY = Math.max(points[1], points[3]);\n\n    let indices = this.index\n      .search(smallerX, smallerY, largerX, largerY);\n    \n    let tpoints =  indices.map((i) => this.data[i]);\n\n    return {indices, \"points\": tpoints};\n  }\n\n  /**\n   * Select points inside a given polygon. Simplify polygon with {@link @turf/simplify}\n   * which may cause precision issues with very complex polygons. Uses {@link turf}\n   * to determine what points are in polygon.\n   *\n   * @param {Array} points of a polygon to select points format: [x1,y1,x2,y2,x3,y3,...]\n   * @returns points inside lasso\n   */\n  selectLasso(points) {\n    let smallestX = Number.POSITIVE_INFINITY;\n    let largestX = Number.NEGATIVE_INFINITY;\n    let smallestY = Number.POSITIVE_INFINITY;\n    let largestY = Number.NEGATIVE_INFINITY;\n    const polygonPoints = [];\n    for (let i = 0; i < points.length; i += 2) {\n      if (points[i] < smallestX) smallestX = points[i];\n      if (points[i] > largestX) largestX = points[i];\n      if (points[i + 1] < smallestY) smallestY = points[i + 1];\n      if (points[i + 1] > largestY) largestY = points[i + 1];\n      polygonPoints.push([points[i], points[i + 1]]);\n    }\n\n    polygonPoints.push([...polygonPoints[0]]); // First and last must be same position\n\n    const candidatePoints = this.selectBox([\n      smallestX,\n      smallestY,\n      largestX,\n      largestY,\n    ]);\n\n    const boundingPolygon = polygon([polygonPoints]);\n\n    const simplifiedBoundingPolygon = simplify$1(boundingPolygon, {\n      tolerance: 0.01,\n      highQuality: false,\n    });\n\n    let findices = [];\n    let fpoints = candidatePoints.points.filter((point, i) => {\n      let tbool = booleanPointInPolygon(\n        point.geometry.coordinates,\n        simplifiedBoundingPolygon\n      );\n\n      if (tbool) findices.push(candidatePoints.indices[i]);\n\n      return tbool;\n    });\n\n    return {\"indices\": findices, \"points\": fpoints}\n  }\n}\n\n/**\n * The data processor worker is meant to be an interface between the main thread\n * containing the {@link WebGLVis} a {@link DataProcessor}. It's main purpose\n * is to receive messages from the WebGLVis, call the appropriate method of\n * the DataProcessor, then post a message of the results of the method back to\n * the WebGLVis.\n */\n\nself.onmessage = (message) => {\n  switch (message.data.type) {\n    case \"init\":\n      self.processor = new DataProcessor(message.data.specification);\n      break;\n    case \"selectBox\":\n      postMessage({\n        type: message.data.type,\n        selection: self.processor.selectBox(message.data.points),\n        bounds: message.data.points,\n      });\n      break;\n    case \"selectLasso\":\n      postMessage({\n        type: message.data.type,\n        selection: self.processor.selectLasso(message.data.points),\n        bounds: message.data.points,\n      });\n      break;\n    case \"getClosestPoint\":\n    case \"getClickPoint\":\n      const result = self.processor.getClosestPoint(message.data.point);\n      postMessage({\n        type: message.data.type,\n        ...result,\n      });\n      break;\n    default:\n      console.error(`Received unknown message type: ${message.type}`);\n  }\n};\n"],"names":["formatDecimalParts","x","p","i","toExponential","indexOf","coefficient","slice","length","exponent","Math","abs","NaN","prefixExponent","re","formatSpecifier","specifier","match","exec","Error","FormatSpecifier","fill","align","sign","symbol","zero","width","comma","precision","trim","type","this","undefined","formatRounded","d","Array","join","prototype","toString","max","formatTypes","%","toFixed","round","toLocaleString","replace","e","f","g","toPrecision","min","floor","n","toUpperCase","identity","locale","format","map","prefixes","formatLocale","grouping","thousands","group","call","Number","value","t","j","push","substring","reverse","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","newFormat","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","c","valuePrefix","valueSuffix","valueNegative","isNaN","s","out","i1","i0","formatTrim","charCodeAt","Infinity","padding","formatPrefix","k","pow","GenomeScale","constructor","genomeId","domain","genomeSizes","console","error","concat","startChr","startPair","split","parseInt","endChr","endPair","mapPairToGenomeIndex","chrSizes","chrStarts","Map","cumulativeTotal","forEach","key","set","chr","pairNum","get","createPairMapperToGenome","firstPairInDomain","lastPairInDomain","mapGenomeIndexToClipSpace","scale","mapGenomeIndexToClipSpaceInverse","toClipSpaceFromParts","pair","toClipSpaceFromString","pairStr","inverse","num","chrId","chrLoc","formatting","arguments","genomeSpot","chrKey","pairCount","entries","getMidpoint","chr1","gene1","chr2","gene2","x1","x2","middleGene","gene","getTickCoordsAndLabels","start","end","toReturn","suggestedFormat","difference","magnitude","log10","startingValue","step","currValue","keys","tickCoords","tickLabels","coord","toCallable","func","args","isGenomeScale","bind","completeScale","finalEntry","size","hg38","hg19","mm9","mm10","mm39","define","factory","extend","parent","definition","Object","create","Color","darker","brighter","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","m","l","rgbn","Rgb","rgba","hsla","hasOwnProperty","r","b","a","rgbConvert","o","opacity","rgb$1","rgb_formatHex","hex","rgb_formatRgb","h","Hsl","hslConvert","hsl2rgb","m1","m2","range","domainLength","slope","intercept","rgbToHex","rgbStringToHex","asStr","colorSpecifierToHex","asColor","getViewportForSpecification","specification","smallestX","POSITIVE_INFINITY","largestX","NEGATIVE_INFINITY","smallestY","largestY","tracks","track","xDomain","yDomain","y","height","copy","channels","assign","displayable","formatHsl","getScaleForSpecification","dimension","genome","genomic","includes","viewport","geneScale","smallestGene","largestGene","smallestGeneValue","largestGeneValue","constant","linear","gamma","nogamma","exponential","rgbGamma","spline","rgbBasis","values","v1","v2","v0","v3","t1","t2","t3","basis","colors","radians","PI","degrees","A","B","C","D","E","ED","EB","BC_DA","cubehelix$2","Cubehelix","bl","sqrt","atan2","cubehelixConvert","cubehelix$1","hue","cubehelixGamma","cubehelix","cosh","cos","sinh","sin","cubehelixLong","SIZE_UNITS","transformGenomicRangeToStandard","mark","xScale","yScale","isArray","y1","transformGenomicRangeArcToStandard","x1ClipSpace","y2","y1ClipSpace","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","Tableau10","ramp$1","scheme","scheme$q","BrBG","scheme$p","PRGn","scheme$o","PiYG","scheme$n","PuOr","scheme$m","RdBu","scheme$l","RdGy","scheme$k","RdYlBu","scheme$j","RdYlGn","scheme$i","Spectral","scheme$h","BuGn","scheme$g","BuPu","scheme$f","GnBu","scheme$e","OrRd","scheme$d","PuBuGn","scheme$c","PuBu","scheme$b","PuRd","scheme$a","RdPu","scheme$9","YlGnBu","scheme$8","YlGn","scheme$7","YlOrBr","scheme$6","YlOrRd","scheme$5","Blues","scheme$4","Greens","scheme$3","Greys","scheme$2","Purples","scheme$1","Reds","Oranges","warm","cool","c$1","pi_1_3","pi_2_3","ramp","viridis","magma","inferno","plasma","d3","freeze","__proto__","schemeCategory10","schemeAccent","schemeDark2","schemePaired","schemePastel1","schemePastel2","schemeSet1","schemeSet2","schemeSet3","schemeTableau10","interpolateBrBG","schemeBrBG","interpolatePRGn","schemePRGn","interpolatePiYG","schemePiYG","interpolatePuOr","schemePuOr","interpolateRdBu","schemeRdBu","interpolateRdGy","schemeRdGy","interpolateRdYlBu","schemeRdYlBu","interpolateRdYlGn","schemeRdYlGn","interpolateSpectral","schemeSpectral","interpolateBuGn","schemeBuGn","interpolateBuPu","schemeBuPu","interpolateGnBu","schemeGnBu","interpolateOrRd","schemeOrRd","interpolatePuBuGn","schemePuBuGn","interpolatePuBu","schemePuBu","interpolatePuRd","schemePuRd","interpolateRdPu","schemeRdPu","interpolateYlGnBu","schemeYlGnBu","interpolateYlGn","schemeYlGn","interpolateYlOrBr","schemeYlOrBr","interpolateYlOrRd","schemeYlOrRd","interpolateBlues","schemeBlues","interpolateGreens","schemeGreens","interpolateGreys","schemeGreys","interpolatePurples","schemePurples","interpolateReds","schemeReds","interpolateOranges","schemeOranges","interpolateCividis","interpolateCubehelixDefault","interpolateRainbow","ts","interpolateWarm","interpolateCool","interpolateSinebow","interpolateTurbo","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","DEFAULT_CHANNELS","numComponents","shape","DEFAULT_COLOR_SCHEME","SHAPES","SpecificationProcessor","callback","index","defaultData","dataPromise","fetch","then","response","text","data","isInlineData","Track","allPromises","filter","Promise","all","getNextTrack","processHeadersAndMappers","hasOwnData","headers","channelMaps","channel","buildMapperForChannel","getNextDataPoint","geometry","coordinates","dimensions","splitted","header","currRow","rawHeight","rawWidth","getNextMark","mapper","channelInfo","attributeIndex","attribute","attrMapper","buildMapperForInlineChannel","buildMapperForQuantitiveChannel","buildMapperForCategoricalChannel","chrAttributeIndex","chrAttribute","geneAttributeIndex","geneAttribute","buildMapperForGenomicChannel","row","genomicAttributeIndices","startAttribute","endAttribute","buildMapperForGenomicRangeChannel","parseFloat","info","inlineValue","minOpacity","minSize","maxSize","d3colorScale","colorScheme","zeroToOneScale","attrValue","minWidth","maxWidth","minHeight","maxHeight","categoryTracker","channelScale","cardinality","categoryId","has","startsWith","genomeStart","genomeEnd","FlatQueue","ids","clear","id","pos","parentValue","pop","top","halfLength","left","right","bestIndex","bestValue","rightValue","peek","peekValue","ARRAY_TYPES","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","Flatbush","from","ArrayBuffer","magic","versionAndType","nodeSize","numItems","ArrayType","numNodes","_levelBounds","ceil","IndexArrayType","arrayTypeIndex","nodesByteSize","BYTES_PER_ELEMENT","_boxes","_indices","_pos","minX","minY","maxX","maxY","_queue","add","finish","hilbertValues","hilbert","sort","nodeIndex","nodeMinX","nodeMinY","nodeMaxX","nodeMaxY","search","filterFn","queue","results","upperBound","neighbors","maxResults","maxDistance","q","maxDistSquared","dx","axisDist","dy","dist","arr","boxes","indices","pivot","swap","temp","feature","geom","properties","options","feat","bbox","getCoords","coords","booleanPointInPolygon","point","polygon","geojson","pt","getCoord","polys","inBBox","insidePoly","inRing","ignoreBoundary","inHole","ring","isInside","xi","yi","xj","yj","cleanLine","line","points","equals","newPoints","secondToLast","newPointsLength","prevAddedPoint","isPointOnLineSegment","splice","pt1","pt2","startX","startY","endX","endY","dxl","dyl","clone","cloneFeature","cloned","features","cloneFeatureCollection","cloneGeometry","cloneProperties","item","geometries","deepSlice","getSqDist","p1","p2","getSqSegDist","simplifyDPStep","first","last","sqTolerance","simplified","maxSqDist","sqDist","simplifyDouglasPeucker","simplify","tolerance","highestQuality","prevPoint","len","simplifyRadialDist","simplify$1","input","highQuality","mutate","stopG","geometryMaybeCollection","isGeometryCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","isFeature","stop","geomEach","_name","getType","newCoords","polygons","polyPoints","existing","cleanCoords","simplifyLine","lines","simplifyPolygon","rings","simplifyGeom","z","pts","simpleRing","checkValidity","GeometryMapper","specificationObject","trackObject","viewportForSpecification","xDomainWidth","yDomainHeight","modifyGeometry","_modifyGenomicRangeX","_modifyStandardX","_modifyGenomicRangeY","_modifyStandardY","standardized","DataProcessor","log","indexData","specificationHelper","totalPoints","geometryMapper","currentPoint","getClosestPoint","pointToReturn","distance","closestPoint","selectBox","smallerX","smallerY","largerX","largerY","tpoints","selectLasso","polygonPoints","candidatePoints","simplifiedBoundingPolygon","_i","coordinates_1","findices","fpoints","tbool","self","onmessage","message","processor","postMessage","selection","bounds","result"],"sourceRoot":""}